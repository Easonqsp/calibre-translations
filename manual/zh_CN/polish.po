# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-18 08:08+0530\n"
"PO-Revision-Date: 2014-07-18 02:41+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Chinese (China) (http://www.transifex.com/projects/p/calibre/language/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# a9b620b37bd14c7399ec3ac1bd8bd63a
#: ../../polish.rst:7
msgid "API Documentation for the ebook editing tools"
msgstr ""

# bd83d8894108409a9b6f77f8fef2c9e4
#: ../../polish.rst:9
msgid ""
"The ebook editing tools consist of a "
":class:`calibre.ebooks.oeb.polish.container.Container` object that "
"represents a book as a collection of HTML + resource files, and various "
"tools that can be used to perform operations on the container. All the tools"
" are in the form of module level functions in the various "
"``calibre.ebooks.oeb.polish.*`` modules."
msgstr ""

# 4e4f3ca1990a4f37aa48b00252b8f616
#: ../../polish.rst:18
msgid "You obtain a container object for a book at a path like this::"
msgstr ""

# 222877ed00034a3ea34722a762e308da
#: ../../polish.rst:23
msgid ""
"If you are writing a plugin for the ebook editor, you get the current "
"container for the book being edited like this::"
msgstr ""

# 329bbf9466594524a82868e75ad769dd
#: ../../polish.rst:33
msgid "The Container object"
msgstr ""

# 66b840d51d824469829671456579e72a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:1
msgid ""
"A container represents an Open EBook as a directory full of files and an opf"
" file. There are two important concepts:"
msgstr ""

# 3da7f063e5af4c22943487aa1bf04f0a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:4
msgid ""
"The root directory. This is the base of the ebook. All the ebooks files are "
"inside this directory or in its sub-directories."
msgstr ""

# 3691a3f333b84da1a0cca2b277fa5c27
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:7
msgid ""
"Names: These are paths to the books' files relative to the root directory. "
"They always contain POSIX separators and are unquoted. They can be thought "
"of as canonical identifiers for files in the book. Most methods on the "
"container object work with names. Names are always in the NFC unicode normal"
" form."
msgstr ""

# 845fd909937c4743af22d7aa02ca704b
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:13
msgid ""
"Clones: the container object supports efficient on-disk cloning, which is "
"used to implement checkpoints in the ebook editor. In order to make this "
"work, you should never access files on the filesystem directly. Instead, use"
" :meth:`raw_data` or :meth:`open` to read/write to component files in the "
"book."
msgstr ""

# 29374edd28fe442cab0f97409a29ba0a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:18
msgid ""
"When converting between hrefs and names use the methods provided by this "
"class, they assume all hrefs are quoted."
msgstr ""

# 9788f3086c8f440eb7135a31de02619c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.abspath_to_name:1
msgid "Convert an absolute path to a canonical name relative to :attr:`root`"
msgstr ""

# 59d14eb1003d46119dfebf64ccaac144
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.abspath_to_name:3
msgid ""
"The base directory. By default the root for this container object is used."
msgstr ""

# 124cdef0945140faba1019b7dfd2b253
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.add_file:1
msgid ""
"Add a file to this container. Entries for the file are automatically created"
" in the OPF manifest and spine (if the file is a text document)"
msgstr ""

# 5b41aef3b7bb48159dc596e09e97f6a1
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.add_name_to_manifest:1
msgid ""
"Add an entry to the manifest for a file with the specified name. Returns the"
" manifest id."
msgstr ""

# df3d2059c02b45279ef2df023284d32d
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.book_type:1
msgid "The type of book (epub for EPUB files and azw3 for AZW3 files)"
msgstr ""

# 6efad8c67ef8479381501e9a2ce36353
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.commit:1
msgid ""
"Commit all dirtied parsed objects to the filesystem and write out the ebook "
"file at outpath. :param output: The path to write the saved ebook file to. "
"If None, the path of the original book file is used. :param keep_parsed: If "
"True the parsed representations of committed items are kept in the cache."
msgstr ""

# 1c40b1b35dfb4a9dac517a577a66642a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.commit_item:1
msgid ""
"Commit a parsed object to disk (it is serialized and written to the "
"underlying file). If ``keep_parsed`` is True the parsed representation is "
"retained in the cache. See also: :meth:`parsed`"
msgstr ""

# f9df6b546c4b43d990685d499db98b2b
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.decode:1
msgid "Automatically decode ``data`` into a ``unicode`` object."
msgstr ""

# 17e96bd0e0bc4994864edfc5f89cd1ea
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.decode:3
msgid ""
"Normalize returned unicode to the NFC normal form as is required by both the"
" EPUB and AZW3 formats."
msgstr ""

# 71c84f057e0d4b86b9156b7c0b85e644
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.dirty:1
msgid ""
"Mark the parsed object corresponding to name as dirty. See also: "
":meth:`parsed`."
msgstr ""

# 7c92384e4487441490e75921b3b6a3cb
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.exists:1
msgid ""
"True iff a file corresponding to the canonical name exists. Note that this "
"function suffers from the limitations of the underlying OS filesystem, in "
"particular case (in)sensitivity. So on a case insensitive filesystem this "
"will return True even if the case of name is different from the case of the "
"underlying filesystem file. See also :meth:`has_name`"
msgstr ""

# f77c07e9615b492bba7626b40690e74d
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.filesize:1
msgid ""
"Return the size in bytes of the file represented by the specified canonical "
"name. Automatically handles dirtied parsed objects. See also: :meth:`parsed`"
msgstr ""

# 2f509894e28347cb9f78b2054153fdb0
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.generate_item:1
msgid ""
"Add an item to the manifest with href derived from the given name. Ensures "
"uniqueness of href and id automatically. Returns generated item."
msgstr ""

# 88347186959d4f13adb3ea0955f67310
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.guess_type:1
msgid ""
"Return the expected mimetype for the specified file name based on its "
"extension."
msgstr ""

# 26dd859970e3426c95c921d79a4980f2
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.guide_type_map:1
msgid "Mapping of guide type to canonical name"
msgstr ""

# 23c5b9bff14940868bbdd4ecba50a9ce
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.has_name:1
msgid ""
"Return True iff a file with the same canonical name as that specified "
"exists. Unlike :meth:`exists` this method is always case-sensitive."
msgstr ""

# db6b6df05e764a6796a4b12a6c29fea9
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.href_to_name:1
msgid ""
"Convert an href (relative to base) to a name. base must be a name or None, "
"in which case self.root is used."
msgstr ""

# c731e09ae7964039a7dc3d5e1b39f3df
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.insert_into_xml:1
msgid ""
"Insert item into parent (or append if index is None), fixing indentation. "
"Only works with self closing items."
msgstr ""

# 383c58c644b24ef99c71e624b28e9019
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.iterlinks:1
msgid ""
"Iterate over all links in name. If get_line_numbers is True the yields "
"results of the form (link, line_number, offset). Where line_number is the "
"line_number at which the link occurs and offset is the number of characters "
"from the start of the line. Note that offset could actually encompass "
"several lines if not zero."
msgstr ""

# 16cc22eae1654851a4ae3de4344f8b68
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.manifest_id_map:1
msgid "Mapping of manifest id to canonical names"
msgstr ""

# b927e8a25a4340569d99e92d04673d03
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.manifest_type_map:1
msgid ""
"Mapping of manifest media-type to list of canonical names of that media-type"
msgstr ""

# df81c792aa084a439974b0d293e59b00
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.mi:1
msgid ""
"The metadata of this book as a Metadata object. Note that this object is "
"constructed on the fly every time this property is requested, so use it "
"sparingly."
msgstr ""

# 727c285328b34a10aa6f2d82b9033c90
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.name_to_abspath:1
msgid "Convert a canonical name to an absolute OS dependant path"
msgstr ""

# 7ee2bf3fd6864939bc911b0b8e861f81
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.name_to_href:1
msgid ""
"Convert a name to a href relative to base, which must be a name or None in "
"which case self.root is used as the base"
msgstr ""

# 9dbd3c5e68d34228a5fba716b268bb2e
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_must_not_be_changed:1
msgid ""
"Set of names that must never be renamed. Depends on the ebook file format."
msgstr ""

# 403dcff545914f7aa86f14110e11ff89
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_must_not_be_removed:1
msgid ""
"Set of names that must never be deleted from the container. Depends on the "
"ebook file format."
msgstr ""

# f1b3cc3346c4422e84b6bca9aa8927f4
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_need_not_be_manifested:1
msgid ""
"Set of names that are allowed to be missing from the manifest. Depends on "
"the ebook file format."
msgstr ""

# fe10cf3b5eb9401da5772a38e61da8b8
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.open:1
msgid ""
"Open the file pointed to by name for direct read/write. Note that this will "
"commit the file if it is dirtied and remove it from the parse cache. You "
"must finish with this file before accessing the parsed version of it again, "
"or bad things will happen."
msgstr ""

# 1ff6010473e84736b29bd6208231eed9
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf:1
msgid "The parsed OPF file"
msgstr ""

# e4b8d616be9b48d7a88e10692d75a901
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_get_or_create:1
msgid ""
"Convenience method to either return the first XML element with the specified"
" name or create it under the opf:package element and then return it, if it "
"does not already exist."
msgstr ""

# b09f321903044b95baa71c9ca2c074c2
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_version:1
msgid "The version set on the OPF's <package> element"
msgstr ""

# 867b0e9a7bc4454c8ec83b4fb9674312
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_xpath:1
msgid ""
"Convenience method to evaluate an XPath expression on the OPF file, has the "
"opf: and dc: namespace prefixes pre-defined."
msgstr ""

# 47ba4c6815d747a78b8abaeb814b880c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.parsed:1
msgid ""
"Return a parsed representation of the file specified by name. For HTML and "
"XML files an lxml tree is returned. For CSS files a cssutils stylesheet is "
"returned. Note that parsed objects are cached for performance. If you make "
"any changes to the parsed object, you must call :meth:`dirty` so that the "
"container knows to update the cache. See also :meth:`replace`."
msgstr ""

# 3d1b332e2a5242a481f05507cb4058e7
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:1
msgid "Return the raw data corresponding to the file specified by name"
msgstr ""

# 945735bebf2a4288881ed570d1083a94
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:3
msgid ""
"If True and the file has a text based mimetype, decode it and return a "
"unicode object instead of raw bytes."
msgstr ""

# 50b00793348447f38723b2af4efa0d85
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:4
msgid ""
"If True the returned unicode object is normalized to the NFC normal form as "
"is required for the EPUB and AZW3 file formats."
msgstr ""

# b168f3dbf1ef431083cf79e2d5fde75d
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.relpath:1
msgid ""
"Convert an absolute path (with os separators) to a path relative to base "
"(defaults to self.root). The relative path is *not* a name. Use "
":meth:`abspath_to_name` for that."
msgstr ""

# 8cc31ec1df224b44a1f50efdb37c7487
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_from_spine:1
msgid ""
"Remove the specified items (by canonical name) from the spine. If "
"``remove_if_no_longer_in_spine`` is True, the items are also deleted from "
"the book, not just from the spine."
msgstr ""

# a8e8cbcee5204f19a78d9830854940fb
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_from_xml:1
msgid ""
"Removes item from parent, fixing indentation (works only with self closing "
"items)"
msgstr ""

# c734ce7441e746b6ace9950c5ade4f60
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_item:1
msgid ""
"Remove the item identified by name from this container. This removes all "
"references to the item in the OPF manifest, guide and spine as well as from "
"any internal caches."
msgstr ""

# d726679b953041a6b3b1eb0f59e57460
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.rename:1
msgid ""
"Renames a file from current_name to new_name. It automatically rebases all "
"links inside the file if the directory the file is in changes. Note however,"
" that links are not updated in the other files that could reference this "
"file. This is for performance, such updates should be done once, in bulk."
msgstr ""

# ba7e031675f640dfad0018751d1e9ad2
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.replace:1
msgid ""
"Replace the parsed object corresponding to name with obj, which must be a "
"similar object, i.e. an lxml tree for HTML/XML or a cssutils stylesheet for "
"a CSS file."
msgstr ""

# d3a443db299e48b68d1668017153f006
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.replace_links:1
msgid ""
"Replace all links in name using replace_func, which must be a callable that "
"accepts a URL and returns the replaced URL. It must also have a 'replaced' "
"attribute that is set to True if any actual replacement is done. Convenient "
"ways of creating such callables are using the :class:`LinkReplacer` and "
":class:`LinkRebaser` classes."
msgstr ""

# 4c06bd2262e14ef5a90f6bf43fd5f900
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.serialize_item:1
msgid ""
"Convert a parsed object (identified by canonical name) into a bytestring. "
"See :meth:`parsed`."
msgstr ""

# c22b9719f0f0403aaac9102508d78675
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.set_spine:1
msgid ""
"Set the spine to be spine_items where spine_items is an iterable of the form"
" (name, linear). Will raise an error if one of the names is not present in "
"the manifest."
msgstr ""

# 30be3cf2225c410b8b7933da3ad3cf0e
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_items:1
msgid ""
"An iterator yielding canonical name for every item in the books' spine. See "
"also: :attr:`spine_iter` and :attr:`spine_items`."
msgstr ""

# f4dff2450a9842c0becffda9389f9093
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_iter:1
msgid ""
"An iterator that yields item, name is_linear for every item in the books' "
"spine. item is the lxml element, name is the canonical file name and "
"is_linear is True if the item is linear. See also: :attr:`spine_names` and "
":attr:`spine_items`."
msgstr ""

# d5a789aa40664283959aa1fa66f03d02
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_names:1
msgid ""
"An iterator yielding name and is_linear for every item in the books' spine. "
"See also: :attr:`spine_iter` and :attr:`spine_items`."
msgstr ""

# 75c19cb117af40b5988b08275aa621ed
#: ../../polish.rst:39
msgid "Managing component files in a container"
msgstr ""

# c70d23d4e30445d89d7681101360b2e1
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:1
msgid ""
"Replace links to files in the container. Will iterate over all files in the "
"container and change the specified links in them."
msgstr ""

# 6a5614de1c25489e8bf30b6f55db8f2b
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:3
msgid ""
"A mapping of old canonical name to new canonical name. For example: "
":code:`{'images/old.png': 'images/new.png'}`"
msgstr ""

# ee6b2da340d247f280e22ae49e9177ba
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:4
msgid ""
"A callable that takes two arguments ``(name, anchor)`` and returns a new "
"anchor. This is useful if you need to change the anchors in HTML files. By "
"default, it does nothing."
msgstr ""

# b207d68b76624dae845f73a3551d7a45
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:7
msgid "If False, links are not replaced in the OPF file."
msgstr ""

# 2ca84c1868c341f48a7caa25cb0395a1
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.rename_files:1
msgid ""
"Rename files in the container, automatically updating all links to them."
msgstr ""

# 51254c52903448e2974ab0b4bb6d4fa6
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.rename_files:3
msgid ""
"A mapping of old canonical name to new canonical name, for example: "
":code:`{'text/chapter1.html': 'chapter1.html'}`."
msgstr ""

# 37406a3f4aa0435486b5acc8bd9d8583
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.get_recommended_folders:1
msgid ""
"Return the folders that are recommended for the given filenames. The "
"recommendation is based on where the majority of files of the same type are "
"located in the container. If no files of a particular type are present, the "
"recommended folder is assumed to be the folder containing the OPF file."
msgstr ""

# d3b123ae37cd47a79a499218ca92f8cf
#: ../../polish.rst:50
msgid "Pretty printing and auto fixing parse errors"
msgstr ""

# f47a903396de4cb182e7245744396593
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.fix_html:1
msgid ""
"Fix any parsing errors in the HTML represented as a string in raw. Fixing is"
" done using the HTML 5 parsing algorithm."
msgstr ""

# 64d35750729f45fda35bc010127f0ecd
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.fix_all_html:1
msgid ""
"Fix any parsing errors in all HTML files in the container. Fixing is done "
"using the HTML 5 parsing algorithm."
msgstr ""

# f30f5e92f55449ee99098d16f57e8f6b
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_html:1
msgid "Pretty print the HTML represented as a string in raw"
msgstr ""

# cf84280ad95a482184fda2818808efd7
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_css:1
msgid "Pretty print the CSS represented as a string in raw"
msgstr ""

# 4878b73adf2346fd9dc961dd59e1a7ec
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_xml:1
msgid ""
"Pretty print the XML represented as a string in raw. If ``name`` is the name"
" of the OPF, extra OPF-specific prettying is performed."
msgstr ""

# afb50e12f56041cca5a8ca9a5f32d86e
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_all:1
msgid "Pretty print all HTML/CSS/XML files in the container"
msgstr ""

# df3c96fd7fdd4113bc05c58f21c34764
#: ../../polish.rst:68
msgid "Managing book jackets"
msgstr ""

# 8591d13e125b439f861ec4b59ac3120e
#: ../../../src/calibre/ebooks/oeb/polish/jacket.pydocstring of
#: calibre.ebooks.oeb.polish.jacket.remove_jacket:1
msgid ""
"Remove an existing jacket, if ant. Returns False if no existing jacket was "
"found."
msgstr ""

# 169fe39900e840ebab1a42365b4078db
#: ../../../src/calibre/ebooks/oeb/polish/jacket.pydocstring of
#: calibre.ebooks.oeb.polish.jacket.add_or_replace_jacket:1
msgid ""
"Either create a new jacket from the book's metadata or replace an existing "
"jacket. Returns True if an existing jacket was replaced."
msgstr ""

# 552883bd68334b97873ed4cc1d834f3c
#: ../../polish.rst:77
msgid "Splitting and merging of files"
msgstr ""

# ed51ae19e38e4ce68447dca94861a09b
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:1
msgid ""
"Split the file specified by name at the position specified by loc_or_xpath. "
"Splitting automatically migrates all links and references to the affected "
"files."
msgstr ""

# 736663379a9247c5a3de66e0f7628c87
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:5
msgid ""
"Should be an XPath expression such as //h:div[@id=\"split_here\"]. Can also "
"be a *loc* which is used internally to implement splitting in the preview "
"panel."
msgstr ""

# 4515d56ff83547048cd5e51063a962a5
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:8
msgid ""
"If True the split occurs before the identified element otherwise after it."
msgstr ""

# 00fa663b21e94188930b702e25ed1864
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:9
msgid "Used internally"
msgstr ""

# 16e1c7f3ad7c40b6b20f300552eb3895
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.multisplit:1
msgid ""
"Split the specified file at multiple locations (all tags that match the "
"specified XPath expression. See also: :func:`split`. Splitting automatically"
" migrates all links and references to the affected files."
msgstr ""

# 946929379c3f44e4974b797bd2c56b98
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.multisplit:5
msgid ""
"If True the splits occur before the identified element otherwise after it."
msgstr ""

# 07ae1e00c29b4d6784d6d81648c9e681
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:1
msgid ""
"Merge the specified files into a single file, automatically migrating all "
"links and references to the affected files. The file must all either be HTML"
" or CSS files."
msgstr ""

# d36f35ca2af24c298417f5a945c23c6d
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:4
msgid "Must be either ``'text'`` for HTML files or ``'styles'`` for CSS files"
msgstr ""

# c4b6587200954ad5ac9469f5ceae5d00
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:5
msgid "The list of files to be merged"
msgstr ""

# 0d360961a6404478bbfcae0358625e1b
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:6
msgid ""
"Which of the merged files is the *master* file, that is, the file that will "
"remain after merging."
msgstr ""

# 996e32cffaad44d5a6c7d36cb7e64134
#: ../../polish.rst:88
msgid "Managing covers"
msgstr ""

# 334fbe05e57c496fb37d4f640a7a7783
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:1
msgid "Set the cover of the book to the image pointed to by cover_path."
msgstr ""

# 99406cc539714b7b8ec49b2a785f7d22
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:3
msgid ""
"Either the absolute path to an image file or the canonical name of an image "
"in the book. When using an image int he book, you must also set options, see"
" below."
msgstr ""

# de4dd6f9f4d645d984800fd1168a46a7
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:6
msgid ""
"An optional callable that takes a single argument. It will be called with "
"information about the tasks being processed."
msgstr ""

# 4d2a198cf2ca41b78f0dc34f5db11581
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:8
msgid ""
"None or a dictionary that controls how the cover is set. The dictionary can "
"have entries: **keep_aspect**: True or False  (Preserve aspect ratio of "
"covers in EPUB) **no_svg**: True or False  (Use an SVG cover wrapper in the "
"EPUB titlepage) **existing**: True or False  (``cover_path`` refers to an "
"existing image in the book)"
msgstr ""

# 7df535828d8945c18f4fcb7d95eb3fdb
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_cover:1
msgid "Mark the specified image as the cover image."
msgstr ""

# ed10b664c23147d9980a3830f1653ebb
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_titlepage:1
msgid "Mark the specified HTML file as the titlepage of the EPUB."
msgstr ""

# b997bcb2a75e4b00b4f4d0a2e6a49aca
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_titlepage:3
msgid "If True the HTML file is moved to the start of the spine"
msgstr ""

# 536d0be4e7294092bc892d79fa6204fd
#: ../../polish.rst:99
msgid "Working with CSS"
msgstr ""

# 082a589f50084314a36510f02d94f92c
#: ../../../src/calibre/ebooks/oeb/polish/fonts.pydocstring of
#: calibre.ebooks.oeb.polish.fonts.change_font:1
msgid ""
"Change a font family from old_name to new_name. Changes all occurrences of "
"the font family in stylesheets, style tags and style attributes. If the "
"old_name refers to an embedded font, it is removed. You can set new_name to "
"None to remove the font family instead of changing it."
msgstr ""

# ea60586975204f2f9ffa0ec8bb43b6f7
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:1
msgid ""
"Remove all unused CSS rules from the book. An unused CSS rule is one that "
"does not match any actual content."
msgstr ""

# acf2775c2caf49dc903566a875f71d54
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:3
msgid ""
"An optional callable that takes a single argument. It is called with "
"information about the operations being performed."
msgstr ""

# 7b438bae6abd453580b4ed18ea24db53
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:4
msgid ""
"If True, class attributes in the HTML that do not match any CSS rules are "
"also removed."
msgstr ""

# 9ab11ca5db764354991d313e57857468
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:1
msgid "Remove the specified CSS properties from all CSS rules in the book."
msgstr ""

# 0c9d6c2fe44c4ce2aa6db7ba10021aa8
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:3
msgid ""
"Set of properties to remove. For example: :code:`{'font-family', 'color'}`."
msgstr ""

# ba82679a0a3d498f8ff373a42f35743b
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:4
msgid ""
"The files from which to remove the properties. Defaults to all HTML and CSS "
"files in the book."
msgstr ""

# 1d6224cc6eef4d4a8f5008f5b63f9f82
#: ../../polish.rst:111
msgid "Working with the Table of Contents"
msgstr ""

# ab3c48884de74e6f878242fda078286a
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_xpaths:1
msgid ""
"Generate a Table of Contents from a list of XPath expressions. Each "
"expression in the list corresponds to a level of the generate ToC. For "
"example: :code:`['//h:h1', '//h:h2', '//h:h3']` will generate a three level "
"table of contents from the ``<h1>``, ``<h2>`` and ``<h3>`` tags."
msgstr ""

# f958f1ad78744fc98de38c7cb56c7bf7
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_links:1
msgid "Generate a Table of Contents from links in the book."
msgstr ""

# 698b443b80cb4b8f814f1ef05e021300
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_files:1
msgid "Generate a Table of Contents from files in the book."
msgstr ""

# 955c8598f8604008bf2c34c2e426bb92
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.create_inline_toc:1
msgid ""
"Create an inline (HTML) Table of Contents from an existing NCX table of "
"contents."
msgstr ""

# a678b6c8576841ebb1a5dd25ca4d0103
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.create_inline_toc:3
msgid "The title for this table of contents."
msgstr ""
