# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-25 09:34+0530\n"
"PO-Revision-Date: 2014-07-25 04:07+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Turkish (http://www.transifex.com/projects/p/calibre/language/tr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# 944df3e93f6346328cd29b4681e159d1
#: ../../polish.rst:7
msgid "API Documentation for the ebook editing tools"
msgstr ""

# 230f57d29fbb4e9b9d1efbbe0ef098d3
#: ../../polish.rst:9
msgid ""
"The ebook editing tools consist of a "
":class:`calibre.ebooks.oeb.polish.container.Container` object that "
"represents a book as a collection of HTML + resource files, and various "
"tools that can be used to perform operations on the container. All the tools"
" are in the form of module level functions in the various "
"``calibre.ebooks.oeb.polish.*`` modules."
msgstr ""

# 0b4b27d4b639463bbc784edaf59954df
#: ../../polish.rst:18
msgid "You obtain a container object for a book at a path like this::"
msgstr ""

# 48a26efa3a2c4f99ae31786485769970
#: ../../polish.rst:23
msgid ""
"If you are writing a plugin for the ebook editor, you get the current "
"container for the book being edited like this::"
msgstr ""

# e4507a83431b49f7be162b00c850f8ba
#: ../../polish.rst:33
msgid "The Container object"
msgstr ""

# 4fe2b17eaaa84ea789f7933303f24190
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:1
msgid ""
"A container represents an Open EBook as a directory full of files and an opf"
" file. There are two important concepts:"
msgstr ""

# 81340221735142eca59c9c8704bc0393
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:4
msgid ""
"The root directory. This is the base of the ebook. All the ebooks files are "
"inside this directory or in its sub-directories."
msgstr ""

# e2e299fc948f43ad8e84e8fd1e65f5b0
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:7
msgid ""
"Names: These are paths to the books' files relative to the root directory. "
"They always contain POSIX separators and are unquoted. They can be thought "
"of as canonical identifiers for files in the book. Most methods on the "
"container object work with names. Names are always in the NFC unicode normal"
" form."
msgstr ""

# 276306ae1a38474ab67c47e8afead7db
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:13
msgid ""
"Clones: the container object supports efficient on-disk cloning, which is "
"used to implement checkpoints in the ebook editor. In order to make this "
"work, you should never access files on the filesystem directly. Instead, use"
" :meth:`raw_data` or :meth:`open` to read/write to component files in the "
"book."
msgstr ""

# 32c65cdb7f3b4fbda6565be54c369049
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:18
msgid ""
"When converting between hrefs and names use the methods provided by this "
"class, they assume all hrefs are quoted."
msgstr ""

# 7145fdb4b66f4eb3adbf565557941f91
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.abspath_to_name:1
msgid "Convert an absolute path to a canonical name relative to :attr:`root`"
msgstr ""

# 894fee9b0e5c4350bbc23505e3b89ea4
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.abspath_to_name:3
msgid ""
"The base directory. By default the root for this container object is used."
msgstr ""

# 46f127aab0e94ad78b2bc6959124d1b8
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.add_file:1
msgid ""
"Add a file to this container. Entries for the file are automatically created"
" in the OPF manifest and spine (if the file is a text document)"
msgstr ""

# 621aebd5fabd4deea37d1d76112643dc
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.add_name_to_manifest:1
msgid ""
"Add an entry to the manifest for a file with the specified name. Returns the"
" manifest id."
msgstr ""

# d61160545b4b4c0eb0edf3920e1dfefa
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.book_type:1
msgid "The type of book (epub for EPUB files and azw3 for AZW3 files)"
msgstr ""

# 407c3887d4a44625b7b38d479fd057f1
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.commit:1
msgid ""
"Commit all dirtied parsed objects to the filesystem and write out the ebook "
"file at outpath. :param output: The path to write the saved ebook file to. "
"If None, the path of the original book file is used. :param keep_parsed: If "
"True the parsed representations of committed items are kept in the cache."
msgstr ""

# 69f5093f1a8a41cfb39eac9a55dfb6ea
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.commit_item:1
msgid ""
"Commit a parsed object to disk (it is serialized and written to the "
"underlying file). If ``keep_parsed`` is True the parsed representation is "
"retained in the cache. See also: :meth:`parsed`"
msgstr ""

# c4731de3c48d4b489a87704af3dc8a82
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.decode:1
msgid "Automatically decode ``data`` into a ``unicode`` object."
msgstr ""

# f251a66b81c14edcb2e6d4c24d91febc
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.decode:3
msgid ""
"Normalize returned unicode to the NFC normal form as is required by both the"
" EPUB and AZW3 formats."
msgstr ""

# ee425918f42e402dae128654c49a0d1a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.dirty:1
msgid ""
"Mark the parsed object corresponding to name as dirty. See also: "
":meth:`parsed`."
msgstr ""

# ed1f2db4f1124a5c842fbbfd15feb980
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.exists:1
msgid ""
"True iff a file corresponding to the canonical name exists. Note that this "
"function suffers from the limitations of the underlying OS filesystem, in "
"particular case (in)sensitivity. So on a case insensitive filesystem this "
"will return True even if the case of name is different from the case of the "
"underlying filesystem file. See also :meth:`has_name`"
msgstr ""

# 2ed8ef36da32453985a7515c435a02b0
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.filesize:1
msgid ""
"Return the size in bytes of the file represented by the specified canonical "
"name. Automatically handles dirtied parsed objects. See also: :meth:`parsed`"
msgstr ""

# 927fd3366af54310b6a3f88ef011631a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.generate_item:1
msgid ""
"Add an item to the manifest with href derived from the given name. Ensures "
"uniqueness of href and id automatically. Returns generated item."
msgstr ""

# 861e21edd701488285bd4c989b20c762
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.guess_type:1
msgid ""
"Return the expected mimetype for the specified file name based on its "
"extension."
msgstr ""

# ddb9fc46d9e749b995a53badd366f98c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.guide_type_map:1
msgid "Mapping of guide type to canonical name"
msgstr ""

# 96103df594374b2a96fa33a022eb679f
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.has_name:1
msgid ""
"Return True iff a file with the same canonical name as that specified "
"exists. Unlike :meth:`exists` this method is always case-sensitive."
msgstr ""

# 7588486b63524676820c8041f057aec8
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.href_to_name:1
msgid ""
"Convert an href (relative to base) to a name. base must be a name or None, "
"in which case self.root is used."
msgstr ""

# fe92ecf1e8eb462ebf4f51373e3f0605
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.insert_into_xml:1
msgid ""
"Insert item into parent (or append if index is None), fixing indentation. "
"Only works with self closing items."
msgstr ""

# a969cc5ffa384f7bbb54c5b167ae1aaf
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.iterlinks:1
msgid ""
"Iterate over all links in name. If get_line_numbers is True the yields "
"results of the form (link, line_number, offset). Where line_number is the "
"line_number at which the link occurs and offset is the number of characters "
"from the start of the line. Note that offset could actually encompass "
"several lines if not zero."
msgstr ""

# 8b91b08e5f084ef284a3301a1d9b1ecd
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.manifest_id_map:1
msgid "Mapping of manifest id to canonical names"
msgstr ""

# 7e8566d1839a49a5b4e2d86d13b02ca7
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.manifest_type_map:1
msgid ""
"Mapping of manifest media-type to list of canonical names of that media-type"
msgstr ""

# db36aa7491f24df48d1ec2374c338555
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.mi:1
msgid ""
"The metadata of this book as a Metadata object. Note that this object is "
"constructed on the fly every time this property is requested, so use it "
"sparingly."
msgstr ""

# 5ed6ebc0467a443ba508a08b9ebb44af
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.name_to_abspath:1
msgid "Convert a canonical name to an absolute OS dependant path"
msgstr ""

# d0c3a00a421949a0bc4e4a40723cdc5a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.name_to_href:1
msgid ""
"Convert a name to a href relative to base, which must be a name or None in "
"which case self.root is used as the base"
msgstr ""

# 3b7a9968445c4f61b03ca0be61d73232
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_must_not_be_changed:1
msgid ""
"Set of names that must never be renamed. Depends on the ebook file format."
msgstr ""

# 3f20680afa344a5ab3a8cbc9b4c8edcd
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_must_not_be_removed:1
msgid ""
"Set of names that must never be deleted from the container. Depends on the "
"ebook file format."
msgstr ""

# d2640ecac4ad4d698d7234ba98634efb
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_need_not_be_manifested:1
msgid ""
"Set of names that are allowed to be missing from the manifest. Depends on "
"the ebook file format."
msgstr ""

# 576d9ddfb9d1441bbb9ef9e37e4d7ec1
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.open:1
msgid ""
"Open the file pointed to by name for direct read/write. Note that this will "
"commit the file if it is dirtied and remove it from the parse cache. You "
"must finish with this file before accessing the parsed version of it again, "
"or bad things will happen."
msgstr ""

# 99be32a088ec41e8a75137ec140b5540
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf:1
msgid "The parsed OPF file"
msgstr ""

# 862ccfc0590a4da6a6a3495cb31d8a21
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_get_or_create:1
msgid ""
"Convenience method to either return the first XML element with the specified"
" name or create it under the opf:package element and then return it, if it "
"does not already exist."
msgstr ""

# 27541645080a47829964840dac63a82e
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_version:1
msgid "The version set on the OPF's <package> element"
msgstr ""

# ec04d3c410054cdb9cd1154979ac5de2
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_xpath:1
msgid ""
"Convenience method to evaluate an XPath expression on the OPF file, has the "
"opf: and dc: namespace prefixes pre-defined."
msgstr ""

# 8ea904bc02674c01b279cfb62f60d4e8
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.parsed:1
msgid ""
"Return a parsed representation of the file specified by name. For HTML and "
"XML files an lxml tree is returned. For CSS files a cssutils stylesheet is "
"returned. Note that parsed objects are cached for performance. If you make "
"any changes to the parsed object, you must call :meth:`dirty` so that the "
"container knows to update the cache. See also :meth:`replace`."
msgstr ""

# 41e7cf94a69849c7954923635158373e
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:1
msgid "Return the raw data corresponding to the file specified by name"
msgstr ""

# b8a778d0a3ec436eafb585ad9617c26d
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:3
msgid ""
"If True and the file has a text based mimetype, decode it and return a "
"unicode object instead of raw bytes."
msgstr ""

# cb647bf8d7a544cc825e60096842cbbe
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:4
msgid ""
"If True the returned unicode object is normalized to the NFC normal form as "
"is required for the EPUB and AZW3 file formats."
msgstr ""

# b74218c6a88740d5844f4ec0c78ddf8a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.relpath:1
msgid ""
"Convert an absolute path (with os separators) to a path relative to base "
"(defaults to self.root). The relative path is *not* a name. Use "
":meth:`abspath_to_name` for that."
msgstr ""

# a1e6bc250b844ae799ca52717dc6e1f0
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_from_spine:1
msgid ""
"Remove the specified items (by canonical name) from the spine. If "
"``remove_if_no_longer_in_spine`` is True, the items are also deleted from "
"the book, not just from the spine."
msgstr ""

# 86eeeda94048491280a12353e74fe8b3
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_from_xml:1
msgid ""
"Removes item from parent, fixing indentation (works only with self closing "
"items)"
msgstr ""

# a16d4e983c9543f5977d3e3154ef1b73
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_item:1
msgid ""
"Remove the item identified by name from this container. This removes all "
"references to the item in the OPF manifest, guide and spine as well as from "
"any internal caches."
msgstr ""

# c5a9e76bfc6f489cbd2dd0aa34f9ac80
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.rename:1
msgid ""
"Renames a file from current_name to new_name. It automatically rebases all "
"links inside the file if the directory the file is in changes. Note however,"
" that links are not updated in the other files that could reference this "
"file. This is for performance, such updates should be done once, in bulk."
msgstr ""

# 0d72e1bb94974b95a2e3064a2c3ca7e0
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.replace:1
msgid ""
"Replace the parsed object corresponding to name with obj, which must be a "
"similar object, i.e. an lxml tree for HTML/XML or a cssutils stylesheet for "
"a CSS file."
msgstr ""

# bd3d4a6ebd2a436a9f580257cefce6b9
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.replace_links:1
msgid ""
"Replace all links in name using replace_func, which must be a callable that "
"accepts a URL and returns the replaced URL. It must also have a 'replaced' "
"attribute that is set to True if any actual replacement is done. Convenient "
"ways of creating such callables are using the :class:`LinkReplacer` and "
":class:`LinkRebaser` classes."
msgstr ""

# b238aedabce743188f373b905dcbe663
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.serialize_item:1
msgid ""
"Convert a parsed object (identified by canonical name) into a bytestring. "
"See :meth:`parsed`."
msgstr ""

# 1d0ad196554a40609c652a0c64c27e38
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.set_spine:1
msgid ""
"Set the spine to be spine_items where spine_items is an iterable of the form"
" (name, linear). Will raise an error if one of the names is not present in "
"the manifest."
msgstr ""

# 2db9549131c84a59b008bbe5c0b76caa
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_items:1
msgid ""
"An iterator yielding canonical name for every item in the books' spine. See "
"also: :attr:`spine_iter` and :attr:`spine_items`."
msgstr ""

# c01515b7539045aba7030ecdd5e8611b
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_iter:1
msgid ""
"An iterator that yields item, name is_linear for every item in the books' "
"spine. item is the lxml element, name is the canonical file name and "
"is_linear is True if the item is linear. See also: :attr:`spine_names` and "
":attr:`spine_items`."
msgstr ""

# 1c7b28f9bd01434b8b60c499c6f5685c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_names:1
msgid ""
"An iterator yielding name and is_linear for every item in the books' spine. "
"See also: :attr:`spine_iter` and :attr:`spine_items`."
msgstr ""

# 9eb531bb59a34a878b83d2320494c637
#: ../../polish.rst:39
msgid "Managing component files in a container"
msgstr ""

# 60984484d45e4089a27313c32df963ce
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:1
msgid ""
"Replace links to files in the container. Will iterate over all files in the "
"container and change the specified links in them."
msgstr ""

# 70f1dbc2530a4957bb77f50ae765d424
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:3
msgid ""
"A mapping of old canonical name to new canonical name. For example: "
":code:`{'images/old.png': 'images/new.png'}`"
msgstr ""

# 089e0477758d436c9eb569c87286c1db
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:4
msgid ""
"A callable that takes two arguments ``(name, anchor)`` and returns a new "
"anchor. This is useful if you need to change the anchors in HTML files. By "
"default, it does nothing."
msgstr ""

# 784e8e02cf974c5f8c3057c1d98898d7
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:7
msgid "If False, links are not replaced in the OPF file."
msgstr ""

# 920b75278a364e6a800dbb8256749e24
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.rename_files:1
msgid ""
"Rename files in the container, automatically updating all links to them."
msgstr ""

# fe52fa6d848c4aca83dbe0deca8761c6
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.rename_files:3
msgid ""
"A mapping of old canonical name to new canonical name, for example: "
":code:`{'text/chapter1.html': 'chapter1.html'}`."
msgstr ""

# d931fe14135043fcb940344b2428f993
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.get_recommended_folders:1
msgid ""
"Return the folders that are recommended for the given filenames. The "
"recommendation is based on where the majority of files of the same type are "
"located in the container. If no files of a particular type are present, the "
"recommended folder is assumed to be the folder containing the OPF file."
msgstr ""

# 58457a7a6e624f0fb9d1dfa96d27b01e
#: ../../polish.rst:50
msgid "Pretty printing and auto fixing parse errors"
msgstr ""

# 412db83dc2b74f3b82980b602cb13dae
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.fix_html:1
msgid ""
"Fix any parsing errors in the HTML represented as a string in raw. Fixing is"
" done using the HTML 5 parsing algorithm."
msgstr ""

# 461efeb3b9bf42c096ba67912ad807c0
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.fix_all_html:1
msgid ""
"Fix any parsing errors in all HTML files in the container. Fixing is done "
"using the HTML 5 parsing algorithm."
msgstr ""

# 7dc826cf0db648c7bcd40a13b700cca2
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_html:1
msgid "Pretty print the HTML represented as a string in raw"
msgstr ""

# fca4eae619df43b8b645a13faadff9a6
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_css:1
msgid "Pretty print the CSS represented as a string in raw"
msgstr ""

# 84c3779c1ea541319c9ae098d0ef87e7
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_xml:1
msgid ""
"Pretty print the XML represented as a string in raw. If ``name`` is the name"
" of the OPF, extra OPF-specific prettying is performed."
msgstr ""

# 43b1905d1fbc42589b10cdc2748bb4aa
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_all:1
msgid "Pretty print all HTML/CSS/XML files in the container"
msgstr ""

# aebb4a36226d423b8076ad09be3b4f02
#: ../../polish.rst:68
msgid "Managing book jackets"
msgstr ""

# e8752686f5a24779876c012607d5f148
#: ../../../src/calibre/ebooks/oeb/polish/jacket.pydocstring of
#: calibre.ebooks.oeb.polish.jacket.remove_jacket:1
msgid ""
"Remove an existing jacket, if ant. Returns False if no existing jacket was "
"found."
msgstr ""

# b48a3f08a4064de49e1471f0f5a515f3
#: ../../../src/calibre/ebooks/oeb/polish/jacket.pydocstring of
#: calibre.ebooks.oeb.polish.jacket.add_or_replace_jacket:1
msgid ""
"Either create a new jacket from the book's metadata or replace an existing "
"jacket. Returns True if an existing jacket was replaced."
msgstr ""

# 85ae59108d3b44d8ae6e0b79270f377b
#: ../../polish.rst:77
msgid "Splitting and merging of files"
msgstr ""

# 5a27b7d3628b41fa8ee08fce7f4e73e6
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:1
msgid ""
"Split the file specified by name at the position specified by loc_or_xpath. "
"Splitting automatically migrates all links and references to the affected "
"files."
msgstr ""

# a8a46fbe4dc4492ab8949aae2fd6a03b
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:5
msgid ""
"Should be an XPath expression such as //h:div[@id=\"split_here\"]. Can also "
"be a *loc* which is used internally to implement splitting in the preview "
"panel."
msgstr ""

# b2ea14e5648f4da7a524f1480b492bde
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:8
msgid ""
"If True the split occurs before the identified element otherwise after it."
msgstr ""

# 8bb937c8676846aead034596d52bdbf2
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:9
msgid "Used internally"
msgstr ""

# 5e4b74faccbd4cf79d27f6dc500979b2
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.multisplit:1
msgid ""
"Split the specified file at multiple locations (all tags that match the "
"specified XPath expression. See also: :func:`split`. Splitting automatically"
" migrates all links and references to the affected files."
msgstr ""

# fd5e658b19c8460fb14de4fe7b18c5c5
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.multisplit:5
msgid ""
"If True the splits occur before the identified element otherwise after it."
msgstr ""

# fe990e7064e74f87a09d1f873044a424
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:1
msgid ""
"Merge the specified files into a single file, automatically migrating all "
"links and references to the affected files. The file must all either be HTML"
" or CSS files."
msgstr ""

# 8ff5fa5f78e049a28f5db966906281b4
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:4
msgid "Must be either ``'text'`` for HTML files or ``'styles'`` for CSS files"
msgstr ""

# 98ec9b786bd94dd3a3635e8ed723630e
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:5
msgid "The list of files to be merged"
msgstr ""

# 841a8a9fedbc4389be072c6f3ea3c797
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:6
msgid ""
"Which of the merged files is the *master* file, that is, the file that will "
"remain after merging."
msgstr ""

# 5794ad9937da437aa9637d4f235a915a
#: ../../polish.rst:88
msgid "Managing covers"
msgstr ""

# d882b98564f14aada6c002da64a8b355
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:1
msgid "Set the cover of the book to the image pointed to by cover_path."
msgstr ""

# 08cb789fdec74e0291dcd21db8985733
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:3
msgid ""
"Either the absolute path to an image file or the canonical name of an image "
"in the book. When using an image int he book, you must also set options, see"
" below."
msgstr ""

# 83620ed440354e2eb0234e2c334fed46
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:6
msgid ""
"An optional callable that takes a single argument. It will be called with "
"information about the tasks being processed."
msgstr ""

# 861c893270514f07a74b159a4ec998ae
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:8
msgid ""
"None or a dictionary that controls how the cover is set. The dictionary can "
"have entries: **keep_aspect**: True or False  (Preserve aspect ratio of "
"covers in EPUB) **no_svg**: True or False  (Use an SVG cover wrapper in the "
"EPUB titlepage) **existing**: True or False  (``cover_path`` refers to an "
"existing image in the book)"
msgstr ""

# db86bb110c44495e9ba3c1da949918ea
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_cover:1
msgid "Mark the specified image as the cover image."
msgstr ""

# 25945705eda0425ba6940a4d90ceac06
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_titlepage:1
msgid "Mark the specified HTML file as the titlepage of the EPUB."
msgstr ""

# 306e7d2f2bf042de925728754aa7cc7c
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_titlepage:3
msgid "If True the HTML file is moved to the start of the spine"
msgstr ""

# b306fe26a8a94862ae185eeb401024c6
#: ../../polish.rst:99
msgid "Working with CSS"
msgstr ""

# 516e770a323c48ec8c03eb4593a9b147
#: ../../../src/calibre/ebooks/oeb/polish/fonts.pydocstring of
#: calibre.ebooks.oeb.polish.fonts.change_font:1
msgid ""
"Change a font family from old_name to new_name. Changes all occurrences of "
"the font family in stylesheets, style tags and style attributes. If the "
"old_name refers to an embedded font, it is removed. You can set new_name to "
"None to remove the font family instead of changing it."
msgstr ""

# a77f8f8537bf437fbf69dfb9e4bde3b8
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:1
msgid ""
"Remove all unused CSS rules from the book. An unused CSS rule is one that "
"does not match any actual content."
msgstr ""

# b5fb4594b6ee43e48d4d1432df33a6af
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:3
msgid ""
"An optional callable that takes a single argument. It is called with "
"information about the operations being performed."
msgstr ""

# 9c3399043ffd420aacebcefc2289b4a1
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:4
msgid ""
"If True, class attributes in the HTML that do not match any CSS rules are "
"also removed."
msgstr ""

# 0696dd5c7d954de79460bfdd52c78763
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:1
msgid "Remove the specified CSS properties from all CSS rules in the book."
msgstr ""

# 909f1260a0264eeaa47c1acde4374813
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:3
msgid ""
"Set of properties to remove. For example: :code:`{'font-family', 'color'}`."
msgstr ""

# 9ed8dd2bb5a54ad990bf7da9e7abb6bb
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:4
msgid ""
"The files from which to remove the properties. Defaults to all HTML and CSS "
"files in the book."
msgstr ""

# 8588546dcb854755b51bbe41ab078262
#: ../../polish.rst:111
msgid "Working with the Table of Contents"
msgstr ""

# db020b718ef94932aae60bb30343c03e
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_xpaths:1
msgid ""
"Generate a Table of Contents from a list of XPath expressions. Each "
"expression in the list corresponds to a level of the generate ToC. For "
"example: :code:`['//h:h1', '//h:h2', '//h:h3']` will generate a three level "
"table of contents from the ``<h1>``, ``<h2>`` and ``<h3>`` tags."
msgstr ""

# 249bd1303ab04443891f072db7a57f4a
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_links:1
msgid "Generate a Table of Contents from links in the book."
msgstr ""

# 0c2b7e99c3cf41d19b982582c2cd1f2c
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_files:1
msgid "Generate a Table of Contents from files in the book."
msgstr ""

# 1ccd91816a894c55801a0b0638b42764
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.create_inline_toc:1
msgid ""
"Create an inline (HTML) Table of Contents from an existing NCX table of "
"contents."
msgstr ""

# a287be7f02704fc1a16da40bc51eef59
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.create_inline_toc:3
msgid "The title for this table of contents."
msgstr ""

# aeca4abeed704a0fb383737fce81cf2a
#: ../../polish.rst:125
msgid "Controlling the editor's user interface"
msgstr ""

# 90076f2f758b48d4bda8c0e59fa15785
#: ../../polish.rst:127
msgid ""
"The ebook editor's user interface is controlled by a single global *Boss* "
"object. This has many useful methods that can be used in plugin code to "
"perform common tasks."
msgstr ""

# 2ff36328ef554b53a79a0c168d449b11
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.add_savepoint:1
msgid "Create a restore checkpoint with the name specified as ``msg``"
msgstr ""

# f531d17d4a694d43ab2129757065eba0
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.apply_container_update_to_gui:1
msgid ""
"Update all the components of the user interface to reflect the latest data "
"in the current book container"
msgstr ""

# c23f8556854e4562803c223bfe2d04de
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.close_editor:1
msgid "Close the editor that is editing the file specified by ``name``"
msgstr ""

# c7f46017be53463194c6ce5713ab39dc
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.commit_all_editors_to_container:1
msgid ""
"Commit any changes that the user has made to files open in editors to the "
"container. You should call this method before performing any actions on the "
"current container"
msgstr ""

# 191c221b6562449397902395ad3c59db
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.edit_file:1
msgid "Open the file specified by name in an editor"
msgstr ""

# d90d27ad7fb84573bbb36feb588dfd06
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.edit_file:3
msgid ""
"The media type of the file, for example, ``'text/html'``. If not specified "
"it is guessed from the file extension."
msgstr ""

# ff50f01cd44146e383eb149d9674c94b
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.edit_file:4
msgid "A template to initialize the opened editor with"
msgstr ""

# 074183d8edf54d46af63fec5169f45b6
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.open_book:1
msgid ""
"Open the ebook at ``path`` for editing. Will show an error if the ebook is "
"not in a supported format or the current book has unsaved changes."
msgstr ""

# 80f752cc5786407697258259baa9b1e0
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.open_book:3
msgid "The name of a file inside the newly openend book to start editing."
msgstr ""

# b9e61f7b96f24863b8db4714054bdb66
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.rewind_savepoint:1
msgid ""
"Undo the previous creation of a restore checkpoint, useful if you create a "
"checkpoint, then abort the operation with no changes"
msgstr ""

# 9b0e7ac04b4b4047b9282fe75a23fefd
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.save_book:1
msgid "Save the book. Saving is performed in the background"
msgstr ""

# 8953c8c5edcb41d3b06436f22907a040
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.set_modified:1
msgid "Mark the book as having been modified"
msgstr ""

# bfe310e8fb144088a3f62e560628f5c7
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_current_diff:1
msgid "Show the changes to the book from its last checkpointed state"
msgstr ""

# 85e5b64da0f74f4cb1e1951ae74649bb
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_current_diff:3
msgid ""
"If True the diff dialog will have a button to allow the user to revert all "
"changes"
msgstr ""

# 8a36a526fcf24c20aee8b799ab2d537a
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_current_diff:4
msgid ""
"A container object to compare the current container to. If None, the "
"previously checkpointed container is used"
msgstr ""

# 42455b5aa4cb4ed69a6b7f7ad9689391
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_editor:1
msgid "Show the editor that is editing the file specified by ``name``"
msgstr ""

# 2a637ac4689146cdba7c09ab2aacdac0
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.sync_live_css_to_editor:1
msgid ""
"Sync the Live CSS panel to the current cursor position in the current editor"
msgstr ""

# c0484688e7c2484f831016c9ed5c5a8d
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.sync_preview_to_editor:1
msgid ""
"Sync the position of the preview panel to the current cursor position in the"
" current editor"
msgstr ""
