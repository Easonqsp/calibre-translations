# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.206.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-17 21:53+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../home/kovid/work/calibre/manual/news.rst:5
# 02c0b561284747fe8c49afb20a249433
msgid "Adding your favorite news website"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:7
# 2f018ed9a64047dc80911815dcd94ebe
msgid "|app| has a powerful, flexible and easy-to-use framework for downloading news from the Internet and converting it into an ebook. The following will show you, by means of examples, how to get news from various websites."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:9
# 33bd74f265ae4fa497d52e655c60450f
msgid "To gain an understanding of how to use the framework, follow the examples in the order listed below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:16
# 3e02b50753dc4ef59cb5dd02f3d9340d
msgid "Completely automatic fetching"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:18
# 6bd345fcdf3241ac9607fcf76e5ede13
msgid "If your news source is simple enough, |app| may well be able to fetch it completely automatically, all you need to do is provide the URL. |app| gathers all the information needed to download a news source into a :term:`recipe`. In order to tell |app| about a news source, you have to create a :term:`recipe` for it. Let's see some examples:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:23
# 7e255c57a9594b8584b2e5a024b7dc5e
msgid "portfolio.com"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:25
# 7db28c9d640f452f8b4b215387197dad
msgid "*portfolio.com* is the website for *Cond√© Nast Portfolio*, a business related magazine. In order to download articles from the magazine and convert them to ebooks, we rely on the :term:`RSS` feeds of portfolio.com. A list of such feeds is available at http://www.portfolio.com/rss/."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:27
# 8b701429e600480abfc6fb0c83f54eb2
msgid "Lets pick a couple of feeds that look interesting:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:29
# 006de35b6bda44329be027116168f8c5
msgid "Business Travel: http://feeds.portfolio.com/portfolio/businesstravel"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:30
# 6396b5947e474258990fe30837008743
msgid "Tech Observer: http://feeds.portfolio.com/portfolio/thetechobserver"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:32
# 8aa4de70453549bd97e579c86f056231
msgid "I got the URLs by clicking the little orange RSS icon next to each feed name. To make |app| download the feeds and convert them into an ebook, you should right click the :guilabel:`Fetch news` button and then the :guilabel:`Add a custom news source` menu item. A dialog similar to that shown below should open up."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:37
# 6a141f92612f433aa0180f1dbef87cae
msgid "First enter ``Portfolio`` into the :guilabel:`Recipe title` field. This will be the title of the ebook that will be created from the articles in the above feeds."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:39
# 3f0a0645c78f4caeab492538b3364c84
msgid "The next two fields (:guilabel:`Oldest article` and :guilabel:`Max. number of articles`) allow you some control over how many articles should be downloaded from each feed, and they are pretty self explanatory."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:41
# 726f0ee227114bee8573ea9aecfdf936
msgid "To add the feeds to the recipe, enter the feed title and the feed URL and click the :guilabel:`Add feed` button. Once you have added both feeds, simply click the :guilabel:`Add/update recipe` button and you're done! Close the dialog."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:43
# f68b0773590947a1bb86b26a232c2588
msgid "To test your new :term:`recipe`, click the :guilabel:`Fetch news` button and in the :guilabel:`Custom news sources` sub-menu click :guilabel:`Portfolio`. After a couple of minutes, the newly downloaded Portfolio ebook will appear in the main library view (if you have your reader connected, it will be put onto the reader instead of into the library). Select it and hit the :guilabel:`View` button to read!"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:45
# 8a4b6e8c70814b04a79a8aef6aeb379a
msgid "The reason this worked so well, with so little effort is that *portfolio.com* provides *full-content* :term:`RSS` feeds, i.e., the article content is embedded in the feed itself. For most news sources that provide news in this fashion, with *full-content* feeds, you don't need any more effort to convert them to ebooks. Now we will look at a news source that does not provide full content feeds. In such feeds, the full article is a webpage and the feed only contains a link to the webpage with a short summary of the article."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:50
# 28b1536eb46b494cac50b1f9d9a5a7d3
msgid "bbc.co.uk"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:52
# 38efea49b4ac41cfb061579d3e984dbc
msgid "Lets try the following two feeds from *The BBC*:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:54
# 38e7cba05c0042a18888e2d4b9b0334d
msgid "News Front Page: http://newsrss.bbc.co.uk/rss/newsonline_world_edition/front_page/rss.xml"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:55
# 9fc6324520e04d26b1d7dfdc6dee94eb
msgid "Science/Nature: http://newsrss.bbc.co.uk/rss/newsonline_world_edition/science/nature/rss.xml"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:57
# 3d58d2bda8a047aa8da68f2182073b82
msgid "Follow the procedure outlined in :ref:`portfolio` to create a recipe for *The BBC* (using the feeds above). Looking at the downloaded ebook, we see that |app| has done a creditable job of extracting only the content you care about from each article's webpage. However, the extraction process is not perfect. Sometimes it leaves in undesirable content like menus and navigation aids or it removes content that should have been left alone, like article headings. In order, to have perfect content extraction, we will need to customize the fetch process, as described in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:60
# f679c5edc46f49eda819d38541ce9efd
msgid "Customizing the fetch process"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:62
# ea6cedc896834d24bd0657050793ae79
msgid "When you want to perfect the download process, or download content from a particularly complex website, you can avail yourself of all the power and flexibility of the :term:`recipe` framework. In order to do that, in the :guilabel:`Add custom news sources` dialog, simply click the :guilabel:`Switch to Advanced mode` button."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:64
# 3e3ea58ca49f4de891dd1ac113a41778
msgid "The easiest and often most productive customization is to use the print version of the online articles. The print version typically has much less cruft and translates much more smoothly to an ebook. Let's try to use the print version of the articles from *The BBC*."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:67
# 8d0ba633a56a42e0917f2f2cf20f4b85
msgid "Using the print version of bbc.co.uk"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:69
# 87fa97935cd54330b8bea6044db6cc35
msgid "The first step is to look at the ebook we downloaded previously from :ref:`bbc`. At the end of each article, in the ebook is a little blurb telling you where the article was downloaded from. Copy and paste that URL into a browser. Now on the article webpage look for a link that points to the \"Printable version\". Click it to see the print version of the article. It looks much neater! Now compare the two URLs. For me they were:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:72
# 2ff187c74e4246e6a600947c14b22776
msgid "Article URL"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:72
# 68a7cdfad7e14cbd92d0cf3841c7d7ef
msgid "http://news.bbc.co.uk/2/hi/science/nature/7312016.stm"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:75
# ede541daad694f9f8acf1cff01850f9a
msgid "Print version URL"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:75
# 998a68bcd16c46db84258a768636af4c
msgid "http://newsvote.bbc.co.uk/mpapps/pagetools/print/news.bbc.co.uk/2/hi/science/nature/7312016.stm"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:77
# bb4bcbbbe68c4066bed6664ec549249c
msgid "So it looks like to get the print version, we need to prefix every article URL with:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:79
# 3ea1aecb6e3a4aa78b67ad7b0cb81d3b
msgid "newsvote.bbc.co.uk/mpapps/pagetools/print/"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:81
# a1e084fd181b4669bb8ce030cb568135
msgid "Now in the :guilabel:`Advanced Mode` of the Custom  news sources dialog, you should see something like (remember to select *The BBC* recipe before switching to advanced mode):"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:86
# a9e41dab562241c1b87c13b94303b5f3
msgid "You can see that the fields from the :guilabel:`Basic mode` have been translated to python code in a straightforward manner. We need to add instructions to this recipe to use the print version of the articles. All that's needed is to add the following two lines:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:93
# c6287bcd70c5478b89b2fefce0e13b16
msgid "This is python, so indentation is important. After you've added the lines, it should look like:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:98
# bd946d751cc54d81a592b2e5a732cb48
msgid "In the above, ``def print_version(self, url)`` defines a *method* that is called by |app| for every article. ``url`` is the URL of the original article. What ``print_version`` does is take that url and replace it with the new URL that points to the print version of the article. To learn about `python <http://www.python.org>`_ see the `tutorial <http://docs.python.org/tut/>`_."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:100
# 5210800a334c4c1193f2d3cf45fcf806
msgid "Now, click the :guilabel:`Add/update recipe` button and your changes will be saved. Re-download the ebook. You should have a much improved ebook. One of the problems with the new version is that the fonts on the print version webpage are too small. This is automatically fixed when converting to an ebook, but even after the fixing process, the font size of the menus and navigation bar to become too large relative to the article text. To fix this, we will do some more customization, in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:103
# e3428911928343f69a4babd862fdc258
msgid "Replacing article styles"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:105
# 3a4760d7a4224339b15878ef23bd9aff
msgid "In the previous section, we saw that the font size for articles from the print version of *The BBC* was too small. In most websites, *The BBC* included, this font size is set by means of :term:`CSS` stylesheets. We can disable the fetching of such stylesheets by adding the line::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:109
# 65f96def79b54837a66423fc44b94379
msgid "The recipe now looks like:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:116
# 98e3f2f9752d4796b8ecb13712701959
msgid "The new version looks pretty good. If you're a perfectionist, you'll want to read the next section, which deals with actually modifying the downloaded content."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:119
# d3be61d6f2ee4cb9a494dc9a52942a93
msgid "Slicing and dicing"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:121
# 89e453bbb7484e63944f3b31c41ff619
msgid "|app| contains very powerful and flexible abilities when it comes to manipulating downloaded content. To show off a couple of these, let's look at our old friend the :ref:`The BBC <bbc1>` recipe again. Looking at the source code (:term:`HTML`) of a couple of articles (print version), we see that they have a footer that contains no useful information, contained in"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:129
# a8555d447e8e43bca87e33bf31c4ce5d
msgid "This can be removed by adding::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:133
# 434a00daa99340bf88316c4872842a07
msgid "to the recipe. Finally, lets replace some of the :term:`CSS` that we disabled earlier, with our own :term:`CSS` that is suitable for conversion to an ebook::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:137
# a18b0dd8b089410093e15130e3571925
msgid "With these additions, our recipe has become \"production quality\", indeed it is very close to the actual recipe used by |app| for the *BBC*, shown below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:141
# b76b4ac88cda4569adddbc6c8d20466e
msgid "This :term:`recipe` explores only the tip of the iceberg when it comes to the power of |app|. To explore more of the abilities of |app| we'll examine a more complex real life example in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:144
# db902cb0d09c43b9ae274535896c51d1
msgid "Real life example"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:146
# 8c61e8dac3504e3c91b4c5acc24645ea
msgid "A reasonably complex real life example that exposes more of the :term:`API` of ``BasicNewsRecipe`` is the :term:`recipe` for *The New York Times*"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:232
# 95ed0a5582b44f5c9f0751574d6850a7
msgid "We see several new features in this :term:`recipe`. First, we have::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:236
# c47217a851b24870b4c4f6b25f9ddd33
msgid "This sets the displayed time on the front page of the created ebook to be in the format, ``Day, Day_Number Month, Year``. See :attr:`timefmt <calibre.web.feeds.news.BasicNewsRecipe.timefmt>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:239
# c253955243b54ac4989472dc5bd6ccda
msgid "Then we see a group of directives to cleanup the downloaded :term:`HTML`::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:245
# 770b2f862c744530b23e59e7bf1dd622
msgid "These remove everything before the first ``<h1>`` tag and everything after the first tag whose id is ``footer``. See :attr:`remove_tags <calibre.web.feeds.news.BasicNewsRecipe.remove_tags>`, :attr:`remove_tags_before <calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before>`, :attr:`remove_tags_after <calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:247
# 1153d0a02a714394bb0c93030e7b2c50
msgid "The next interesting feature is::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:254
# c92beba374944f1a872f9985f43aac89
msgid "``needs_subscription = True`` tells |app| that this recipe needs a username and password in order to access the content. This causes, |app| to ask for a username and password whenever you try to use this recipe. The code in :meth:`calibre.web.feeds.news.BasicNewsRecipe.get_browser` actually does the login into the NYT website. Once logged in, |app| will use the same, logged in, browser instance to fetch all content. See `mechanize <http://wwwsearch.sourceforge.net/mechanize/>`_ to understand the code in ``get_browser``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:256
# facdfaf92f36485f82de1ee2de96e753
msgid "The next new feature is the :meth:`calibre.web.feeds.news.BasicNewsRecipe.parse_index` method. Its job is to go to http://www.nytimes.com/pages/todayspaper/index.html and fetch the list of articles that appear in *todays* paper. While more complex than simply using :term:`RSS`, the recipe creates an ebook that corresponds very closely to the days paper. ``parse_index`` makes heavy use of `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ to parse the daily paper webpage. You can also use other, more modern parsers if you dislike BeatifulSoup. calibre comes with `lxml <http://lxml.de/>`_ and `html5lib <https://github.com/html5lib/html5lib-python>`_, which are the recommended parsers. To use them, replace the call to ``index_to_soup()`` with the following::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:277
# 5ebff29a92a34cfb82b417a466d5faca
msgid "The final new feature is the :meth:`calibre.web.feeds.news.BasicNewsRecipe.preprocess_html` method. It can be used to perform arbitrary transformations on every downloaded HTML page. Here it is used to bypass the ads that the nytimes shows you before each article."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:280
# 27f8fd62eb5849c6893a434c800ad86a
msgid "Tips for developing new recipes"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:282
# abcc8479b5f74ce9bf9ab4441190ef4b
msgid "The best way to develop new recipes is to use the command line interface. Create the recipe using your favorite python editor and save it to a file say :file:`myrecipe.recipe`. The `.recipe` extension is required. You can download content using this recipe with the command::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:286
# 47972de670ab467a887d8f9f0762a92c
msgid "The command :command:`ebook-convert` will download all the webpages and save them to the EPUB file :file:`myrecipe.epub`. The :option:`-vv` makes ebook-convert spit out a lot of information about what it is doing. The :option:`--test` makes it download only a couple of articles from at most two feeds. In addition, ebook-convert will put the downloaded HTML into the ``debug/input`` directory, where ``debug`` is the directory you specified in the :option:`--debug-pipeline` option."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:288
# 1005bdd0acbd4a2fa05c40b0ff0420fe
msgid "Once the download is complete, you can look at the downloaded :term:`HTML` by opening the file :file:`debug/input/index.html` in a browser. Once you're satisfied that the download and preprocessing is happening correctly, you can generate ebooks in different formats as shown below::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:295
# be9849edf4ba46408694c77bf9eabe1c
msgid "If you're satisfied with your recipe, and you feel there is enough demand to justify its inclusion into the set of built-in recipes, post your recipe in the `calibre recipes forum <http://www.mobileread.com/forums/forumdisplay.php?f=228>`_ to share it with other calibre users."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:298
# 35fb9c5466e7497ca1e0e314502488a6
msgid "On OS X, the command line tools are inside the |app| bundle, for example, if you installed calibre in :file:`/Applications` the command line tools are in :file:`/Applications/calibre.app/Contents/MacOS/calibre`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:304
# 5404bd1042454a42a5e5d8780516c790
msgid ":ref:`ebook-convert`"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:305
# bf8bd780c8424c56b90151e6cca349e3
msgid "The command line interface for all ebook conversion."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:309
# e2823f02ea8945058899bb6aa1513602
msgid "Further reading"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:311
# 494a9b6c3ddb41348df5006ee902b11a
msgid "To learn more about writing advanced recipes using some of the facilities, available in ``BasicNewsRecipe`` you should consult the following sources:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:314
# 35d29694a06247ee9becdf890b992491
msgid ":ref:`API Documentation <news_recipe>`"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:314
# d095439b09d44325b7b2ce458305c39b
msgid "Documentation of the ``BasicNewsRecipe`` class and all its important methods and fields."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:317
# 87fd4db07912458c946d3ed5221ee09a
msgid "`BasicNewsRecipe <http://bazaar.launchpad.net/~kovid/calibre/trunk/annotate/head:/src/calibre/web/feeds/news.py>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:317
# be3a9b0f526f4a079dc71da52346c461
msgid "The source code of ``BasicNewsRecipe``"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:320
# b0162d3e55d64fc9bcf3b4780c6d29f9
msgid "`Built-in recipes <http://bazaar.launchpad.net/~kovid/calibre/trunk/files/head:/recipes/>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:320
# bc9522cc8b4d4089b43ca85940ed9d50
msgid "The source code for the built-in recipes that come with |app|"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:324
# af34eff9a75746e99c375638e26ecf62
msgid "`The calibre recipes forum <http://www.mobileread.com/forums/forumdisplay.php?f=228>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:323
# 0ce836a357d94b0d9dd8d704dd8fe514
msgid "Lots of knowledgeable |app| recipe writers hang out here."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:327
# 0fad12d4e38041f7a71073f70d6d50ac
msgid "API documentation"
msgstr ""

