# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-22 08:40+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../home/kovid/work/calibre/manual/news.rst:5
# cf22dab5b45e42d591540f2c2cf966af
msgid "Adding your favorite news website"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:7
# e5e776228e5a4ca392c753d10f23c67e
msgid "|app| has a powerful, flexible and easy-to-use framework for downloading news from the Internet and converting it into an ebook. The following will show you, by means of examples, how to get news from various websites."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:9
# 49803f44ee41407798bc3af3fb06a63f
msgid "To gain an understanding of how to use the framework, follow the examples in the order listed below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:16
# d43a093715144417879a1f0d42ac21cd
msgid "Completely automatic fetching"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:18
# e2f4f99701dc4c5fad3d0734eccedf53
msgid "If your news source is simple enough, |app| may well be able to fetch it completely automatically, all you need to do is provide the URL. |app| gathers all the information needed to download a news source into a :term:`recipe`. In order to tell |app| about a news source, you have to create a :term:`recipe` for it. Let's see some examples:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:23
# 62bbf3d6165e4c26b1b8acf3bfcdfe52
msgid "portfolio.com"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:25
# 2d8981b35dd443cfa247e1ae1a5d3e97
msgid "*portfolio.com* is the website for *Cond√© Nast Portfolio*, a business related magazine. In order to download articles from the magazine and convert them to ebooks, we rely on the :term:`RSS` feeds of portfolio.com. A list of such feeds is available at http://www.portfolio.com/rss/."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:27
# f03fc726843846af8d226a9dbaafa920
msgid "Lets pick a couple of feeds that look interesting:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:29
# f18495e81c8c4f48a0152b75db8339fa
msgid "Business Travel: http://feeds.portfolio.com/portfolio/businesstravel"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:30
# c9ef1303a1244b48b28328f1a6a8b0f8
msgid "Tech Observer: http://feeds.portfolio.com/portfolio/thetechobserver"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:32
# d41281300b4f4b76a36bcae59163e585
msgid "I got the URLs by clicking the little orange RSS icon next to each feed name. To make |app| download the feeds and convert them into an ebook, you should right click the :guilabel:`Fetch news` button and then the :guilabel:`Add a custom news source` menu item. A dialog similar to that shown below should open up."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:37
# 7a71354c4494433286b67c5d99890f6b
msgid "First enter ``Portfolio`` into the :guilabel:`Recipe title` field. This will be the title of the ebook that will be created from the articles in the above feeds."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:39
# 40f3e0907d8b46d38a9e88b36e00456e
msgid "The next two fields (:guilabel:`Oldest article` and :guilabel:`Max. number of articles`) allow you some control over how many articles should be downloaded from each feed, and they are pretty self explanatory."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:41
# 0c1e09b829a74b189750f66ab92ebb33
msgid "To add the feeds to the recipe, enter the feed title and the feed URL and click the :guilabel:`Add feed` button. Once you have added both feeds, simply click the :guilabel:`Add/update recipe` button and you're done! Close the dialog."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:43
# 74304b21f9e04ddd9ef711a042b92997
msgid "To test your new :term:`recipe`, click the :guilabel:`Fetch news` button and in the :guilabel:`Custom news sources` sub-menu click :guilabel:`Portfolio`. After a couple of minutes, the newly downloaded Portfolio ebook will appear in the main library view (if you have your reader connected, it will be put onto the reader instead of into the library). Select it and hit the :guilabel:`View` button to read!"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:45
# 7ffbbb7fbe44431292a7ec7a74715690
msgid "The reason this worked so well, with so little effort is that *portfolio.com* provides *full-content* :term:`RSS` feeds, i.e., the article content is embedded in the feed itself. For most news sources that provide news in this fashion, with *full-content* feeds, you don't need any more effort to convert them to ebooks. Now we will look at a news source that does not provide full content feeds. In such feeds, the full article is a webpage and the feed only contains a link to the webpage with a short summary of the article."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:50
# ce7ac857192746d69453213c1b5e3077
msgid "bbc.co.uk"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:52
# adb342d6f37244bcb3364d023cc7210e
msgid "Lets try the following two feeds from *The BBC*:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:54
# 8aee1be05f2e4c229680d6405073259a
msgid "News Front Page: http://newsrss.bbc.co.uk/rss/newsonline_world_edition/front_page/rss.xml"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:55
# 93d0356cbf504459a3a5c561cfc043bc
msgid "Science/Nature: http://newsrss.bbc.co.uk/rss/newsonline_world_edition/science/nature/rss.xml"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:57
# 15b83ae6e78745cba2f3fd21968adb0e
msgid "Follow the procedure outlined in :ref:`portfolio` to create a recipe for *The BBC* (using the feeds above). Looking at the downloaded ebook, we see that |app| has done a creditable job of extracting only the content you care about from each article's webpage. However, the extraction process is not perfect. Sometimes it leaves in undesirable content like menus and navigation aids or it removes content that should have been left alone, like article headings. In order, to have perfect content extraction, we will need to customize the fetch process, as described in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:60
# 1e4f351e4d12477f8a3cf922a7377908
msgid "Customizing the fetch process"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:62
# 1f01ff4636cc4fe1806903c9e58ed492
msgid "When you want to perfect the download process, or download content from a particularly complex website, you can avail yourself of all the power and flexibility of the :term:`recipe` framework. In order to do that, in the :guilabel:`Add custom news sources` dialog, simply click the :guilabel:`Switch to Advanced mode` button."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:64
# 848a2f9cad2c42e2aa60d29d61c2a1bb
msgid "The easiest and often most productive customization is to use the print version of the online articles. The print version typically has much less cruft and translates much more smoothly to an ebook. Let's try to use the print version of the articles from *The BBC*."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:67
# cfae51223b244546b40b1fa616924f2d
msgid "Using the print version of bbc.co.uk"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:69
# 43589ca3222f4a259fd7942a3af47238
msgid "The first step is to look at the ebook we downloaded previously from :ref:`bbc`. At the end of each article, in the ebook is a little blurb telling you where the article was downloaded from. Copy and paste that URL into a browser. Now on the article webpage look for a link that points to the \"Printable version\". Click it to see the print version of the article. It looks much neater! Now compare the two URLs. For me they were:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:72
# 1e94e375905d4ae19e16ee94c5499b88
msgid "Article URL"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:72
# bd900606fc5f49aba34c2534bd346f17
msgid "http://news.bbc.co.uk/2/hi/science/nature/7312016.stm"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:75
# 8a23e87f815d4bb083eceeacbe53bcd7
msgid "Print version URL"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:75
# ce003dd14220441688a4834c9946ac73
msgid "http://newsvote.bbc.co.uk/mpapps/pagetools/print/news.bbc.co.uk/2/hi/science/nature/7312016.stm"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:77
# 74ad7355d4fe4b549afdbd6d41616227
msgid "So it looks like to get the print version, we need to prefix every article URL with:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:79
# 3b475ee522314397b6986b4a9ebcc5bf
msgid "newsvote.bbc.co.uk/mpapps/pagetools/print/"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:81
# 3993a31de8ea428f92bcebefbdc71244
msgid "Now in the :guilabel:`Advanced Mode` of the Custom  news sources dialog, you should see something like (remember to select *The BBC* recipe before switching to advanced mode):"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:86
# b947d3929c0d44f8b1b48550a1d8f801
msgid "You can see that the fields from the :guilabel:`Basic mode` have been translated to python code in a straightforward manner. We need to add instructions to this recipe to use the print version of the articles. All that's needed is to add the following two lines:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:93
# 1aed1f7f3b884a3795a944c8899b1ce3
msgid "This is python, so indentation is important. After you've added the lines, it should look like:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:98
# 5d239ce6ad914e6bb79220e802bc814d
msgid "In the above, ``def print_version(self, url)`` defines a *method* that is called by |app| for every article. ``url`` is the URL of the original article. What ``print_version`` does is take that url and replace it with the new URL that points to the print version of the article. To learn about `python <http://www.python.org>`_ see the `tutorial <http://docs.python.org/tut/>`_."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:100
# e1701f53364e48b2ae885a4614be4ff1
msgid "Now, click the :guilabel:`Add/update recipe` button and your changes will be saved. Re-download the ebook. You should have a much improved ebook. One of the problems with the new version is that the fonts on the print version webpage are too small. This is automatically fixed when converting to an ebook, but even after the fixing process, the font size of the menus and navigation bar to become too large relative to the article text. To fix this, we will do some more customization, in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:103
# a1f11fa660ff48a78d4ad6c062d1f71c
msgid "Replacing article styles"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:105
# f39d676cc8764ff5b9562b7eff218bcc
msgid "In the previous section, we saw that the font size for articles from the print version of *The BBC* was too small. In most websites, *The BBC* included, this font size is set by means of :term:`CSS` stylesheets. We can disable the fetching of such stylesheets by adding the line::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:109
# 4eb47d67ae7a4e70bc729880ecc62ee4
msgid "The recipe now looks like:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:116
# 9a38b6f6241c4089a70087364c343e87
msgid "The new version looks pretty good. If you're a perfectionist, you'll want to read the next section, which deals with actually modifying the downloaded content."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:119
# 62734f45e2aa4e2392f884e0b9efd4b8
msgid "Slicing and dicing"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:121
# 85321d71df4f401c829823c1f9c49564
msgid "|app| contains very powerful and flexible abilities when it comes to manipulating downloaded content. To show off a couple of these, let's look at our old friend the :ref:`The BBC <bbc1>` recipe again. Looking at the source code (:term:`HTML`) of a couple of articles (print version), we see that they have a footer that contains no useful information, contained in"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:129
# d331cfd4891b43d2bc5b6af0386aebf7
msgid "This can be removed by adding::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:133
# 049bf764281844ecb4715dfdbf0c0b57
msgid "to the recipe. Finally, lets replace some of the :term:`CSS` that we disabled earlier, with our own :term:`CSS` that is suitable for conversion to an ebook::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:137
# b6d83214e2ab4f789d6412f6ec64c336
msgid "With these additions, our recipe has become \"production quality\", indeed it is very close to the actual recipe used by |app| for the *BBC*, shown below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:141
# b3763355ee8f465689ef21d80fad0521
msgid "This :term:`recipe` explores only the tip of the iceberg when it comes to the power of |app|. To explore more of the abilities of |app| we'll examine a more complex real life example in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:144
# 72cda66bc5ff4a5a9add81a988577d2b
msgid "Real life example"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:146
# 0b48bb462be549aab7b2d2bbb7905eaa
msgid "A reasonably complex real life example that exposes more of the :term:`API` of ``BasicNewsRecipe`` is the :term:`recipe` for *The New York Times*"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:232
# 45421886f6294c0b882630bafd27b8fa
msgid "We see several new features in this :term:`recipe`. First, we have::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:236
# 885b0300278b474aa28110476191511f
msgid "This sets the displayed time on the front page of the created ebook to be in the format, ``Day, Day_Number Month, Year``. See :attr:`timefmt <calibre.web.feeds.news.BasicNewsRecipe.timefmt>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:239
# 6080ccdc2b70431eb393154b75a59b77
msgid "Then we see a group of directives to cleanup the downloaded :term:`HTML`::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:245
# 037ecbc7df10400b9ce6d33862dc9751
msgid "These remove everything before the first ``<h1>`` tag and everything after the first tag whose id is ``footer``. See :attr:`remove_tags <calibre.web.feeds.news.BasicNewsRecipe.remove_tags>`, :attr:`remove_tags_before <calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before>`, :attr:`remove_tags_after <calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:247
# 47da16a7eabd4dda95f6fe07eb366996
msgid "The next interesting feature is::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:254
# 909c68493c4f435db290fb4dd90ef319
msgid "``needs_subscription = True`` tells |app| that this recipe needs a username and password in order to access the content. This causes, |app| to ask for a username and password whenever you try to use this recipe. The code in :meth:`calibre.web.feeds.news.BasicNewsRecipe.get_browser` actually does the login into the NYT website. Once logged in, |app| will use the same, logged in, browser instance to fetch all content. See `mechanize <http://wwwsearch.sourceforge.net/mechanize/>`_ to understand the code in ``get_browser``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:256
# 3e7916a29fe44286b6f1a0b75fee07c8
msgid "The next new feature is the :meth:`calibre.web.feeds.news.BasicNewsRecipe.parse_index` method. Its job is to go to http://www.nytimes.com/pages/todayspaper/index.html and fetch the list of articles that appear in *todays* paper. While more complex than simply using :term:`RSS`, the recipe creates an ebook that corresponds very closely to the days paper. ``parse_index`` makes heavy use of `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ to parse the daily paper webpage. You can also use other, more modern parsers if you dislike BeatifulSoup. calibre comes with `lxml <http://lxml.de/>`_ and `html5lib <https://github.com/html5lib/html5lib-python>`_, which are the recommended parsers. To use them, replace the call to ``index_to_soup()`` with the following::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:277
# d001acf85e0c40009595606175324e40
msgid "The final new feature is the :meth:`calibre.web.feeds.news.BasicNewsRecipe.preprocess_html` method. It can be used to perform arbitrary transformations on every downloaded HTML page. Here it is used to bypass the ads that the nytimes shows you before each article."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:280
# 51c05adcd1164e2e8a665c5af98cd9ef
msgid "Tips for developing new recipes"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:282
# 8a6c7b94600a40888210655b23ec6545
msgid "The best way to develop new recipes is to use the command line interface. Create the recipe using your favorite python editor and save it to a file say :file:`myrecipe.recipe`. The `.recipe` extension is required. You can download content using this recipe with the command::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:286
# aaf6141197f84466a8a40f3fb39d51d7
msgid "The command :command:`ebook-convert` will download all the webpages and save them to the EPUB file :file:`myrecipe.epub`. The :option:`-vv` makes ebook-convert spit out a lot of information about what it is doing. The :option:`--test` makes it download only a couple of articles from at most two feeds. In addition, ebook-convert will put the downloaded HTML into the ``debug/input`` directory, where ``debug`` is the directory you specified in the :option:`--debug-pipeline` option."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:288
# 93417e2d49564fafb6e001daf6274049
msgid "Once the download is complete, you can look at the downloaded :term:`HTML` by opening the file :file:`debug/input/index.html` in a browser. Once you're satisfied that the download and preprocessing is happening correctly, you can generate ebooks in different formats as shown below::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:295
# 7f657dbfee814186a4ecb88be6ed7cd4
msgid "If you're satisfied with your recipe, and you feel there is enough demand to justify its inclusion into the set of built-in recipes, post your recipe in the `calibre recipes forum <http://www.mobileread.com/forums/forumdisplay.php?f=228>`_ to share it with other calibre users."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:298
# c129c60742584d18b29baf7fa839ea99
msgid "On OS X, the command line tools are inside the |app| bundle, for example, if you installed calibre in :file:`/Applications` the command line tools are in :file:`/Applications/calibre.app/Contents/MacOS/calibre`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:304
# 413fde11a9b94ff085383e159374c1fb
msgid ":ref:`ebook-convert`"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:305
# b8943b05b2964c8fac85818fa911435b
msgid "The command line interface for all ebook conversion."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:309
# 939e8e8229b14a4cb9269a2701643ea9
msgid "Further reading"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:311
# a2271a3a11584cd8b8eca8bffea61362
msgid "To learn more about writing advanced recipes using some of the facilities, available in ``BasicNewsRecipe`` you should consult the following sources:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:314
# ddc0e91a070741aeae5817c0d1dd4ca1
msgid ":ref:`API Documentation <news_recipe>`"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:314
# 123a4ed71fab4bfebd88d8571b429546
msgid "Documentation of the ``BasicNewsRecipe`` class and all its important methods and fields."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:317
# 1e98ae380e5d4d2abc1ccd49df53782a
msgid "`BasicNewsRecipe <http://bazaar.launchpad.net/~kovid/calibre/trunk/annotate/head:/src/calibre/web/feeds/news.py>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:317
# c78a305f19a3483fafdecbffaae3a9a1
msgid "The source code of ``BasicNewsRecipe``"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:320
# 7da85ba908a14b58bfe99a13c12541b6
msgid "`Built-in recipes <http://bazaar.launchpad.net/~kovid/calibre/trunk/files/head:/recipes/>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:320
# df8fc7cd9f24485b95fb5ee7f1e86447
msgid "The source code for the built-in recipes that come with |app|"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:324
# 4ef1ce409e634c75a5df3d06324cd73b
msgid "`The calibre recipes forum <http://www.mobileread.com/forums/forumdisplay.php?f=228>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:323
# cfa6fdba93fe40e4bdc048dc407a9fcd
msgid "Lots of knowledgeable |app| recipe writers hang out here."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:327
# 93b08bffade54434a6e51003e4a923a1
msgid "API documentation"
msgstr ""

