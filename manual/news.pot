# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.206.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-15 16:06+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../home/kovid/work/calibre/manual/news.rst:5
# 3bbdc586d8e64f7ab5b806257b432949
msgid "Adding your favorite news website"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:7
# 8f6f098597a74982ad5351515d4c518e
msgid "|app| has a powerful, flexible and easy-to-use framework for downloading news from the Internet and converting it into an ebook. The following will show you, by means of examples, how to get news from various websites."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:9
# 321186c5643940448faadd4c81b920f5
msgid "To gain an understanding of how to use the framework, follow the examples in the order listed below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:16
# 5f3ff90131404e35950edbe8d1dab9a6
msgid "Completely automatic fetching"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:18
# 749ca2fcfe934f32a4059cef6a2e6a8f
msgid "If your news source is simple enough, |app| may well be able to fetch it completely automatically, all you need to do is provide the URL. |app| gathers all the information needed to download a news source into a :term:`recipe`. In order to tell |app| about a news source, you have to create a :term:`recipe` for it. Let's see some examples:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:23
# 3f7b1a2cd6704154b0d73fb513e49def
msgid "portfolio.com"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:25
# a85b509e6d844c9ea7e53a91c188b83d
msgid "*portfolio.com* is the website for *Cond√© Nast Portfolio*, a business related magazine. In order to download articles from the magazine and convert them to ebooks, we rely on the :term:`RSS` feeds of portfolio.com. A list of such feeds is available at http://www.portfolio.com/rss/."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:27
# ca1348859ced46aa97a8d8ee0c499a93
msgid "Lets pick a couple of feeds that look interesting:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:29
# 7de67cbe6e8a40218df3258642d71d2f
msgid "Business Travel: http://feeds.portfolio.com/portfolio/businesstravel"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:30
# 62cdb1ed25b345c29231e6fab499456c
msgid "Tech Observer: http://feeds.portfolio.com/portfolio/thetechobserver"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:32
# ef869d3e66ba4a50a1556dc06019bd74
msgid "I got the URLs by clicking the little orange RSS icon next to each feed name. To make |app| download the feeds and convert them into an ebook, you should right click the :guilabel:`Fetch news` button and then the :guilabel:`Add a custom news source` menu item. A dialog similar to that shown below should open up."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:37
# 4cc6c6235ef54affad550f72e4eca339
msgid "First enter ``Portfolio`` into the :guilabel:`Recipe title` field. This will be the title of the ebook that will be created from the articles in the above feeds."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:39
# 95cdba864cb1450bab1e2ee8749dbda0
msgid "The next two fields (:guilabel:`Oldest article` and :guilabel:`Max. number of articles`) allow you some control over how many articles should be downloaded from each feed, and they are pretty self explanatory."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:41
# f5d9b7bfe8e3454aa527faa7a0f28b2c
msgid "To add the feeds to the recipe, enter the feed title and the feed URL and click the :guilabel:`Add feed` button. Once you have added both feeds, simply click the :guilabel:`Add/update recipe` button and you're done! Close the dialog."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:43
# e84032aa20894fe7b902ae527eedd551
msgid "To test your new :term:`recipe`, click the :guilabel:`Fetch news` button and in the :guilabel:`Custom news sources` sub-menu click :guilabel:`Portfolio`. After a couple of minutes, the newly downloaded Portfolio ebook will appear in the main library view (if you have your reader connected, it will be put onto the reader instead of into the library). Select it and hit the :guilabel:`View` button to read!"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:45
# 1b8130106235451b9ef89f386c85a982
msgid "The reason this worked so well, with so little effort is that *portfolio.com* provides *full-content* :term:`RSS` feeds, i.e., the article content is embedded in the feed itself. For most news sources that provide news in this fashion, with *full-content* feeds, you don't need any more effort to convert them to ebooks. Now we will look at a news source that does not provide full content feeds. In such feeds, the full article is a webpage and the feed only contains a link to the webpage with a short summary of the article."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:50
# 684b84e4df1f45829212480b384dad6a
msgid "bbc.co.uk"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:52
# d14b2a4085364887b56b9135b28149b0
msgid "Lets try the following two feeds from *The BBC*:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:54
# 90e058a065e1499889b1c53653ef7f57
msgid "News Front Page: http://newsrss.bbc.co.uk/rss/newsonline_world_edition/front_page/rss.xml"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:55
# 0bdf68b300f54dc9b72f355f5e1a6897
msgid "Science/Nature: http://newsrss.bbc.co.uk/rss/newsonline_world_edition/science/nature/rss.xml"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:57
# 4aacbdcf9e694eb0aafa0db55c7537d7
msgid "Follow the procedure outlined in :ref:`portfolio` to create a recipe for *The BBC* (using the feeds above). Looking at the downloaded ebook, we see that |app| has done a creditable job of extracting only the content you care about from each article's webpage. However, the extraction process is not perfect. Sometimes it leaves in undesirable content like menus and navigation aids or it removes content that should have been left alone, like article headings. In order, to have perfect content extraction, we will need to customize the fetch process, as described in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:60
# b0356f027139487a9ba329c5046f74fc
msgid "Customizing the fetch process"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:62
# 222f84c0a91540248f8f3a45778c9d3b
msgid "When you want to perfect the download process, or download content from a particularly complex website, you can avail yourself of all the power and flexibility of the :term:`recipe` framework. In order to do that, in the :guilabel:`Add custom news sources` dialog, simply click the :guilabel:`Switch to Advanced mode` button."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:64
# cb28a501d0a94b7ca148ef4add4acc26
msgid "The easiest and often most productive customization is to use the print version of the online articles. The print version typically has much less cruft and translates much more smoothly to an ebook. Let's try to use the print version of the articles from *The BBC*."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:67
# 6cb8d5bc9c574fdd984ea9d9c2c17d57
msgid "Using the print version of bbc.co.uk"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:69
# 27122650e72f4de9a2a2db66b6b1c7a9
msgid "The first step is to look at the ebook we downloaded previously from :ref:`bbc`. At the end of each article, in the ebook is a little blurb telling you where the article was downloaded from. Copy and paste that URL into a browser. Now on the article webpage look for a link that points to the \"Printable version\". Click it to see the print version of the article. It looks much neater! Now compare the two URLs. For me they were:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:72
# 4e1459a4b9a54d33a4c07787555e7949
msgid "Article URL"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:72
# 08570c496f4c4628811aef134798c042
msgid "http://news.bbc.co.uk/2/hi/science/nature/7312016.stm"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:75
# 6e2b0793115f46c89bb95a719650d246
msgid "Print version URL"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:75
# dda3b4ad460a4be6bcfc2a63e46b9fa5
msgid "http://newsvote.bbc.co.uk/mpapps/pagetools/print/news.bbc.co.uk/2/hi/science/nature/7312016.stm"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:77
# e196e7fe620c48d588446ad15946ba4d
msgid "So it looks like to get the print version, we need to prefix every article URL with:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:79
# 4f1dea2e9ed340d493dec361c43d658c
msgid "newsvote.bbc.co.uk/mpapps/pagetools/print/"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:81
# 3d06a09bc05e4644b557b0d8edb30543
msgid "Now in the :guilabel:`Advanced Mode` of the Custom  news sources dialog, you should see something like (remember to select *The BBC* recipe before switching to advanced mode):"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:86
# 034ec528264f469eb478c445482b7cb9
msgid "You can see that the fields from the :guilabel:`Basic mode` have been translated to python code in a straightforward manner. We need to add instructions to this recipe to use the print version of the articles. All that's needed is to add the following two lines:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:93
# 0b40370dc19d42d7aa2691526ba96f1d
msgid "This is python, so indentation is important. After you've added the lines, it should look like:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:98
# b711fe75fc5f46e189d078a8d9674097
msgid "In the above, ``def print_version(self, url)`` defines a *method* that is called by |app| for every article. ``url`` is the URL of the original article. What ``print_version`` does is take that url and replace it with the new URL that points to the print version of the article. To learn about `python <http://www.python.org>`_ see the `tutorial <http://docs.python.org/tut/>`_."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:100
# 67f07e7e060b433c8e45edbd7dd31e9f
msgid "Now, click the :guilabel:`Add/update recipe` button and your changes will be saved. Re-download the ebook. You should have a much improved ebook. One of the problems with the new version is that the fonts on the print version webpage are too small. This is automatically fixed when converting to an ebook, but even after the fixing process, the font size of the menus and navigation bar to become too large relative to the article text. To fix this, we will do some more customization, in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:103
# a9119b01e26b44048b90d1f8cee6be31
msgid "Replacing article styles"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:105
# 38d68423dea64f64833c3792e14dd164
msgid "In the previous section, we saw that the font size for articles from the print version of *The BBC* was too small. In most websites, *The BBC* included, this font size is set by means of :term:`CSS` stylesheets. We can disable the fetching of such stylesheets by adding the line::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:109
# bad04b5d328e4147804129410d1b7b29
msgid "The recipe now looks like:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:116
# 168bd53a9a8f4525ae6af24a06f3acd4
msgid "The new version looks pretty good. If you're a perfectionist, you'll want to read the next section, which deals with actually modifying the downloaded content."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:119
# 04736a7ade304dbb986e9c69ff924677
msgid "Slicing and dicing"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:121
# e255a1b7184843fcaf7eff579917baee
msgid "|app| contains very powerful and flexible abilities when it comes to manipulating downloaded content. To show off a couple of these, let's look at our old friend the :ref:`The BBC <bbc1>` recipe again. Looking at the source code (:term:`HTML`) of a couple of articles (print version), we see that they have a footer that contains no useful information, contained in"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:129
# 9a68e765a2564986b1bbc3759a0aa906
msgid "This can be removed by adding::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:133
# c7eec55db8c34c3c9a4b8d2a94ba55ea
msgid "to the recipe. Finally, lets replace some of the :term:`CSS` that we disabled earlier, with our own :term:`CSS` that is suitable for conversion to an ebook::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:137
# 2f5aae935f5043b0a378ddf4fd00cf1b
msgid "With these additions, our recipe has become \"production quality\", indeed it is very close to the actual recipe used by |app| for the *BBC*, shown below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:141
# b449bc9f103442b09d55f127fb8170cc
msgid "This :term:`recipe` explores only the tip of the iceberg when it comes to the power of |app|. To explore more of the abilities of |app| we'll examine a more complex real life example in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:144
# 2d17644f22034727a39248fb342dbd65
msgid "Real life example"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:146
# 1b342f2ba9164644aecfe4b360a0d703
msgid "A reasonably complex real life example that exposes more of the :term:`API` of ``BasicNewsRecipe`` is the :term:`recipe` for *The New York Times*"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:232
# 79a7ab472deb4d66a6dc1990234c6fd6
msgid "We see several new features in this :term:`recipe`. First, we have::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:236
# 15096f79e7fc412ab15610edd88fc0b2
msgid "This sets the displayed time on the front page of the created ebook to be in the format, ``Day, Day_Number Month, Year``. See :attr:`timefmt <calibre.web.feeds.news.BasicNewsRecipe.timefmt>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:239
# d811882930d44b408423e539c6647b08
msgid "Then we see a group of directives to cleanup the downloaded :term:`HTML`::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:245
# c24f664583604d709878addec9781156
msgid "These remove everything before the first ``<h1>`` tag and everything after the first tag whose id is ``footer``. See :attr:`remove_tags <calibre.web.feeds.news.BasicNewsRecipe.remove_tags>`, :attr:`remove_tags_before <calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before>`, :attr:`remove_tags_after <calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:247
# fffc4b7c410d4e8ca7c67d452dd43a6a
msgid "The next interesting feature is::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:254
# 16839096f15647c6b3221ed2cfddb2bf
msgid "``needs_subscription = True`` tells |app| that this recipe needs a username and password in order to access the content. This causes, |app| to ask for a username and password whenever you try to use this recipe. The code in :meth:`calibre.web.feeds.news.BasicNewsRecipe.get_browser` actually does the login into the NYT website. Once logged in, |app| will use the same, logged in, browser instance to fetch all content. See `mechanize <http://wwwsearch.sourceforge.net/mechanize/>`_ to understand the code in ``get_browser``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:256
# b5656983be93434f90de5268b67a4d84
msgid "The next new feature is the :meth:`calibre.web.feeds.news.BasicNewsRecipe.parse_index` method. Its job is to go to http://www.nytimes.com/pages/todayspaper/index.html and fetch the list of articles that appear in *todays* paper. While more complex than simply using :term:`RSS`, the recipe creates an ebook that corresponds very closely to the days paper. ``parse_index`` makes heavy use of `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ to parse the daily paper webpage. You can also use other, more modern parsers if you dislike BeatifulSoup. calibre comes with `lxml <http://lxml.de/>`_ and `html5lib <https://github.com/html5lib/html5lib-python>`_, which are the recommended parsers. To use them, replace the call to ``index_to_soup()`` with the following::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:277
# d68eaf36721e40929e57f82c86c614be
msgid "The final new feature is the :meth:`calibre.web.feeds.news.BasicNewsRecipe.preprocess_html` method. It can be used to perform arbitrary transformations on every downloaded HTML page. Here it is used to bypass the ads that the nytimes shows you before each article."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:280
# 862ea08d9de8488bb427508a528cd69d
msgid "Tips for developing new recipes"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:282
# b8adb824c5304345b7e9f0413b342f39
msgid "The best way to develop new recipes is to use the command line interface. Create the recipe using your favorite python editor and save it to a file say :file:`myrecipe.recipe`. The `.recipe` extension is required. You can download content using this recipe with the command::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:286
# f4b348ca636a44b6aa886e4627f21e76
msgid "The command :command:`ebook-convert` will download all the webpages and save them to the EPUB file :file:`myrecipe.epub`. The :option:`-vv` makes ebook-convert spit out a lot of information about what it is doing. The :option:`--test` makes it download only a couple of articles from at most two feeds. In addition, ebook-convert will put the downloaded HTML into the ``debug/input`` directory, where ``debug`` is the directory you specified in the :option:`--debug-pipeline` option."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:288
# 7473c1a994d343cfbcd19e01d6e9a541
msgid "Once the download is complete, you can look at the downloaded :term:`HTML` by opening the file :file:`debug/input/index.html` in a browser. Once you're satisfied that the download and preprocessing is happening correctly, you can generate ebooks in different formats as shown below::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:295
# 6f0d7139a4d94d768cccbce226c50d4f
msgid "If you're satisfied with your recipe, and you feel there is enough demand to justify its inclusion into the set of built-in recipes, post your recipe in the `calibre recipes forum <http://www.mobileread.com/forums/forumdisplay.php?f=228>`_ to share it with other calibre users."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:298
# 7b0ab400e47a4955985d7b8bbdefa2c4
msgid "On OS X, the command line tools are inside the |app| bundle, for example, if you installed calibre in :file:`/Applications` the command line tools are in :file:`/Applications/calibre.app/Contents/MacOS/calibre`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:304
# bc4054d1c1bc4491b08356e382ddd7ae
msgid ":ref:`ebook-convert`"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:305
# e12c3718d2354a819cd0dcc122fef863
msgid "The command line interface for all ebook conversion."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:309
# d775d37be5b14a7f8ac228f52a71a8d7
msgid "Further reading"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:311
# 5d9ee2db07624b9da6cf3a7fbf563ab4
msgid "To learn more about writing advanced recipes using some of the facilities, available in ``BasicNewsRecipe`` you should consult the following sources:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:314
# 118f109586714370b0f8eeb267dc7f7b
msgid ":ref:`API Documentation <news_recipe>`"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:314
# c98d018561f1440a99fc6d7bf55032d8
msgid "Documentation of the ``BasicNewsRecipe`` class and all its important methods and fields."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:317
# dee95fd7851143c8b1371ea20b42040e
msgid "`BasicNewsRecipe <http://bazaar.launchpad.net/~kovid/calibre/trunk/annotate/head:/src/calibre/web/feeds/news.py>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:317
# 9968f5d4365041d4b14a78876a55a2b5
msgid "The source code of ``BasicNewsRecipe``"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:320
# de5659d4383646eda2bc2cc2c539f5b6
msgid "`Built-in recipes <http://bazaar.launchpad.net/~kovid/calibre/trunk/files/head:/recipes/>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:320
# 32d9c358b9c8436d88f50cd51e4f7527
msgid "The source code for the built-in recipes that come with |app|"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:324
# ae8a3a93ed9d432683d6e8ec72f1beba
msgid "`The calibre recipes forum <http://www.mobileread.com/forums/forumdisplay.php?f=228>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:323
# aae7b8bf995445149c6c4cf75ab56a69
msgid "Lots of knowledgeable |app| recipe writers hang out here."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:327
# 559aea6e2fab4bc6bc998088b9502a85
msgid "API documentation"
msgstr ""

