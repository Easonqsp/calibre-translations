# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 2.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-26 10:21+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../home/kovid/work/calibre/manual/news.rst:5
# da4872c7d5e64bf58e90c0ff872cbc45
msgid "Adding your favorite news website"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:7
# eaffac8fba374ffe9f602c2b9a1f490d
msgid "|app| has a powerful, flexible and easy-to-use framework for downloading news from the Internet and converting it into an ebook. The following will show you, by means of examples, how to get news from various websites."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:9
# 3880a12220b94b7bb2bd8be2c329c2fb
msgid "To gain an understanding of how to use the framework, follow the examples in the order listed below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:16
# f908a3b509dd41278b18765e45918340
msgid "Completely automatic fetching"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:18
# 8a6875a485734f13baff2cb6519d3d54
msgid "If your news source is simple enough, |app| may well be able to fetch it completely automatically, all you need to do is provide the URL. |app| gathers all the information needed to download a news source into a :term:`recipe`. In order to tell |app| about a news source, you have to create a :term:`recipe` for it. Let's see some examples:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:23
# 0202f3c691ed49908b4ec8430e64fe65
msgid "portfolio.com"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:25
# 5c5a3015bbb3464894d64149049fa495
msgid "*portfolio.com* is the website for *Cond√© Nast Portfolio*, a business related magazine. In order to download articles from the magazine and convert them to ebooks, we rely on the :term:`RSS` feeds of portfolio.com. A list of such feeds is available at http://www.portfolio.com/rss/."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:27
# 3b33d94467354de9919ff3e2505c584d
msgid "Lets pick a couple of feeds that look interesting:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:29
# 0980b12e190348238928f4942891db5e
msgid "Business Travel: http://feeds.portfolio.com/portfolio/businesstravel"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:30
# a073c0a591b24155aeddad379cf21b3e
msgid "Tech Observer: http://feeds.portfolio.com/portfolio/thetechobserver"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:32
# 0b29c995a69a4bbaaf829de7044467b6
msgid "I got the URLs by clicking the little orange RSS icon next to each feed name. To make |app| download the feeds and convert them into an ebook, you should right click the :guilabel:`Fetch news` button and then the :guilabel:`Add a custom news source` menu item. A dialog similar to that shown below should open up."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:37
# cc0cb18f92674ebaa5f36b8d9b41de95
msgid "First enter ``Portfolio`` into the :guilabel:`Recipe title` field. This will be the title of the ebook that will be created from the articles in the above feeds."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:39
# 2b142d585f364ef7bfa282627ddad05a
msgid "The next two fields (:guilabel:`Oldest article` and :guilabel:`Max. number of articles`) allow you some control over how many articles should be downloaded from each feed, and they are pretty self explanatory."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:41
# 16c0fd29dba547a9a8c0c4ebb960f316
msgid "To add the feeds to the recipe, enter the feed title and the feed URL and click the :guilabel:`Add feed` button. Once you have added both feeds, simply click the :guilabel:`Add/update recipe` button and you're done! Close the dialog."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:43
# 17c8d2e771b84254ad571f090832ac49
msgid "To test your new :term:`recipe`, click the :guilabel:`Fetch news` button and in the :guilabel:`Custom news sources` sub-menu click :guilabel:`Portfolio`. After a couple of minutes, the newly downloaded Portfolio ebook will appear in the main library view (if you have your reader connected, it will be put onto the reader instead of into the library). Select it and hit the :guilabel:`View` button to read!"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:45
# 64c8a9a7b36a41878641e63ff258453e
msgid "The reason this worked so well, with so little effort is that *portfolio.com* provides *full-content* :term:`RSS` feeds, i.e., the article content is embedded in the feed itself. For most news sources that provide news in this fashion, with *full-content* feeds, you don't need any more effort to convert them to ebooks. Now we will look at a news source that does not provide full content feeds. In such feeds, the full article is a webpage and the feed only contains a link to the webpage with a short summary of the article."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:50
# 74cef05cdd974f05a2be21e078bc02f7
msgid "bbc.co.uk"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:52
# 784336687c7548449f2a756589be5fcd
msgid "Lets try the following two feeds from *The BBC*:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:54
# ad9236c14baa4ccaa2271c2073390135
msgid "News Front Page: http://newsrss.bbc.co.uk/rss/newsonline_world_edition/front_page/rss.xml"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:55
# 85ac481432f84f1e98d2d6458c14a5b1
msgid "Science/Nature: http://newsrss.bbc.co.uk/rss/newsonline_world_edition/science/nature/rss.xml"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:57
# 61d188ef3c7749ca9c276d7572b7e687
msgid "Follow the procedure outlined in :ref:`portfolio` to create a recipe for *The BBC* (using the feeds above). Looking at the downloaded ebook, we see that |app| has done a creditable job of extracting only the content you care about from each article's webpage. However, the extraction process is not perfect. Sometimes it leaves in undesirable content like menus and navigation aids or it removes content that should have been left alone, like article headings. In order, to have perfect content extraction, we will need to customize the fetch process, as described in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:60
# 44f8790b548448f9b2fbe053a16a3f05
msgid "Customizing the fetch process"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:62
# a49e98fd584546a8aad69f8d70c81e41
msgid "When you want to perfect the download process, or download content from a particularly complex website, you can avail yourself of all the power and flexibility of the :term:`recipe` framework. In order to do that, in the :guilabel:`Add custom news sources` dialog, simply click the :guilabel:`Switch to Advanced mode` button."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:64
# bcddf17de47744bdb4e992075fddc2c9
msgid "The easiest and often most productive customization is to use the print version of the online articles. The print version typically has much less cruft and translates much more smoothly to an ebook. Let's try to use the print version of the articles from *The BBC*."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:67
# 107b6663a87046cd9a8f827ee6e3b940
msgid "Using the print version of bbc.co.uk"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:69
# 5929e53642e448cfbb400fd46ec03e1e
msgid "The first step is to look at the ebook we downloaded previously from :ref:`bbc`. At the end of each article, in the ebook is a little blurb telling you where the article was downloaded from. Copy and paste that URL into a browser. Now on the article webpage look for a link that points to the \"Printable version\". Click it to see the print version of the article. It looks much neater! Now compare the two URLs. For me they were:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:72
# 738cc4f1401d42d8900464c287901039
msgid "Article URL"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:72
# a482e17be1a843d48d25a637a5c1125e
msgid "http://news.bbc.co.uk/2/hi/science/nature/7312016.stm"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:75
# 6f4658d4e8b048f8beaf4b17ad37841e
msgid "Print version URL"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:75
# 1b57732e92e94c04a230b7fa9ceb025c
msgid "http://newsvote.bbc.co.uk/mpapps/pagetools/print/news.bbc.co.uk/2/hi/science/nature/7312016.stm"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:77
# c30b61b5f15a45028746801f15a3ec2f
msgid "So it looks like to get the print version, we need to prefix every article URL with:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:79
# 8e2cf2a69ee148a98b95c8f87407f50a
msgid "newsvote.bbc.co.uk/mpapps/pagetools/print/"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:81
# 6d9c7e793cdc4f36a698dffd3107887d
msgid "Now in the :guilabel:`Advanced Mode` of the Custom  news sources dialog, you should see something like (remember to select *The BBC* recipe before switching to advanced mode):"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:86
# 329b675cc51d41f89641301157010852
msgid "You can see that the fields from the :guilabel:`Basic mode` have been translated to python code in a straightforward manner. We need to add instructions to this recipe to use the print version of the articles. All that's needed is to add the following two lines:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:93
# 5d924e041fad4bdc8badf5b673f03e17
msgid "This is python, so indentation is important. After you've added the lines, it should look like:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:98
# 6dd96a3732a74a72861f15eb485c9489
msgid "In the above, ``def print_version(self, url)`` defines a *method* that is called by |app| for every article. ``url`` is the URL of the original article. What ``print_version`` does is take that url and replace it with the new URL that points to the print version of the article. To learn about `python <http://www.python.org>`_ see the `tutorial <http://docs.python.org/tut/>`_."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:100
# 293a2c5bbfb74cd8a401cb78e961c7e2
msgid "Now, click the :guilabel:`Add/update recipe` button and your changes will be saved. Re-download the ebook. You should have a much improved ebook. One of the problems with the new version is that the fonts on the print version webpage are too small. This is automatically fixed when converting to an ebook, but even after the fixing process, the font size of the menus and navigation bar to become too large relative to the article text. To fix this, we will do some more customization, in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:103
# 5b78324ca63a454daed3e32cb1af15da
msgid "Replacing article styles"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:105
# 6e605c8d9cea40d2b38ba40c676bc381
msgid "In the previous section, we saw that the font size for articles from the print version of *The BBC* was too small. In most websites, *The BBC* included, this font size is set by means of :term:`CSS` stylesheets. We can disable the fetching of such stylesheets by adding the line::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:109
# 92dec8c2580b4df39b659169d0057344
msgid "The recipe now looks like:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:116
# 5414fef86616458c8102f4f156dd6ff7
msgid "The new version looks pretty good. If you're a perfectionist, you'll want to read the next section, which deals with actually modifying the downloaded content."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:119
# 852924c8c0804ba99e11ea1568f211c1
msgid "Slicing and dicing"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:121
# 4b026e2b572e4829967bec22837ecac2
msgid "|app| contains very powerful and flexible abilities when it comes to manipulating downloaded content. To show off a couple of these, let's look at our old friend the :ref:`The BBC <bbc1>` recipe again. Looking at the source code (:term:`HTML`) of a couple of articles (print version), we see that they have a footer that contains no useful information, contained in"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:129
# 64091d7aecac4282a922e64fc2c01305
msgid "This can be removed by adding::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:133
# 5889312fd24548e8b31ad1644210b087
msgid "to the recipe. Finally, lets replace some of the :term:`CSS` that we disabled earlier, with our own :term:`CSS` that is suitable for conversion to an ebook::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:137
# 0d462b22b3074278bdbafeae50d57ca9
msgid "With these additions, our recipe has become \"production quality\", indeed it is very close to the actual recipe used by |app| for the *BBC*, shown below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:141
# a6b00da1cfb4448c94ebe9166737f7ac
msgid "This :term:`recipe` explores only the tip of the iceberg when it comes to the power of |app|. To explore more of the abilities of |app| we'll examine a more complex real life example in the next section."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:144
# 5ae88ae03e8f4a39865da604a17e9438
msgid "Real life example"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:146
# 289ed80f31ab4492a37cab13d77ec9e1
msgid "A reasonably complex real life example that exposes more of the :term:`API` of ``BasicNewsRecipe`` is the :term:`recipe` for *The New York Times*"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:232
# 3aab2453893e49ce93e4cb598b642ea6
msgid "We see several new features in this :term:`recipe`. First, we have::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:236
# a2d4d3c3fb434c7d9b4dd62a32139f4a
msgid "This sets the displayed time on the front page of the created ebook to be in the format, ``Day, Day_Number Month, Year``. See :attr:`timefmt <calibre.web.feeds.news.BasicNewsRecipe.timefmt>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:239
# 5bbf817d1aa64fe7b7b63eb9d443453f
msgid "Then we see a group of directives to cleanup the downloaded :term:`HTML`::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:245
# 6d4095fd6c5245e6856e8146a15ba899
msgid "These remove everything before the first ``<h1>`` tag and everything after the first tag whose id is ``footer``. See :attr:`remove_tags <calibre.web.feeds.news.BasicNewsRecipe.remove_tags>`, :attr:`remove_tags_before <calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before>`, :attr:`remove_tags_after <calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:247
# 10d9f4bd1148454ba1a5a9bb04df4fb0
msgid "The next interesting feature is::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:254
# ed60b0ee7ca34e60b7c4a8fba8a81a0f
msgid "``needs_subscription = True`` tells |app| that this recipe needs a username and password in order to access the content. This causes, |app| to ask for a username and password whenever you try to use this recipe. The code in :meth:`calibre.web.feeds.news.BasicNewsRecipe.get_browser` actually does the login into the NYT website. Once logged in, |app| will use the same, logged in, browser instance to fetch all content. See `mechanize <http://wwwsearch.sourceforge.net/mechanize/>`_ to understand the code in ``get_browser``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:256
# aaebcc8883b44bc9a8c38aa587dc57fe
msgid "The next new feature is the :meth:`calibre.web.feeds.news.BasicNewsRecipe.parse_index` method. Its job is to go to http://www.nytimes.com/pages/todayspaper/index.html and fetch the list of articles that appear in *todays* paper. While more complex than simply using :term:`RSS`, the recipe creates an ebook that corresponds very closely to the days paper. ``parse_index`` makes heavy use of `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ to parse the daily paper webpage. You can also use other, more modern parsers if you dislike BeatifulSoup. calibre comes with `lxml <http://lxml.de/>`_ and `html5lib <https://github.com/html5lib/html5lib-python>`_, which are the recommended parsers. To use them, replace the call to ``index_to_soup()`` with the following::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:277
# d2dd83955ab8448780bc12b23fb13a1c
msgid "The final new feature is the :meth:`calibre.web.feeds.news.BasicNewsRecipe.preprocess_html` method. It can be used to perform arbitrary transformations on every downloaded HTML page. Here it is used to bypass the ads that the nytimes shows you before each article."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:280
# 6c2c1704db014deda977513321fd4b51
msgid "Tips for developing new recipes"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:282
# e6617993af464e679215ce2f568a658b
msgid "The best way to develop new recipes is to use the command line interface. Create the recipe using your favorite python editor and save it to a file say :file:`myrecipe.recipe`. The `.recipe` extension is required. You can download content using this recipe with the command::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:286
# 05c3591138734d0191a22e910c52dc94
msgid "The command :command:`ebook-convert` will download all the webpages and save them to the EPUB file :file:`myrecipe.epub`. The :option:`-vv` makes ebook-convert spit out a lot of information about what it is doing. The :option:`--test` makes it download only a couple of articles from at most two feeds. In addition, ebook-convert will put the downloaded HTML into the ``debug/input`` directory, where ``debug`` is the directory you specified in the :option:`--debug-pipeline` option."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:288
# 84130272f1e24a6587f206cc14e34ad8
msgid "Once the download is complete, you can look at the downloaded :term:`HTML` by opening the file :file:`debug/input/index.html` in a browser. Once you're satisfied that the download and preprocessing is happening correctly, you can generate ebooks in different formats as shown below::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:295
# 5c3c9af92a1a4c21b6d4eb5098990c9d
msgid "If you're satisfied with your recipe, and you feel there is enough demand to justify its inclusion into the set of built-in recipes, post your recipe in the `calibre recipes forum <http://www.mobileread.com/forums/forumdisplay.php?f=228>`_ to share it with other calibre users."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:298
# 27da2713491642bc906b1e648c186943
msgid "On OS X, the command line tools are inside the |app| bundle, for example, if you installed calibre in :file:`/Applications` the command line tools are in :file:`/Applications/calibre.app/Contents/console.app/Contents/MacOS/`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:304
# 154ba9ce743a4a65a3a845db2b5dae76
msgid ":ref:`ebook-convert`"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:305
# 98cf7a63fa1148098624c99f2073ba7a
msgid "The command line interface for all ebook conversion."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:309
# 0ce38f3530584b0484767e32c4626082
msgid "Further reading"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:311
# 787861b8dd704dda90dd5c945bd233ba
msgid "To learn more about writing advanced recipes using some of the facilities, available in ``BasicNewsRecipe`` you should consult the following sources:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:314
# 01bffc1343924500b2efca70acc3b66e
msgid ":ref:`API Documentation <news_recipe>`"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:314
# 273cd96534be489bbb5d30275f105cf6
msgid "Documentation of the ``BasicNewsRecipe`` class and all its important methods and fields."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:317
# 3fa38855aecf449f92fc27550b029752
msgid "`BasicNewsRecipe <http://bazaar.launchpad.net/~kovid/calibre/trunk/annotate/head:/src/calibre/web/feeds/news.py>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:317
# f25be326c958406ab16e50bf597358bb
msgid "The source code of ``BasicNewsRecipe``"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:320
# 10246717c43a490db7e538f0d8718744
msgid "`Built-in recipes <http://bazaar.launchpad.net/~kovid/calibre/trunk/files/head:/recipes/>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:320
# 2dd8e3b580c14e50b17ccc85162a9514
msgid "The source code for the built-in recipes that come with |app|"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:324
# 41719ea62b6f448ba96fd7de7518ab36
msgid "`The calibre recipes forum <http://www.mobileread.com/forums/forumdisplay.php?f=228>`_"
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:323
# 091991c1508a427889872f282bedd4a1
msgid "Lots of knowledgeable |app| recipe writers hang out here."
msgstr ""

#: ../../home/kovid/work/calibre/manual/news.rst:327
# 7654f43fdb724f5bad01163be9157c54
msgid "API documentation"
msgstr ""

