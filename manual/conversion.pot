# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.45.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-18 08:08+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../conversion.rst:6
# f0fedc8de3b64f8f959b793fc88941f6
msgid "Ebook Conversion"
msgstr ""

#: ../../conversion.rst:8
# 8195311c3e67466194b04619adc9ef8d
msgid "|app| has a conversion system that is designed to be very easy to use. Normally, you just add a book to |app|, click convert and |app| will try hard to generate output that is as close as possible to the input. However, |app| accepts a very large number of input formats, not all of which are as suitable as others for conversion to ebooks. In the case of such input formats, or if you just want greater control over the conversion system, |app| has a lot of options to fine tune the conversion process. Note however that |app|'s conversion system is not a substitute for a full blown ebook editor. To edit ebooks, I recommend first converting them to EPUB or AZW3 using |app| and then using the Edit Book feature to get them into perfect shape. You can then use the edited ebook as input for conversion into other formats in |app|."
msgstr ""

#: ../../conversion.rst:20
# 1666a04630e04b529d64d6596d2fa5ad
msgid "This document will refer mainly to the conversion settings as found in the conversion dialog, pictured below. All these settings are also available via command line interface to conversion, documented at :ref:`ebook-convert`. In |app|, you can obtain help on any individual setting by holding your mouse over it, a tooltip will appear describing the setting."
msgstr ""

#: ../../conversion.rst:0
#: ../../conversion.rst:0
# a0c9ff19bdbc494f86d73b16d4a18cc4
# 7d9f935606b04cbf96f87e11785c2269
msgid "Contents"
msgstr ""

#: ../../conversion.rst:38
# 8cf0115700ba420280e57fef74936784
msgid "Introduction"
msgstr ""

#: ../../conversion.rst:44
# 69b9dc85de3b4895a6dd340a968bd396
msgid "The first thing to understand about the conversion system is that it is designed as a pipeline. Schematically, it looks like this:"
msgstr ""

#: ../../conversion.rst:51
# 46bb94c6e2614467b490f4d25d6b9da1
msgid "The input format is first converted to XHTML by the appropriate *Input Plugin*. This HTML is then *transformed*. In the last step, the processed XHTML is converted to the specified output format by the appropriate *Output Plugin*. The results of the conversion can vary greatly, based on the input format. Some formats convert much better than others. A list of the best source formats for conversion is available :ref:`here <best-source-formats>`."
msgstr ""

#: ../../conversion.rst:58
# 0c4c44cf72594bf88e0b52807bc9a27a
msgid "The transforms that act on the XHTML output are where all the work happens. There are various transforms, for example, to insert book metadata as a page at the start of the book, to detect chapter headings and automatically create a Table of Contents, to proportionally adjust font sizes, et cetera. It is important to remeber that all the transforms act on the XHTML output by the *Input Plugin*, not on the input file itself. So, for example, if you ask |app| to convert an RTF file to EPUB, it will first be converted to XHTML internally, the various transforms will be applied to the XHTML and then the *Output Plugin* will create the EPUB file, automatically generating all metadata, Table of Contents, et cetera."
msgstr ""

#: ../../conversion.rst:67
# 6779dc8375e7442f82e3cd6d62c737cf
msgid "You can see this process in action by using the debug option |dbgi|. Just specify the path to a directory for the debug output. During conversion, |app| will place the XHTML generated by the various stages of the conversion pipeline in different sub-directories. The four sub-directories are:"
msgstr ""

#: ../../conversion.rst:0
# 9bbcae2ef29d4693982a65a25f347998
msgid "Stages of the conversion pipeline"
msgstr ""

#: ../../conversion.rst:75
# a37e0b2171514429acdc8101fb5a5462
msgid "Directory"
msgstr ""

#: ../../conversion.rst:75
# ac46dfc51f1d40c99c9ab19ea9c2d1c9
msgid "Description"
msgstr ""

#: ../../conversion.rst:77
# 441c09c60f0040e8b4139c8cad3738ee
msgid "input"
msgstr ""

#: ../../conversion.rst:77
# fd1fcc24e54a412f8881b44386fae508
msgid "This contains the HTML output by the Input Plugin. Use this to debug the Input Plugin."
msgstr ""

#: ../../conversion.rst:78
# 1b4cff118da14b5d80d3bdceff77091c
msgid "parsed"
msgstr ""

#: ../../conversion.rst:78
# 8f0bd76a51a245498f838cb2367b6372
msgid "The result of pre-processing and converting to XHTML the output from the Input Plugin. Use to debug structure detection."
msgstr ""

#: ../../conversion.rst:79
# e5fda1d23209499d83b2bb350245f737
msgid "structure"
msgstr ""

#: ../../conversion.rst:79
# 5d22b60d8d9b4bc598229adf4307601e
msgid "Post structure detection, but before CSS flattening and font size conversion. Use to debug font size conversion and CSS transforms."
msgstr ""

#: ../../conversion.rst:80
# 2387442395b04e65b0e2f40e4225ccbe
msgid "processed"
msgstr ""

#: ../../conversion.rst:80
# 3a539f53035d4164ab3561ac7412f21b
msgid "Just before the ebook is passed to the output plugin. Use to debug the Output Plugin."
msgstr ""

#: ../../conversion.rst:83
# a12096c6a30f45e3acaa2c4ff5a60383
msgid "If you want to edit the input document a little before having |app| convert it, the best thing to do is edit the files in the :file:`input` sub-directory, then zip it up, and use the zip file as the input format for subsequent conversions. To do this use the :guilabel:`Edit meta information` dialog to add the zip file as a format for the book and then, in the top left corner of the conversion dialog, select ZIP as the input format."
msgstr ""

#: ../../conversion.rst:89
# 4d3b37ca99224841973dc1bb3dfbdc2b
msgid "This document will deal mainly with the various transforms that operate on the intermediate XHTML and how to control them. At the end are some tips specific to each Input/Output format."
msgstr ""

#: ../../conversion.rst:93
# cb93f7f3aaf2497ab37d607b361a57da
msgid "Look & Feel"
msgstr ""

#: ../../conversion.rst:99
# 7de3f2f32bf04ad69ec05f0bcb3485fa
msgid "This group of options controls various aspects of the look and feel of the converted ebook."
msgstr ""

#: ../../conversion.rst:104
# 49d188fe4c1546f3888d36f4bfc4bac1
msgid "Font size rescaling"
msgstr ""

#: ../../conversion.rst:106
# 3013d56173584e0b9fbb8c0d26480604
msgid "One of the nicest features of the e-reading experience is the ability to easily adjust font sizes to suit individual needs and lighting conditions. |app| has sophisticated algorithms to ensure that all the books it outputs have a consistent font sizes, no matter what font sizes are specified in the input document."
msgstr ""

#: ../../conversion.rst:111
# 6da6ea6fb9ba4b84b0099cd03b0304cd
msgid "The base font size of a document is the most common font size in that document, i.e., the size of the bulk of text in that document. When you specify a :guilabel:`Base font size`, |app| automatically rescales all font sizes in the document proportionately, so that the most common font size becomes the specified base font size and other font sizes are rescaled appropriately. By choosing a larger base font size, you can make the fonts in the document larger and vice versa. When you set the base font size, for best results, you should also set the font size key."
msgstr ""

#: ../../conversion.rst:119
# 7f25b7a51e3c4c6ca5dbde7c37a82ab1
msgid "Normally, |app| will automatically choose a base font size appropriate to the Output Profile you have chosen (see :ref:`page-setup`). However, you can override this here in case the default is not suitable for you."
msgstr ""

#: ../../conversion.rst:123
# b21a0a02007f4a38bd1d4891fb442a23
msgid "The :guilabel:`Font size key` option lets you control how non-base font sizes are rescaled. The font rescaling algorithm works using a font size key, which is simply a comma-separated list of font sizes. The font size key tells |app| how many \"steps\" bigger or smaller a given font size should be compared to the base font size. The idea is that there should be a limited number of font sizes in a document. For example, one size for the body text, a couple of sizes for different levels of headings and a couple of sizes for super/sub scripts and footnotes. The font size key allows |app| to compartmentalize the font sizes in the input documents into separate \"bins\" corresponding to the different logical font sizes."
msgstr ""

#: ../../conversion.rst:132
# 1fb969c9bb964aa2adf6e0c32d51b733
msgid "Let's illustrate with an example. Suppose the source document we are converting was produced by someone with excellent eyesight and has a base font size of 8pt. That means the bulk of the text in the document is sized at 8pts, while headings are somewhat larger (say 10 and 12pt) and footnotes somewhat smaller at 6pt. Now if we use the following settings::"
msgstr ""

#: ../../conversion.rst:141
# 91d2c59ba08747eda9f96f9f9a0eb51b
msgid "The output document will have a base font size of 12pt, headings of 14 and 16pt and footnotes of 8pt. Now suppose we want to make the largest heading size stand out more and make the footnotes a little larger as well. To achieve this, the font key should be changed to::"
msgstr ""

#: ../../conversion.rst:147
# 2a1d75c5c74b48378ed5f6befd704714
msgid "The largest headings will now become 18pt, while the footnotes will become 9pt. You can play with these settings to try and figure out what would be optimum for you by using the font rescaling wizard, which can be accessed by clicking the little button next to the :guilabel:`Font size key` setting."
msgstr ""

#: ../../conversion.rst:152
# db3bca38ffc64dfe93e9e2428f1621f9
msgid "All the font size rescaling in the conversion can also be disabled here, if you would like to preserve the font sizes in the input document."
msgstr ""

#: ../../conversion.rst:155
# 3426f5713cfa48508b7f2dfbcb13effb
msgid "A related setting is :guilabel:`Line height`. Line height controls the vertical height of lines. By default, (a line height of 0), no manipulation of line heights is performed. If you specify a non-default value, line heights will be set in all locations that don't specify their own line heights. However, this is something of a blunt weapon and should be used sparingly. If you want to adjust the line heights for some section of the input, it's better to use the :ref:`extra-css`."
msgstr ""

#: ../../conversion.rst:163
# 0a272a83c01e4f8cb0f00ba89d483022
msgid "Paragraph spacing"
msgstr ""

#: ../../conversion.rst:165
# e639a2bdc5f34fd4876d80d3d1f45a78
msgid "Normally, paragraphs in XHTML are rendered with a blank line between them and no leading text indent. |app| has a couple of options to control this. :guilabel:`Remove spacing between paragraphs` forcefully ensure that all paragraphs have no inter paragraph spacing. It also sets the text indent to 1.5em (can be changed) to mark the start of every paragraph. :guilabel:`Insert blank line` does the opposite, guaranteeing that there is exactly one blank line between each pair of paragraphs. Both these options are very comprehensive, removing spacing, or inserting it for *all* paragraphs (technically <p> and <div> tags). This is so that you can just set the option and be sure that it performs as advertised, irrespective of how messy the input file is. The one exception is when the input file uses hard line breaks to implement inter-paragraph spacing."
msgstr ""

#: ../../conversion.rst:176
# 83e84e8c9858466ba497a47251b80bc5
msgid "If you want to remove the spacing between all paragraphs, except a select few, don't use these options. Instead add the following CSS code to :ref:`extra-css`::"
msgstr ""

#: ../../conversion.rst:182
# 13f649077a3b4649bfc783a78d13ce35
msgid "Then, in your source document, mark the paragraphs that need spacing with `class=\"spacious\"`. If your input document is not in HTML, use the Debug option, described in the Introduction to get HTML (use the :file:`input` sub-directory)."
msgstr ""

#: ../../conversion.rst:190
# 6f72ce501fa9412989e85c9b339afda6
msgid "Extra CSS"
msgstr ""

#: ../../conversion.rst:192
# 03bc71f2c9d049959fd88ba551d92ca4
msgid "This option allows you to specify arbitrary CSS that will be applied to all HTML files in the input. This CSS is applied with very high priority and so should override most CSS present in the **input document** itself. You can use this setting to fine tune the presentation/layout of your document. For example, if you want all paragraphs of class `endnote` to be right aligned, just add::"
msgstr ""

#: ../../conversion.rst:200
# d1f5eb841b404cf6a87b0098f1c2e6f1
msgid "or if you want to change the indentation of all paragraphs::"
msgstr ""

#: ../../conversion.rst:204
# 9489516b4b874dfaaf7e5280dfd26826
msgid ":guilabel:`Extra CSS` is a very powerful option, but you do need an understanding of how CSS works to use it to its full potential. You can use the debug pipeline option described above to see what CSS is present in your input document."
msgstr ""

#: ../../conversion.rst:209
#: ../../conversion.rst:414
# f69df0328d94477b8993238408871690
# a3315789117349c896f3cfb1d7d43326
msgid "Miscellaneous"
msgstr ""

#: ../../conversion.rst:211
#: ../../conversion.rst:416
# 7e03b454ae4340638312358f9e110b8d
# 54018da36ff34566bafd16d823d67af1
msgid "There are a few more options in this section."
msgstr ""

#: ../../conversion.rst:217
# 91597a93f64441b780e048816453c0d7
msgid ":guilabel:`No text justification`"
msgstr ""

#: ../../conversion.rst:214
# 2b637850e451465d87978ce25f7cf439
msgid "Normally, if the output format supports it, |app| will force the output ebook to have *justified* text (i.e., a smooth right margin). This option will turn off this behavior, in which case whatever justification is specified in the input document will be used instead."
msgstr ""

#: ../../conversion.rst:224
# 276c0fcb71ec401281a72841eee36e23
msgid ":guilabel:`Linearize tables`"
msgstr ""

#: ../../conversion.rst:220
# 6d2cac73cb3c4b3b8acc8bc284d74280
msgid "Some badly designed documents use tables to control the layout of text on the page. When converted these documents often have text that runs off the page and other artifacts. This option will extract the content from the tables and present it in a linear fashion. Note that this option linearizes *all* tables, so only use it if you are sure the input document does not use tables for legitimate purposes, like presenting tabular information."
msgstr ""

#: ../../conversion.rst:233
# d78dbc8303b4455290784d6ecfd439a5
msgid ":guilabel:`Transliterate unicode characters`"
msgstr ""

#: ../../conversion.rst:227
# fe825be9f7624b868c9821f116eaf185
msgid "Transliterate unicode characters to an ASCII representation. Use with care because this will replace unicode characters with ASCII. For instance it will replace \"Михаил Горбачёв\" with \"Mikhail Gorbachiov\". Also, note that in cases where there are multiple representations of a character (characters shared by Chinese and Japanese for instance) the representation used by the largest number of people will be used (Chinese in the previous example). This option is mainly useful if you are going to view the ebook on a device that does not have support for unicode."
msgstr ""

#: ../../conversion.rst:242
# faa6b59acd0e4bf388474a32b6ed18a3
msgid ":guilabel:`Input character encoding`"
msgstr ""

#: ../../conversion.rst:236
# eb735293afff46e5b7ff1a3c99627060
msgid "Older documents sometimes don't specify their character encoding. When converted, this can result in non-English characters or special characters like smart quotes being corrupted. |app| tries to auto-detect the character encoding of the source document, but it does not' always succeed. You can force it to assume a particular character encoding by using this setting. `cp1252` is a common encoding for documents produced using windows software. You should also read :ref:`char-encoding-faq` for more on encoding issues."
msgstr ""

#: ../../conversion.rst:247
# c9663f8afd53460986d0cd351a967fa2
msgid "Page Setup"
msgstr ""

#: ../../conversion.rst:249
# 483f868bf6cb46b58b696c50fd04c06b
msgid "The Page Setup options are for controlling screen layout, like margins and screen sizes. There are options to setup page margins, which will be used by the Output Plugin, if the selected Output Format supports page margins. In addition, you should choose an Input profile and an Output profile. Both sets of profiles basically deal with how to interpret measurements in the input/output documents, screen sizes and default font rescaling keys."
msgstr ""

#: ../../conversion.rst:255
# 5112316672b24403b91147538cd68503
msgid "If you know that the file you are converting was intended to be used on a particular device/software platform, choose the corresponding input profile, otherwise just choose the default input profile. If you know the files you are producing are meant for a particular device type, choose the corresponding Output profile. In particular, for MOBI Output files, you should choose the Kindle, for LIT the Microsoft Reader and for EPUB the Sony Reader. In the case of EPUB, the Sony Reader profile will result in EPUB files that will work everywhere. However, it has some side effects, like inserting artificial section breaks to keep internal components below the size threshold, needed for SONY devices. In particular for the iPhone/Android phones, choose the SONY output profile. If you know your EPUB files will not be read on a SONY or similar device, use the default output profile. If you are producing MOBI files that are not intended for the Kindle, choose the Mobipocket books output profile."
msgstr ""

#: ../../conversion.rst:259
# 574c477bd08e4aa89f4bf55785296bd8
msgid "The Output profile also controls the screen size. This will cause, for example, images to be auto-resized to be fit to the screen in some output formats. So choose a profile of a device that has a screen size similar to your device."
msgstr ""

#: ../../conversion.rst:264
# 382d706a1fb447459f326a9bce0077ec
msgid "Heuristic Processing"
msgstr ""

#: ../../conversion.rst:266
# c61006eb8ca34394abac2cbb5fe35de9
msgid "Heuristic Processing provides a variety of functions which can be used to try and detect and correct common problems in poorly formatted input documents.  Use these functions if your input document suffers from poor formatting. Because these functions rely on common patterns, be aware that in some cases an option may lead to worse results, so use with care.  As an example, several of these options will remove all non-breaking-space entities, or may include false positive matches relating to the function."
msgstr ""

#: ../../conversion.rst:274
# 398e8ca326ac49478b7d1f0150b80288
msgid ":guilabel:`Enable heuristic processing`"
msgstr ""

#: ../../conversion.rst:273
# 678d20eef9b043d6a2ad889e538a0e2a
msgid "This option activates |app|'s Heuristic Processing stage of the conversion pipeline. This must be enabled in order for various sub-functions to be applied"
msgstr ""

#: ../../conversion.rst:280
# 84d21cfe78314008aec5d4d055146edf
msgid ":guilabel:`Unwrap lines`"
msgstr ""

#: ../../conversion.rst:277
# 39c90a268b634ec58ffea84070df7098
msgid "Enabling this option will cause |app| to attempt to detect and correct hard line breaks that exist within a document using punctuation clues and line length. |app| will first attempt to detect whether hard line breaks exist, if they do not appear to exist |app| will not attempt to unwrap lines. The line-unwrap factor can be reduced if you want to 'force' |app| to unwrap lines."
msgstr ""

#: ../../conversion.rst:286
# 97264b9491424cfba54bb557475d846e
msgid ":guilabel:`Line-unwrap factor`"
msgstr ""

#: ../../conversion.rst:283
# b742c2f00bfb4328aab9f6c33577b910
msgid "This option controls the algorithm |app| uses to remove hard line breaks. For example, if the value of this option is 0.4, that means calibre will remove hard line breaks from the end of lines whose lengths are less than the length of 40% of all lines in the document.  If your document only has a few line breaks which need correction, then this value should be reduced to somewhere between 0.1 and 0.2."
msgstr ""

#: ../../conversion.rst:301
# be1c89d1636845409dfc9cee1e8aca48
msgid ":guilabel:`Detect and markup unformatted chapter headings and sub headings`"
msgstr ""

#: ../../conversion.rst:289
# 0bafd194e8d0475994024cee479c9c86
msgid "If your document does not have chapter headings and titles formatted differently from the rest of the text, |app| can use this option to attempt detection them and surround them with heading tags. <h2> tags are used for chapter headings; <h3> tags are used for any titles that are detected."
msgstr ""

#: ../../conversion.rst:293
# 8235b95c95a54132be80b8ac9391c66d
msgid "This function will not create a TOC, but in many cases it will cause |app|'s default chapter detection settings to correctly detect chapters and build a TOC.  Adjust the XPath under Structure Detection if a TOC is not automatically created.  If there are no other headings used in the document then setting \"//h:h2\" under Structure Detection would be the easiest way to create a TOC for the document."
msgstr ""

#: ../../conversion.rst:298
# cfed54aa48be4129a78d00354503e4d1
msgid "The inserted headings are not formatted, to apply formatting use the :guilabel:`Extra CSS` option under the Look and Feel conversion settings.  For example, to center heading tags, use the following::"
msgstr ""

#: ../../conversion.rst:306
# 3e35c51d4745401e81d5676dfa02c109
msgid ":guilabel:`Renumber sequences of <h1> or <h2> tags`"
msgstr ""

#: ../../conversion.rst:304
# a04b74e26d7c4bcfb35c480e17f6420d
msgid "Some publishers format chapter headings using multiple <h1> or <h2> tags sequentially. |app|'s default conversion settings will cause such titles to be split into two pieces.  This option will re-number the heading tags to prevent splitting."
msgstr ""

#: ../../conversion.rst:313
# 20e5319d9dd440a5b82252019b5d8013
msgid ":guilabel:`Delete blank lines between paragraphs`"
msgstr ""

#: ../../conversion.rst:309
# deaabe35744c42f48aeb1948019a2d78
msgid "This option will cause |app| to analyze blank lines included within the document.  If every paragraph is interleaved with a blank line, then |app| will remove all those blank paragraphs.  Sequences of multiple blank lines will be considered scene breaks and retained as a single paragraph.  This option differs from the 'Remove Paragraph Spacing' option under 'Look and Feel' in that it actually modifies the HTML content, while the other option modifies the document styles.  This option can also remove paragraphs which were inserted using |app|'s 'Insert blank line' option."
msgstr ""

#: ../../conversion.rst:318
# 623a54bdfc4a43a4a244f31f7bfe8a19
msgid ":guilabel:`Ensure scene breaks are consistently formatted`"
msgstr ""

#: ../../conversion.rst:316
# 58e2e103781a4710b71b5bcffdb621bc
msgid "With this option |app| will attempt to detect common scene-break markers and ensure that they are center aligned. 'Soft' scene break markers, i.e. scene breaks only defined by extra white space, are styled to ensure that they will not be displayed in conjunction with page breaks."
msgstr ""

#: ../../conversion.rst:334
# f2c84090a8244a44bd5932f6a3ff77a7
msgid ":guilabel:`Replace scene breaks`"
msgstr ""

#: ../../conversion.rst:321
# b9dbf88807db4d88a861ff1aaa415e96
msgid "If this option is configured then |app| will replace scene break markers it finds with the replacement text specified by the user.  Please note that some ornamental characters may not be supported across all reading devices."
msgstr ""

#: ../../conversion.rst:324
# df01f85083d64eb38668aa19060abf95
msgid "In general you should avoid using html tags, |app| will discard any tags and use pre-defined markup.  <hr /> tags, i.e. horizontal rules, and <img> tags are exceptions.  Horizontal rules can optionally be specified with styles, if you choose to add your own style be sure to include the 'width' setting, otherwise the style information will be discarded.  Image tags can used, but |app| does not provide the ability to add the image during conversion, this must be done after the fact using the 'Edit Book' feature."
msgstr ""

#: ../../conversion.rst:331
# bc56a1958d3242a3adec8e031d9eab43
msgid "Example image tag (place the image within an 'Images' folder inside the epub after conversion):"
msgstr ""

#: ../../conversion.rst:331
# 75771f18bf10456bab2371f8d570e481
msgid "<img style=\"width:10%\" src=\"../Images/scenebreak.png\" />"
msgstr ""

#: ../../conversion.rst:334
# eda40c6c67f843709495192d9265cd91
msgid "Example horizontal rule with styles:"
msgstr ""

#: ../../conversion.rst:334
# a6d547fbfdc949acad579083a0f78311
msgid "<hr style=\"width:20%;padding-top: 1px;border-top: 2px ridge black;border-bottom: 2px groove black;\"/>"
msgstr ""

#: ../../conversion.rst:342
# 02387ec280de4f68abe17898a1b2c173
msgid ":guilabel:`Remove unnecessary hyphens`"
msgstr ""

#: ../../conversion.rst:337
# 69df87f9fce74020bdf0968d53f3f65a
msgid "|app| will analyze all hyphenated content in the document when this option is enabled.  The document itself is used as a dictionary for analysis.  This allows |app| to accurately remove hyphens for any words in the document in any language, along with made-up and obscure scientific words.  The primary drawback is words appearing only a single time in the document will not be changed.  Analysis happens in two passes, the first pass analyzes line endings.  Lines are only unwrapped if the word exists with or without a hyphen in the document.  The second pass analyzes all hyphenated words throughout the document, hyphens are removed if the word exists elsewhere in the document without a match."
msgstr ""

#: ../../conversion.rst:346
# 665ba5d0ac1040e6a80c1492fe464c35
msgid ":guilabel:`Italicize common words and patterns`"
msgstr ""

#: ../../conversion.rst:345
# d315d00863a64b92b3323a3a239c4b96
msgid "When enabled, |app| will look for common words and patterns that denote italics and italicize them.  Examples are common text conventions such as ~word~ or phrases that should generally be italicized, e.g. latin phrases like 'etc.' or 'et cetera'."
msgstr ""

#: ../../conversion.rst:350
# c7e078319baf43db817e78c0c17cd80f
msgid ":guilabel:`Replace entity indents with CSS indents`"
msgstr ""

#: ../../conversion.rst:349
# 623a8e50500b4b8ba8fc856603a7bc8c
msgid "Some documents use a convention of defining text indents using non-breaking space entities.  When this option is enabled |app| will attempt to detect this sort of formatting and convert them to a 3% text indent using css."
msgstr ""

#: ../../conversion.rst:355
# bdc6e7c9c786423fb2b482157bd9d5a3
msgid "Search & Replace"
msgstr ""

#: ../../conversion.rst:357
# 5602b75d2b68405f900785f803bb7b74
msgid "These options are useful primarily for conversion of PDF documents or OCR conversions, though they can also be used to fix many document specific problems. As an example, some conversions can leaves behind page headers and footers in the text. These options use regular expressions to try and detect headers, footers, or other arbitrary text and remove or replace them. Remember that they operate on the intermediate XHTML produced by the conversion pipeline. There is a wizard to help you customize the regular expressions for your document.  Click the magic wand beside the expression box, and click the 'Test' button after composing your search expression.  Successful matches will be highlighted in Yellow."
msgstr ""

#: ../../conversion.rst:365
# 2b5dc5ea657b4d29bf36ad6b3a725073
msgid "The search works by using a python regular expression. All matched text is simply removed from the document or replaced using the replacement pattern. The replacement pattern is optional, if left blank then text matching the search pattern will be deleted from the document.  You can learn more about regular expressions and their syntax at :ref:`regexptutorial`."
msgstr ""

#: ../../conversion.rst:373
# da91002fffae44779b0b86af1f85a01c
msgid "Structure Detection"
msgstr ""

#: ../../conversion.rst:375
# 0c85a48be5e6417b9a58a87eeb974c2e
msgid "Structure detection involves |app| trying its best to detect structural elements in the input document, when they are not properly specified. For example, chapters, page breaks, headers, footers, etc. As you can imagine, this process varies widely from book to book. Fortunately, |app| has very powerful options to control this. With power comes complexity, but if once you take the time to learn the complexity, you will find it well worth the effort."
msgstr ""

#: ../../conversion.rst:378
# ca4dcdba45034bd8953db7cd0c4637c6
msgid "Chapters and page breaks"
msgstr ""

#: ../../conversion.rst:380
# ef128d1906cc48a093968102a6f769ce
msgid "|app| has two sets of options for :guilabel:`chapter detection` and :guilabel:`inserting page breaks`. This can sometimes be slightly confusing, as by default, |app| will insert page breaks before detected chapters as well as the locations detected by the page breaks option. The reason for this is that there are often location where page breaks should be inserted that are not chapter boundaries. Also, detected chapters can be optionally inserted into the auto generated Table of Contents."
msgstr ""

#: ../../conversion.rst:385
# cd58417743244ca48321166d0bf539c9
msgid "|app| uses *XPath*, a powerful language to allow the user to specify chapter boundaries/page breaks. XPath can seem a little daunting to use at first, fortunately, there is a :ref:`XPath tutorial <xpath-tutorial>` in the User Manual. Remember that Structure Detection operates on the intermediate XHTML produced by the conversion pipeline. Use the debug option described in the :ref:`conversion-introduction` to figure out the appropriate settings for your book. There is also a button for a XPath wizard to help with the generation of simple XPath expressions."
msgstr ""

#: ../../conversion.rst:391
# 9f31176e6a95497ab25aa0470c0464bf
msgid "By default, |app| uses the following expression for chapter detection::"
msgstr ""

#: ../../conversion.rst:395
# 46559eaa44684818a34e9875f17c293f
msgid "This expression is rather complex, because it tries to handle a number of common cases simulataneously. What it means is that |app| will assume chapters start at either `<h1>` or `<h2>` tags that have any of the words `(chapter, book, section or part)` in them or that have the `class=\"chapter\"` attribute."
msgstr ""

#: ../../conversion.rst:399
# cd94f65d35c74378b2ffdd0f877a871c
msgid "A related option is :guilabel:`Chapter mark`, which allows you to control what |app| does when it detects a chapter. By default, it will insert a page break before the chapter. You can have it insert a ruled line instead of, or in addition to the page break. You can also have it do nothing."
msgstr ""

#: ../../conversion.rst:403
# 1d092badae7e45b89f9fcbe875cd3761
msgid "The default setting for detecting page breaks is::"
msgstr ""

#: ../../conversion.rst:407
# 9df58b9e87144d029c8a338d609ab68d
msgid "which means that |app| will insert page breaks before every `<h1>` and `<h2>` tag by default."
msgstr ""

#: ../../conversion.rst:411
# aebbcbb05a3b4b789fa7c015a7272cc5
msgid "The default expressions may change depending on the input format you are converting."
msgstr ""

#: ../../conversion.rst:422
# b2d10cb39dca4bc29d2e529f07ed71d1
msgid ":guilabel:`Insert metadata as page at start of book`"
msgstr ""

#: ../../conversion.rst:419
# 0f5065bebcd3416eb3571173c65aef4c
msgid "One of the great things about |app| is that it allows you to maintain very complete metadata about all of your books, for example, a rating, tags, comments, etc. This option will create a single page with all this metadata and insert it into the converted ebook, typically just after the cover. Think of it as a way to create your own customised book jacket."
msgstr ""

#: ../../conversion.rst:429
# 484d4288d2c948808a5e1e0bd96e54af
msgid ":guilabel:`Remove first image`"
msgstr ""

#: ../../conversion.rst:425
# 1d7f40f4684b498ebb3d149753094fad
msgid "Sometimes, the source document you are converting includes the cover as part of the book, instead of as a separate cover. If you also specify a cover in |app|, then the converted book will have two covers. This option will simply remove the first image from the source document, thereby ensuring that the converted book has only one cover, the one specified in |app|."
msgstr ""

#: ../../conversion.rst:432
# 7f4fc9db9664480f8df5a9c1913b1a10
msgid "Table of Contents"
msgstr ""

#: ../../conversion.rst:434
# a90dbe3687774193893871d3b07d2219
msgid "When the input document has a Table of Contents in its metadata, |app| will just use that. However, a number of older formats either do not support a metadata based Table of Contents, or individual documents do not have one. In these cases, the options in this section can help you automatically generate a Table of Contents in the converted ebook, based on the actual content in the input document."
msgstr ""

#: ../../conversion.rst:439
# 91f9bc789b3044918ffc9310c5e4376f
msgid "Using these options can be a little challenging to get exactly right. If you prefer creating/editing the Table of Contents by hand, convert to the EPUB or AZW3 formats and select the checkbox at the bottom of the Table of Contents section of the conversion dialog that says :guilabel:`Manually fine-tune the Table of Contents after conversion`. This will launch the ToC Editor tool after the conversion. It allows you to create entries in the Table of Contents by simply clicking the place in the book where you want the entry to point. You can also use the ToC Editor by itself, without doing a conversion. Go to :guilabel:`Preferences->Toolbars` and add the ToC Editor to the main toolbar. Then just select the book you want to edit and click the ToC Editor button."
msgstr ""

#: ../../conversion.rst:451
# 009fa1d1130c4fe7917768ac35a6ea94
msgid "The first option is :guilabel:`Force use of auto-generated Table of Contents`. By checking this option you can have |app| override any Table of Contents found in the metadata of the input document with the auto generated one."
msgstr ""

#: ../../conversion.rst:455
# 5dc35706a2d54fcab19a3a2005eb7c80
msgid "The default way that the creation of the auto generated Table of Contents works is that, |app| will first try to add any detected chapters to the generated table of contents. You can learn how to customize the detection of chapters in the :ref:`structure-detection` section above. If you do not want to include detected chapters in the generated table of contents, check the :guilabel:`Do not add detected chapters` option."
msgstr ""

#: ../../conversion.rst:460
# 832589e671414657a751153786e17e52
msgid "If less than the :guilabel:`Chapter threshold` number of chapters were detected, |app| will then add any hyperlinks it finds in the input document to the Table of Contents. This often works well many input documents include a hyperlinked Table of Contents right at the start. The :guilabel:`Number of links` option can be used to control this behavior. If set to zero, no links are added. If set to a number greater than zero, at most that number of links is added."
msgstr ""

#: ../../conversion.rst:466
# a6148b531c0d4a60865cc23f4ffc086b
msgid "|app| will automatically filter duplicates from the generated Table of Contents. However, if there are some additional undesirable entries, you can filter them using the :guilabel:`TOC Filter` option. This is a regular expression that will match the title of entries in the generated table of contents. Whenever a match is found, it will be removed. For example, to remove all entries titles \"Next\" or \"Previous\" use::"
msgstr ""

#: ../../conversion.rst:473
# 7304eed7ffa744489a13cea16355f0c2
msgid "The :guilabel:`Level 1,2,3 TOC` options allow you to create a sophisticated multi-level Table of Contents. They are XPath expressions that match tags in the intermediate XHTML produced by the conversion pipeline. See the :ref:`conversion-introduction` for how to get access to this XHTML. Also read the :ref:`xpath-tutorial`, to learn how to construct XPath expressions. Next to each option is a button that launches a wizard to help with the creation of basic XPath expressions. The following simple example illustrates how to use these options."
msgstr ""

#: ../../conversion.rst:479
# 830405b98a3e4871a8de6aca0b946761
msgid "Suppose you have an input document that results in XHTML that look like this:"
msgstr ""

#: ../../conversion.rst:501
# 3c271c0a25c54f80a9dcad931868ee26
msgid "Then, we set the options as::"
msgstr ""

#: ../../conversion.rst:506
# 5972da88e84c47eda7a6fbcc7ed2bae8
msgid "This will result in an automatically generated two level Table of Contents that looks like::"
msgstr ""

#: ../../conversion.rst:517
# 62a7d67f11234957bbba46c4ce40d021
msgid "Not all output formats support a multi level Table of Contents. You should first try with EPUB Output. If that works, then try your format of choice."
msgstr ""

#: ../../conversion.rst:521
# 01afda5fd9f34b1091f203276accb8e2
msgid "Using images as chapter titles when converting HTML input documents"
msgstr ""

#: ../../conversion.rst:523
# e50dff69727e45798a32ca60d29d8fd1
msgid "Suppose you want to use an image as your chapter title, but still want |app| to be able to automatically generate a Table of Contents for you from the chapter titles. Use the following HTML markup to achieve this"
msgstr ""

#: ../../conversion.rst:537
# e4900133b69b4fd0b9a01831f60051f0
msgid "Set the :guilabel:`Level 1 TOC` setting to ``//h:h2``. Then, for chapter two, |app| will take the title from the value of the ``title`` attribute on the ``<h2>`` tag, since the tag has no text."
msgstr ""

#: ../../conversion.rst:540
# f4e68c71ee7f4b7bb1b90a9d9a1e4771
msgid "Using tag attributes to supply the text for entries in the Table of Contents"
msgstr ""

#: ../../conversion.rst:542
# f0540aac56ad4188896f34e45c6064a4
msgid "If you have particularly long chapter titles and want shortened versions in the Table of Contents, you can use the title attribute to achieve this, for example:"
msgstr ""

#: ../../conversion.rst:557
# 00c025e4020841dd96dbe4b6f737aae6
msgid "Set the :guilabel:`Level 1 TOC` setting to ``//h:h2/@title``. Then |app| will take the title from the value of the ``title`` attribute on the ``<h2>`` tags, instead of using the text inside the tag. Note the trailing ``/@title`` on the XPath expression, you can use this form to tell |app| to get the text from any attribute you like."
msgstr ""

#: ../../conversion.rst:564
# 76cd1b0ac71041d19b602e39743e0395
msgid "How options are set/saved for Conversion"
msgstr ""

#: ../../conversion.rst:566
# c0b91bd003b040cb901dad1552354004
msgid "There are two places where conversion options can be set in |app|. The first is in Preferences->Conversion. These settings are the defaults for the conversion options. Whenever you try to convert a new book, the settings set here will be used by default."
msgstr ""

#: ../../conversion.rst:571
# 4a6b9631f3ae4fc2872e11dda8278900
msgid "You can also change settings in the conversion dialog for each book conversion. When you convert a book, |app| remembers the settings you used for that book, so that if you convert it again, the saved settings for the individual book will take precedence over the defaults set in Preferences. You can restore the individual settings to defaults by using the Restore to defaults button in the individual book conversion dialog. You can remove the saved settings for a group of books by selecting all the books and then clicking the edit metadata button to bring up the bulk metadata edit dialog, near the bottom of the dialog is an option to remove stored conversion settings."
msgstr ""

#: ../../conversion.rst:581
# b7d61c63549f4034a1563fdc9aa2ae49
msgid "When you Bulk Convert a set of books, settings are taken in the following order (last one wins):"
msgstr ""

#: ../../conversion.rst:583
# ba86ee71462f40a3b20e6a093cf457e4
msgid "From the defaults set in Preferences->Conversion"
msgstr ""

#: ../../conversion.rst:585
# c66582deba564576b6ac9403b84a7930
msgid "From the saved conversion settings for each book being converted (if any). This can be turned off by the option in the top left corner of the Bulk Conversion dialog."
msgstr ""

#: ../../conversion.rst:589
# 83441bc1e49d42658f4965ca46b0917b
msgid "From the settings set in the Bulk conversion dialog"
msgstr ""

#: ../../conversion.rst:591
# 5cd0c92aa4db4286babbcac300b96fa4
msgid "Note that the final settings for each book in a Bulk Conversion will be saved and re-used if the book is converted again. Since the highest priority in Bulk Conversion is given to the settings in the Bulk Conversion dialog, these will override any book specific settings. So you should only bulk convert books together that need similar settings. The exceptions are metadata and input format specific settings. Since the Bulk Conversion dialog does not have settings for these two categories, they will be taken from book specific settings (if any) or the defaults."
msgstr ""

#: ../../conversion.rst:602
# 31f327e1828e45838df8ee78794f062d
msgid "You can see the actual settings used during any conversion by clicking the rotating icon in the lower right corner and then double clicking the individual conversion job. This will bring up a conversion log that will contain the actual settings used, near the top."
msgstr ""

#: ../../conversion.rst:607
# 7d41848c20014c33894cd23c0033971c
msgid "Format specific tips"
msgstr ""

#: ../../conversion.rst:609
# 4c3899758f4f4554a88629cb8ea03d67
msgid "Here you will find tips specific to the conversion of particular formats. Options specific to particular format, whether input or output are available in the conversion dialog under their own section, for example `TXT Input` or `EPUB Output`."
msgstr ""

#: ../../conversion.rst:614
# d7fd061b54c44bba8ecc3586fa06c7cf
msgid "Convert Microsoft Word documents"
msgstr ""

#: ../../conversion.rst:616
# 04942b01437d4675b5ebe6811cb1dc93
msgid "|app| can automatically convert ``.docx`` files created by Microsoft Word 2007 and newer. Just add the file to |app| and click convert (make sure you are running the latest version of |app| as support for ``.docx`` files is very new)."
msgstr ""

#: ../../conversion.rst:621
# e5aaf3feb0364c179787eb9056314f24
msgid "There is a `demo .docx file <http://calibre-ebook.com/downloads/demos/demo.docx>`_ that demonstrates the capabilities of the |app| conversion engine. Just download it and convert it to EPUB or AZW3 to see what |app| can do."
msgstr ""

#: ../../conversion.rst:625
# a7156e6d3b2e4d4196b3dbae192f39a6
msgid "|app| will automatically generate a Table of Contents based on headings if you mark your headings with the ``Heading 1``, ``Heading 2``, etc. styles in Word. Open the output ebook in the calibre viewer and click the Table of Contents button to view the generated Table of Contents."
msgstr ""

#: ../../conversion.rst:631
# ac5629d84386437bb34080c65ec23192
msgid "Older .doc files"
msgstr ""

#: ../../conversion.rst:633
# 1488976f1dfc41939ff1770647e620e7
msgid "For older .doc files, you can save the document as HTML with Microsoft Word and then convert the resulting HTML file with |app|. When saving as HTML, be sure to use the \"Save as Web Page, Filtered\" option as this will produce clean HTML that will convert well. Note that Word produces really messy HTML, converting it can take a long time, so be patient. If you have a newer version of Word available, you can directly save it as docx as well."
msgstr ""

#: ../../conversion.rst:640
# 3ba0a5bd3af84ea8ad14d255fb83acae
msgid "Another alternative is to use the free OpenOffice. Open your .doc file in OpenOffice and save it in OpenOffice's format .odt. |app| can directly convert .odt files."
msgstr ""

#: ../../conversion.rst:645
# 314f80bd26ea415099f631ae681c5424
msgid "Convert TXT documents"
msgstr ""

#: ../../conversion.rst:647
# cf7b9e8803184b41a63b72c897e787d5
msgid "TXT documents have no well defined way to specify formatting like bold, italics, etc, or document structure like paragraphs, headings, sections and so on, but there are a variety of conventions commonly used.  By default |app| attempts automatic detection of the correct formatting and markup based on those conventions."
msgstr ""

#: ../../conversion.rst:652
# 794eb94ea3794e4c9f5bcf6efc435aca
msgid "TXT input supports a number of options to differentiate how paragraphs are detected."
msgstr ""

#: ../../conversion.rst:656
# 7fce4dff63d94ddba924eabce40f019c
msgid ":guilabel:`Paragraph Style: Auto`"
msgstr ""

#: ../../conversion.rst:655
# 1a219a490cc949539da9adb74e1e033d
msgid "Analyzes the text file and attempts to automatically determine how paragraphs are defined.  This option will generally work fine, if you achieve undesirable results try one of the manual options."
msgstr ""

#: ../../conversion.rst:664
# af6da2e677d548229967f7d5b0054903
msgid ":guilabel:`Paragraph Style: Block`"
msgstr ""

#: ../../conversion.rst:659
# 8de69bde400e4ea89ae98437d64f29a7
msgid "Assumes one or more blank lines are a paragraph boundary::"
msgstr ""

#: ../../conversion.rst:671
# 0600e6bfb87d4606aa3002e5ad0d9c53
msgid ":guilabel:`Paragraph Style: Single`"
msgstr ""

#: ../../conversion.rst:667
# 4abfe5a5f335456986c0c5a5450d70e3
msgid "Assumes that every line is a paragraph::"
msgstr ""

#: ../../conversion.rst:682
# 17c65f0d720648e2844b50b9476985ea
msgid ":guilabel:`Paragraph Style: Print`"
msgstr ""

#: ../../conversion.rst:674
# 3a69c13db10d41b485a2e12e6a307a22
msgid "Assumes that every paragraph starts with an indent (either a tab or 2+ spaces). Paragraphs end when the next line that starts with an indent is reached::"
msgstr ""

#: ../../conversion.rst:686
# 5d202648a4184bd480d52e8370dc38be
msgid ":guilabel:`Paragraph Style: Unformatted`"
msgstr ""

#: ../../conversion.rst:685
# fec926d23c98428d8168efdf78187908
msgid "Assumes that the document has no formatting, but does use hard line breaks.  Punctuation and median line length are used to attempt to re-create paragraphs."
msgstr ""

#: ../../conversion.rst:690
# 82da9e7295db4386ade813f9f1cd3544
msgid ":guilabel:`Formatting Style: Auto`"
msgstr ""

#: ../../conversion.rst:689
# 28f9c3d16a654fcdb92812e6cadccfb4
msgid "Attemtps to detect the type of formatting markup being used.  If no markup is used then heuristic formatting will be applied."
msgstr ""

#: ../../conversion.rst:694
# dead605910f9496484661114bc6c71a0
msgid ":guilabel:`Formatting Style: Heuristic`"
msgstr ""

#: ../../conversion.rst:693
# 29b871085da1419984f14dc3f4d78b1e
msgid "Analyzes the document for common chapter headings, scene breaks, and italicized words and applies the appropriate html markup during conversion."
msgstr ""

#: ../../conversion.rst:701
# 5fa4c2d165bd4e2c9bf08d0a747971d1
msgid ":guilabel:`Formatting Style: Markdown`"
msgstr ""

#: ../../conversion.rst:697
# 1171b0609d714b7484f7b26bf244c033
msgid "|app| also supports running TXT input though a transformation preprocessor known as markdown. Markdown allows for basic formatting to be added to TXT documents, such as bold, italics, section headings, tables, lists, a Table of Contents, etc. Marking chapter headings with a leading # and setting the chapter XPath detection expression to \"//h:h1\" is the easiest way to have a proper table of contents generated from a TXT document. You can learn more about the markdown syntax at `daringfireball <http://daringfireball.net/projects/markdown/syntax>`_."
msgstr ""

#: ../../conversion.rst:704
# e6e2ad8da4a246e5adc64af03250c968
msgid ":guilabel:`Formatting Style: None`"
msgstr ""

#: ../../conversion.rst:704
# 6646faf8d6724e5b8ffe4b8d74950149
msgid "Applies no special formatting to the text, the document is converted to html with no other changes."
msgstr ""

#: ../../conversion.rst:709
# 4603f9d7e2634c4c81543c74f37e6815
msgid "Convert PDF documents"
msgstr ""

#: ../../conversion.rst:711
# 81dffef9a5b04fb3900afa6a36f3fa2b
msgid "PDF documents are one of the worst formats to convert from. They are a fixed page size and text placement format. Meaning, it is very difficult to determine where one paragraph ends and another begins. |app| will try to unwrap paragraphs using a configurable, :guilabel:`Line Un-Wrapping Factor`. This is a scale used to determine the length at which a line should be unwrapped. Valid values are a decimal between 0 and 1. The default is 0.45, just under the median line length. Lower this value to include more text in the unwrapping. Increase to include less. You can adjust this value in the conversion settings under :guilabel:`PDF Input`."
msgstr ""

#: ../../conversion.rst:718
# c9608c8bd2c549a2bb5cadf7efb207a1
msgid "Also, they often have headers and footers as part of the document that will become included with the text. Use the Search and Replace panel to remove headers and footers to mitigate this issue. If the headers and footers are not removed from the text it can throw off the paragraph unwrapping. To learn how to use the header and footer removal options, read :ref:`regexptutorial`."
msgstr ""

#: ../../conversion.rst:723
# c05ea16f4342413bb7a4de6910eeb947
msgid "Some limitations of PDF input are:"
msgstr ""

#: ../../conversion.rst:725
# 6b2f7aaeab944ea2afd07c5d35f973d6
msgid "Complex, multi-column, and image based documents are not supported."
msgstr ""

#: ../../conversion.rst:726
# da6bb979bc594a848f835a319ac5d01e
msgid "Extraction of vector images and tables from within the document is also not supported."
msgstr ""

#: ../../conversion.rst:727
# 8cbad9c0e7a94f989a9878daf0a88e9a
msgid "Some PDFs use special glyphs to represent ll or ff or fi, etc. Conversion of these may or may not work depending on just how they are represented internally in the PDF."
msgstr ""

#: ../../conversion.rst:728
# 4cb750b28bc84ef4a1c92f625436bfd4
msgid "Links and Tables of Contents are not supported"
msgstr ""

#: ../../conversion.rst:729
# 33d0b88d32ce454ba6ed7d0e5231798b
msgid "PDFs that use embedded non-unicode fonts to represent non-English characters will result in garbled output for those characters"
msgstr ""

#: ../../conversion.rst:730
# bc25d8822ba04c7b859aed2a6fc03d21
msgid "Some PDFs are made up of photographs of the page with OCRed text behind them. In such cases |app| uses the OCRed text, which can be very different from what you see when you view the PDF file"
msgstr ""

#: ../../conversion.rst:731
# 1d5fdcf5530a49f791ff6d04e1839e34
msgid "PDFs that are used to display complex text, like right to left languages and math typesetting will not convert correctly"
msgstr ""

#: ../../conversion.rst:733
# 2a10340da62945ed872592436e232716
msgid "To re-iterate **PDF is a really, really bad** format to use as input. If you absolutely must use PDF, then be prepared for an output ranging anywhere from decent to unusable, depending on the input PDF."
msgstr ""

#: ../../conversion.rst:737
# aea9230f05a642a5ab8c401a070b2c18
msgid "Comic Book Collections"
msgstr ""

#: ../../conversion.rst:739
# 4181737c75fc4afeabf346533d721129
msgid "A comic book collection is a .cbc file. A .cbc file is a zip file that contains other CBZ/CBR files. In addition the .cbc file must contain a simple text file called comics.txt, encoded in UTF-8. The comics.txt file must contain a list of the comics files inside the .cbc file, in the form filename:title, as shown below::"
msgstr ""

#: ../../conversion.rst:747
# 5f1dbe5d718c42b9b2e892c478d261fa
msgid "The .cbc file will then contain::"
msgstr ""

#: ../../conversion.rst:754
# 2b748c12c51b46b99e103b2bec57b11e
msgid "|app| will automatically convert this .cbc file into a ebook with a Table of Contents pointing to each entry in comics.txt."
msgstr ""

#: ../../conversion.rst:758
# efc0139f4391416c873ebcea4800c365
msgid "EPUB advanced formatting demo"
msgstr ""

#: ../../conversion.rst:760
# 866384e6301946ed93e8d001b7c101da
msgid "Various advanced formatting for EPUB files is demonstrated in this `demo file <http://calibre-ebook.com/downloads/demos/demo.epub>`_. The file was created from hand coded HTML using calibre and is meant to be used as a template for your own EPUB creation efforts."
msgstr ""

#: ../../conversion.rst:763
# 3a3e566559274b569ca0ee48bce24a0f
msgid "The source HTML it was created from is available `demo.zip <http://calibre-ebook.com/downloads/demos/demo.zip>`_. The settings used to create the EPUB from the ZIP file are::"
msgstr ""

#: ../../conversion.rst:768
# 23819575d09f4870a1282e64dececc5c
msgid "Note that because this file explores the potential of EPUB, most of the advanced formatting is not going to work on readers less capable than |app|'s built-in EPUB viewer."
msgstr ""

#: ../../conversion.rst:772
# c8934919e0ac4c55b7ce298311e78fae
msgid "Convert ODT documents"
msgstr ""

#: ../../conversion.rst:774
# 919f0e5f1c8d4076873995505161003f
msgid "|app| can directly convert ODT (OpenDocument Text) files. You should use styles to format your document and minimize the use of direct formatting. When inserting images into your document you need to anchor them to the paragraph, images anchored to a page will all end up in the front of the conversion."
msgstr ""

#: ../../conversion.rst:777
# 36b64328ac4e482bba5532efdb047b23
msgid "To enable automatic detection of chapters, you need to mark them with the build-in styles called 'Heading 1', 'Heading 2', ..., 'Heading 6' ('Heading 1' equates to the HTML tag <h1>, 'Heading 2' to <h2> etc). When you convert in |app| you can enter which style you used into the 'Detect chapters at' box. Example:"
msgstr ""

#: ../../conversion.rst:779
# 1ee145eae8d6495183ddf407a36feeda
msgid "If you mark Chapters with style 'Heading 2', you have to set the 'Detect chapters at' box to ``//h:h2``"
msgstr ""

#: ../../conversion.rst:780
# f4992c848ed74079b11c8d8d1b79eb0e
msgid "For a nested TOC with Sections marked with 'Heading 2' and the Chapters marked with 'Heading 3' you need to enter ``//h:h2|//h:h3``. On the Convert - TOC page set the 'Level 1 TOC' box to ``//h:h2`` and the 'Level 2 TOC' box to ``//h:h3``."
msgstr ""

#: ../../conversion.rst:782
# 37265300caed4c0084fd4d85feb6ccb4
msgid "Well-known document properties (Title, Keywords, Description, Creator) are recognized and |app| will use the first image (not to small, and with good aspect-ratio) as the cover image."
msgstr ""

#: ../../conversion.rst:784
# 162c62e9ec8b499bbc02e692893cef4a
msgid "There is also an advanced property conversion mode, which is activated by setting the custom property ``opf.metadata`` ('Yes or No' type) to Yes in your ODT document (File->Properties->Custom Properties). If this property is detected by |app|, the following custom properties are recognized (``opf.authors`` overrides document creator)::"
msgstr ""

#: ../../conversion.rst:797
# 080bb0630642440dbab395b6b89870cb
msgid "In addition to this, you can specify the picture to use as the cover by naming it ``opf.cover`` (right click, Picture->Options->Name) in the ODT. If no picture with this name is found, the 'smart' method is used.  As the cover detection might result in double covers in certain output formats, the process will remove the paragraph (only if the only content is the cover!) from the document. But this works only with the named picture!"
msgstr ""

#: ../../conversion.rst:804
# e4ef7df46c674847bed8fea52e3c678b
msgid "To disable cover detection you can set the custom property ``opf.nocover`` ('Yes or No' type) to Yes in advanced mode."
msgstr ""

#: ../../conversion.rst:807
# c60422cf54aa4e439f9c01277250254d
msgid "Converting to PDF"
msgstr ""

#: ../../conversion.rst:809
# 06197fd384664fc194139be0128d4492
msgid "The first, most important, setting to decide on when converting to PDF is the page size. By default, |app| uses a page size defined by the current :guilabel:`Output profile`. So if your output profile is set to Kindle, |app| will create a PDF with page size suitable for viewing on the small kindle screen. However, if you view this PDF file on a computer screen, then it will appear to have too large fonts. To create \"normal\" sized PDFs, use the :guilabel:`Override page size` option under :guilabel:`PDF Output` in the conversion dialog."
msgstr ""

#: ../../conversion.rst:818
# 8320fe2ce8bc4f7e9666da1ebc46fa56
msgid "Headers and Footers"
msgstr ""

#: ../../conversion.rst:819
# 7e5250fb80dd48b59d3e34d38dfc6dd8
msgid "You can insert arbitrary headers and footers on each page of the PDF by specifying header and footer templates. Templates are just snippets of HTML code that get rendered in the header and footer locations. For example, to display page numbers centered at the bottom of every page, in green, use the following footer template::"
msgstr ""

#: ../../conversion.rst:827
# a6efd2af11384501976de7e7a7cffd9f
msgid "|app| will automatically replace _PAGENUM_ with the current page number. You can even put different content on even and odd pages, for example the following header template will show the title on odd pages and the author on even pages::"
msgstr ""

#: ../../conversion.rst:833
# 932d6c80165b4c579386af8bbe04cef3
msgid "|app| will automatically replace _TITLE_ and _AUTHOR_ with the title and author of the document being converted.  You can also display text at the left and right edges and change the font size, as demonstrated with this header template::"
msgstr ""

#: ../../conversion.rst:840
# 896f00eab8c745e2a8bcdaf9312ce480
msgid "This will display the title at the left and the author at the right, in a font size smaller than the main text."
msgstr ""

#: ../../conversion.rst:843
# b7967e7045114e7fa456c5d31414a6da
msgid "You can also use the current section in templates, as shown below::"
msgstr ""

#: ../../conversion.rst:847
# 193ed017ae454c39a38ff1195dab318f
msgid "_SECTION_ is replaced by whatever the name of the current section is. These names are taken from the metadata Table of Contents in the document (the PDF Outline). If the document has no table of contents then it will be replaced by empty text. If a single PDF page has multiple sections, the first section on the page will be used."
msgstr ""

#: ../../conversion.rst:853
# 29586e0bed2c4513b3e7d58bc285da3f
msgid "You can even use javascript inside the header and footer templates, for example, the following template will cause page numbers to start at 4 instead of 1::"
msgstr ""

#: ../../conversion.rst:859
# f02b9ae6e77645f9bf545fee78d564da
msgid "When adding headers and footers make sure you set the page top and bottom margins to large enough values, under the Page Setup section of the conversion dialog."
msgstr ""

#: ../../conversion.rst:864
# 1dbfb3b4d65f4d5987a1ba27ba8449aa
msgid "Printable Table of Contents"
msgstr ""

#: ../../conversion.rst:866
# ce55ce1be92147989e7924b485792c11
msgid "You can also insert a printable Table of Contents at the end of the PDF that lists the page numbers for every section. This is very useful if you intend to print out the PDF to paper. If you wish to use the PDF on an electronic device, then the PDF Outline provides this functionality and is generated by default."
msgstr ""

#: ../../conversion.rst:871
# 98ed7130a0a7419fa25354db97f86545
msgid "You can customize the look of the the generated Table of contents by using the Extra CSS conversion setting under the Look & Feel part of the conversion dialog. The default css used is listed below, simply copy it and make whatever changes you like."
msgstr ""

