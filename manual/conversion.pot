# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.48.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-11 23:35+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../conversion.rst:5
# 93f4e2ffe7394da788218a53c7898151
msgid "Ebook Conversion"
msgstr ""

#: ../../conversion.rst:7
# 3557f5e39fc542afb40824c45b3365c1
msgid "|app| has a conversion system that is designed to be very easy to use. Normally, you just add a book to |app|, click convert and |app| will try hard to generate output that is as close as possible to the input. However, |app| accepts a very large number of input formats, not all of which are as suitable as others for conversion to ebooks. In the case of such input formats, or if you just want greater control over the conversion system, |app| has a lot of options to fine tune the conversion process. Note however that |app|'s conversion system is not a substitute for a full blown ebook editor. To edit ebooks, I recommend first converting them to EPUB or AZW3 using |app| and then using the Edit Book feature to get them into perfect shape. You can then use the edited ebook as input for conversion into other formats in |app|."
msgstr ""

#: ../../conversion.rst:19
# d02d7f0aa1bd44eea23494d5cc1181a9
msgid "This document will refer mainly to the conversion settings as found in the conversion dialog, pictured below. All these settings are also available via command line interface to conversion, documented at :ref:`ebook-convert`. In |app|, you can obtain help on any individual setting by holding your mouse over it, a tooltip will appear describing the setting."
msgstr ""

#: ../../conversion.rst:0
#: ../../conversion.rst:0
# 5dd4d69e0da84b5db2b0baa1e5884bbc
# d3c70167c6074c518a266034ab4ce46a
msgid "Contents"
msgstr ""

#: ../../conversion.rst:37
# df41b84c4f4849beb58650cb92647079
msgid "Introduction"
msgstr ""

#: ../../conversion.rst:43
# dbf8acb4e22b4b6991d0c6f396c5d8ab
msgid "The first thing to understand about the conversion system is that it is designed as a pipeline. Schematically, it looks like this:"
msgstr ""

#: ../../conversion.rst:50
# e9fb36be92f5446f9ac69251c5c82061
msgid "The input format is first converted to XHTML by the appropriate *Input Plugin*. This HTML is then *transformed*. In the last step, the processed XHTML is converted to the specified output format by the appropriate *Output Plugin*. The results of the conversion can vary greatly, based on the input format. Some formats convert much better than others. A list of the best source formats for conversion is available :ref:`here <best-source-formats>`."
msgstr ""

#: ../../conversion.rst:57
# 5ec4ef22b2a04a639c1cbb8a9afb32c7
msgid "The transforms that act on the XHTML output are where all the work happens. There are various transforms, for example, to insert book metadata as a page at the start of the book, to detect chapter headings and automatically create a Table of Contents, to proportionally adjust font sizes, et cetera. It is important to remeber that all the transforms act on the XHTML output by the *Input Plugin*, not on the input file itself. So, for example, if you ask |app| to convert an RTF file to EPUB, it will first be converted to XHTML internally, the various transforms will be applied to the XHTML and then the *Output Plugin* will create the EPUB file, automatically generating all metadata, Table of Contents, et cetera."
msgstr ""

#: ../../conversion.rst:66
# c34a0912e10f4da5b733536c609971eb
msgid "You can see this process in action by using the debug option |dbgi|. Just specify the path to a directory for the debug output. During conversion, |app| will place the XHTML generated by the various stages of the conversion pipeline in different sub-directories. The four sub-directories are:"
msgstr ""

#: ../../conversion.rst:0
# 61a62235548f4ab38b94dd90d762aad7
msgid "Stages of the conversion pipeline"
msgstr ""

#: ../../conversion.rst:74
# 202d470c062145efaba093027c151ffd
msgid "Directory"
msgstr ""

#: ../../conversion.rst:74
# 5753d54787d54e9c988b689097e07c93
msgid "Description"
msgstr ""

#: ../../conversion.rst:76
# 8decd98d44b14b09a4b38f6a01ecd136
msgid "input"
msgstr ""

#: ../../conversion.rst:76
# d512ebfa2b5249c3a0d8d261a207ecb9
msgid "This contains the HTML output by the Input Plugin. Use this to debug the Input Plugin."
msgstr ""

#: ../../conversion.rst:77
# c25a6062ca5941fe9261f02af834b4fc
msgid "parsed"
msgstr ""

#: ../../conversion.rst:77
# b8860f874cc74463af5cfa50587f33aa
msgid "The result of pre-processing and converting to XHTML the output from the Input Plugin. Use to debug structure detection."
msgstr ""

#: ../../conversion.rst:78
# 5e7ba714bff34388afffea5f21562bb9
msgid "structure"
msgstr ""

#: ../../conversion.rst:78
# 80dcae30317b455097cc921040ad1aaa
msgid "Post structure detection, but before CSS flattening and font size conversion. Use to debug font size conversion and CSS transforms."
msgstr ""

#: ../../conversion.rst:79
# 38e635a060824ea0a018cc9787f9cc3c
msgid "processed"
msgstr ""

#: ../../conversion.rst:79
# 58d4ef0f426c490c9843a17164291b6a
msgid "Just before the ebook is passed to the output plugin. Use to debug the Output Plugin."
msgstr ""

#: ../../conversion.rst:82
# cdcb05e6214d4e2abb5dfab1dc0863fc
msgid "If you want to edit the input document a little before having |app| convert it, the best thing to do is edit the files in the :file:`input` sub-directory, then zip it up, and use the zip file as the input format for subsequent conversions. To do this use the :guilabel:`Edit meta information` dialog to add the zip file as a format for the book and then, in the top left corner of the conversion dialog, select ZIP as the input format."
msgstr ""

#: ../../conversion.rst:88
# 06d459d5fd864002b14a9000de1e2604
msgid "This document will deal mainly with the various transforms that operate on the intermediate XHTML and how to control them. At the end are some tips specific to each Input/Output format."
msgstr ""

#: ../../conversion.rst:92
# 3e46c2066b154920ad8c49ae965296fa
msgid "Look & Feel"
msgstr ""

#: ../../conversion.rst:98
# fe00f0cdf39f4be5b75d2256b17541be
msgid "This group of options controls various aspects of the look and feel of the converted ebook."
msgstr ""

#: ../../conversion.rst:103
# 81f1c2e8011242fcb495c542814781b4
msgid "Font size rescaling"
msgstr ""

#: ../../conversion.rst:105
# a2cb3a13bae84befa935464d9cca38d4
msgid "One of the nicest features of the e-reading experience is the ability to easily adjust font sizes to suit individual needs and lighting conditions. |app| has sophisticated algorithms to ensure that all the books it outputs have a consistent font sizes, no matter what font sizes are specified in the input document."
msgstr ""

#: ../../conversion.rst:110
# 6ea98ae81bc842bb94e7c41d7a46576b
msgid "The base font size of a document is the most common font size in that document, i.e., the size of the bulk of text in that document. When you specify a :guilabel:`Base font size`, |app| automatically rescales all font sizes in the document proportionately, so that the most common font size becomes the specified base font size and other font sizes are rescaled appropriately. By choosing a larger base font size, you can make the fonts in the document larger and vice versa. When you set the base font size, for best results, you should also set the font size key."
msgstr ""

#: ../../conversion.rst:118
# 120829f3aa3145f898b78f852b60d8ba
msgid "Normally, |app| will automatically choose a base font size appropriate to the Output Profile you have chosen (see :ref:`page-setup`). However, you can override this here in case the default is not suitable for you."
msgstr ""

#: ../../conversion.rst:122
# 3d8dc142ed1e4151b2eac674ae655dfd
msgid "The :guilabel:`Font size key` option lets you control how non-base font sizes are rescaled. The font rescaling algorithm works using a font size key, which is simply a comma-separated list of font sizes. The font size key tells |app| how many \"steps\" bigger or smaller a given font size should be compared to the base font size. The idea is that there should be a limited number of font sizes in a document. For example, one size for the body text, a couple of sizes for different levels of headings and a couple of sizes for super/sub scripts and footnotes. The font size key allows |app| to compartmentalize the font sizes in the input documents into separate \"bins\" corresponding to the different logical font sizes."
msgstr ""

#: ../../conversion.rst:131
# 9569b463034c414a80de696b6974cdb7
msgid "Let's illustrate with an example. Suppose the source document we are converting was produced by someone with excellent eyesight and has a base font size of 8pt. That means the bulk of the text in the document is sized at 8pts, while headings are somewhat larger (say 10 and 12pt) and footnotes somewhat smaller at 6pt. Now if we use the following settings::"
msgstr ""

#: ../../conversion.rst:140
# 11c5fb3dec3748e4bae2026137fdfc80
msgid "The output document will have a base font size of 12pt, headings of 14 and 16pt and footnotes of 8pt. Now suppose we want to make the largest heading size stand out more and make the footnotes a little larger as well. To achieve this, the font key should be changed to::"
msgstr ""

#: ../../conversion.rst:146
# f4f167583dde4ec09cd6dcf74a42131d
msgid "The largest headings will now become 18pt, while the footnotes will become 9pt. You can play with these settings to try and figure out what would be optimum for you by using the font rescaling wizard, which can be accessed by clicking the little button next to the :guilabel:`Font size key` setting."
msgstr ""

#: ../../conversion.rst:151
# 7fe6c8c44fbc4393960c9e7e760de0c4
msgid "All the font size rescaling in the conversion can also be disabled here, if you would like to preserve the font sizes in the input document."
msgstr ""

#: ../../conversion.rst:154
# f42b83d5069d4cf0bcffe05fabc34615
msgid "A related setting is :guilabel:`Line height`. Line height controls the vertical height of lines. By default, (a line height of 0), no manipulation of line heights is performed. If you specify a non-default value, line heights will be set in all locations that don't specify their own line heights. However, this is something of a blunt weapon and should be used sparingly. If you want to adjust the line heights for some section of the input, it's better to use the :ref:`extra-css`."
msgstr ""

#: ../../conversion.rst:162
# 266f9eb2b7e54069a078632c83c43bd0
msgid "Paragraph spacing"
msgstr ""

#: ../../conversion.rst:164
# ebc6c525c4114e539b0c281123a6443f
msgid "Normally, paragraphs in XHTML are rendered with a blank line between them and no leading text indent. |app| has a couple of options to control this. :guilabel:`Remove spacing between paragraphs` forcefully ensure that all paragraphs have no inter paragraph spacing. It also sets the text indent to 1.5em (can be changed) to mark the start of every paragraph. :guilabel:`Insert blank line` does the opposite, guaranteeing that there is exactly one blank line between each pair of paragraphs. Both these options are very comprehensive, removing spacing, or inserting it for *all* paragraphs (technically <p> and <div> tags). This is so that you can just set the option and be sure that it performs as advertised, irrespective of how messy the input file is. The one exception is when the input file uses hard line breaks to implement inter-paragraph spacing."
msgstr ""

#: ../../conversion.rst:175
# 507c7aadcaea4cbfa1c5602375d06d9d
msgid "If you want to remove the spacing between all paragraphs, except a select few, don't use these options. Instead add the following CSS code to :ref:`extra-css`::"
msgstr ""

#: ../../conversion.rst:181
# 260ac599e60f4c049ec6297161f2436a
msgid "Then, in your source document, mark the paragraphs that need spacing with `class=\"spacious\"`. If your input document is not in HTML, use the Debug option, described in the Introduction to get HTML (use the :file:`input` sub-directory)."
msgstr ""

#: ../../conversion.rst:189
# 0aa0cefe844b4e3c971389d4120f6d7d
msgid "Extra CSS"
msgstr ""

#: ../../conversion.rst:191
# c768f3eb9c0e4589b37ca33f1100b2f5
msgid "This option allows you to specify arbitrary CSS that will be applied to all HTML files in the input. This CSS is applied with very high priority and so should override most CSS present in the **input document** itself. You can use this setting to fine tune the presentation/layout of your document. For example, if you want all paragraphs of class `endnote` to be right aligned, just add::"
msgstr ""

#: ../../conversion.rst:199
# ff90fca16f14468ea1ec2c8951ab5e0a
msgid "or if you want to change the indentation of all paragraphs::"
msgstr ""

#: ../../conversion.rst:203
# 99fbba3bde32418a8027f8862a631298
msgid ":guilabel:`Extra CSS` is a very powerful option, but you do need an understanding of how CSS works to use it to its full potential. You can use the debug pipeline option described above to see what CSS is present in your input document."
msgstr ""

#: ../../conversion.rst:208
#: ../../conversion.rst:413
# 3f16b7ce8e5541a58627c8ecb23a2a58
# bf1697dfd217489fbff71c4485a83216
msgid "Miscellaneous"
msgstr ""

#: ../../conversion.rst:210
#: ../../conversion.rst:415
# 8a6dc7a21ae74dc6a67a6868cb32b53d
# 7d4596e835ba4221a63f40278e321dec
msgid "There are a few more options in this section."
msgstr ""

#: ../../conversion.rst:216
# 12038dbdf9ce4ba683b8b059eefe6531
msgid ":guilabel:`No text justification`"
msgstr ""

#: ../../conversion.rst:213
# 58b1bc2ce0ea4997a51d75c7171843e3
msgid "Normally, if the output format supports it, |app| will force the output ebook to have *justified* text (i.e., a smooth right margin). This option will turn off this behavior, in which case whatever justification is specified in the input document will be used instead."
msgstr ""

#: ../../conversion.rst:223
# 16129cadfea34561a5a66a849367cc46
msgid ":guilabel:`Linearize tables`"
msgstr ""

#: ../../conversion.rst:219
# 859c9fb453e14b368b49c29294b8c97c
msgid "Some badly designed documents use tables to control the layout of text on the page. When converted these documents often have text that runs off the page and other artifacts. This option will extract the content from the tables and present it in a linear fashion. Note that this option linearizes *all* tables, so only use it if you are sure the input document does not use tables for legitimate purposes, like presenting tabular information."
msgstr ""

#: ../../conversion.rst:232
# 4873e6ff5a64433d8bf855e70d586b1b
msgid ":guilabel:`Transliterate unicode characters`"
msgstr ""

#: ../../conversion.rst:226
# 9938e649a3fc42328334f55ee12e8c7a
msgid "Transliterate unicode characters to an ASCII representation. Use with care because this will replace unicode characters with ASCII. For instance it will replace \"Михаил Горбачёв\" with \"Mikhail Gorbachiov\". Also, note that in cases where there are multiple representations of a character (characters shared by Chinese and Japanese for instance) the representation used by the largest number of people will be used (Chinese in the previous example). This option is mainly useful if you are going to view the ebook on a device that does not have support for unicode."
msgstr ""

#: ../../conversion.rst:241
# b8fcff6757ee4427b5acf4a13ca6d40b
msgid ":guilabel:`Input character encoding`"
msgstr ""

#: ../../conversion.rst:235
# 90c1caab0d62444a8f7ae84652a70b75
msgid "Older documents sometimes don't specify their character encoding. When converted, this can result in non-English characters or special characters like smart quotes being corrupted. |app| tries to auto-detect the character encoding of the source document, but it does not' always succeed. You can force it to assume a particular character encoding by using this setting. `cp1252` is a common encoding for documents produced using windows software. You should also read :ref:`char-encoding-faq` for more on encoding issues."
msgstr ""

#: ../../conversion.rst:246
# fcd0f6a22a9a4397bc5744c479fe1113
msgid "Page Setup"
msgstr ""

#: ../../conversion.rst:248
# 95c361bfd7924cec956b9c192a3ce315
msgid "The Page Setup options are for controlling screen layout, like margins and screen sizes. There are options to setup page margins, which will be used by the Output Plugin, if the selected Output Format supports page margins. In addition, you should choose an Input profile and an Output profile. Both sets of profiles basically deal with how to interpret measurements in the input/output documents, screen sizes and default font rescaling keys."
msgstr ""

#: ../../conversion.rst:254
# d6711decd57440a58ff82886a13f6925
msgid "If you know that the file you are converting was intended to be used on a particular device/software platform, choose the corresponding input profile, otherwise just choose the default input profile. If you know the files you are producing are meant for a particular device type, choose the corresponding Output profile. In particular, for MOBI Output files, you should choose the Kindle, for LIT the Microsoft Reader and for EPUB the Sony Reader. In the case of EPUB, the Sony Reader profile will result in EPUB files that will work everywhere. However, it has some side effects, like inserting artificial section breaks to keep internal components below the size threshold, needed for SONY devices. In particular for the iPhone/Android phones, choose the SONY output profile. If you know your EPUB files will not be read on a SONY or similar device, use the default output profile. If you are producing MOBI files that are not intended for the Kindle, choose the Mobipocket books output profile."
msgstr ""

#: ../../conversion.rst:258
# f0b03a5930a3492a91afcbbb8896be3e
msgid "The Output profile also controls the screen size. This will cause, for example, images to be auto-resized to be fit to the screen in some output formats. So choose a profile of a device that has a screen size similar to your device."
msgstr ""

#: ../../conversion.rst:263
# 278899092adc49f29b3e8ca93b6bc003
msgid "Heuristic Processing"
msgstr ""

#: ../../conversion.rst:265
# fdbabc3ec32c499bbe70ad80decc00f0
msgid "Heuristic Processing provides a variety of functions which can be used to try and detect and correct common problems in poorly formatted input documents.  Use these functions if your input document suffers from poor formatting. Because these functions rely on common patterns, be aware that in some cases an option may lead to worse results, so use with care.  As an example, several of these options will remove all non-breaking-space entities, or may include false positive matches relating to the function."
msgstr ""

#: ../../conversion.rst:273
# c09a3358ee794cc487ba342fd1a321c7
msgid ":guilabel:`Enable heuristic processing`"
msgstr ""

#: ../../conversion.rst:272
# ed5e605d70f541aebf508f72504f0d75
msgid "This option activates |app|'s Heuristic Processing stage of the conversion pipeline. This must be enabled in order for various sub-functions to be applied"
msgstr ""

#: ../../conversion.rst:279
# ed3c5e60fed04595a864cf03a3ee62aa
msgid ":guilabel:`Unwrap lines`"
msgstr ""

#: ../../conversion.rst:276
# cbe4dc29e86b45a08f6d4fed07c86db7
msgid "Enabling this option will cause |app| to attempt to detect and correct hard line breaks that exist within a document using punctuation clues and line length. |app| will first attempt to detect whether hard line breaks exist, if they do not appear to exist |app| will not attempt to unwrap lines. The line-unwrap factor can be reduced if you want to 'force' |app| to unwrap lines."
msgstr ""

#: ../../conversion.rst:285
# 599344e393c945ce93b78974848f24f7
msgid ":guilabel:`Line-unwrap factor`"
msgstr ""

#: ../../conversion.rst:282
# 59cbc7b2ba78477c83a8bffdcffd4556
msgid "This option controls the algorithm |app| uses to remove hard line breaks. For example, if the value of this option is 0.4, that means calibre will remove hard line breaks from the end of lines whose lengths are less than the length of 40% of all lines in the document.  If your document only has a few line breaks which need correction, then this value should be reduced to somewhere between 0.1 and 0.2."
msgstr ""

#: ../../conversion.rst:300
# 620c74c886644d2fbbd39f2aebc485f8
msgid ":guilabel:`Detect and markup unformatted chapter headings and sub headings`"
msgstr ""

#: ../../conversion.rst:288
# 42f32ca84f56472db1f5ad7d2356fb77
msgid "If your document does not have chapter headings and titles formatted differently from the rest of the text, |app| can use this option to attempt detection them and surround them with heading tags. <h2> tags are used for chapter headings; <h3> tags are used for any titles that are detected."
msgstr ""

#: ../../conversion.rst:292
# d466efc8241f40f7a9206317b41d94b6
msgid "This function will not create a TOC, but in many cases it will cause |app|'s default chapter detection settings to correctly detect chapters and build a TOC.  Adjust the XPath under Structure Detection if a TOC is not automatically created.  If there are no other headings used in the document then setting \"//h:h2\" under Structure Detection would be the easiest way to create a TOC for the document."
msgstr ""

#: ../../conversion.rst:297
# f5c224715d114fa4a0bdefbcc89f2100
msgid "The inserted headings are not formatted, to apply formatting use the :guilabel:`Extra CSS` option under the Look and Feel conversion settings.  For example, to center heading tags, use the following::"
msgstr ""

#: ../../conversion.rst:305
# dc42882c784d4d868e9e31ca3dbf1044
msgid ":guilabel:`Renumber sequences of <h1> or <h2> tags`"
msgstr ""

#: ../../conversion.rst:303
# ff70aff4c35246359173efb385ff5d6e
msgid "Some publishers format chapter headings using multiple <h1> or <h2> tags sequentially. |app|'s default conversion settings will cause such titles to be split into two pieces.  This option will re-number the heading tags to prevent splitting."
msgstr ""

#: ../../conversion.rst:312
# e2f4e2798f6541849bc555a093903174
msgid ":guilabel:`Delete blank lines between paragraphs`"
msgstr ""

#: ../../conversion.rst:308
# 305a4b85b5f54ed28c11f442cc3fba27
msgid "This option will cause |app| to analyze blank lines included within the document.  If every paragraph is interleaved with a blank line, then |app| will remove all those blank paragraphs.  Sequences of multiple blank lines will be considered scene breaks and retained as a single paragraph.  This option differs from the 'Remove Paragraph Spacing' option under 'Look and Feel' in that it actually modifies the HTML content, while the other option modifies the document styles.  This option can also remove paragraphs which were inserted using |app|'s 'Insert blank line' option."
msgstr ""

#: ../../conversion.rst:317
# 585885f8baab4e419a51a679eb7a6c35
msgid ":guilabel:`Ensure scene breaks are consistently formatted`"
msgstr ""

#: ../../conversion.rst:315
# 7730d725d602453fa1e7d4d0930ec51e
msgid "With this option |app| will attempt to detect common scene-break markers and ensure that they are center aligned. 'Soft' scene break markers, i.e. scene breaks only defined by extra white space, are styled to ensure that they will not be displayed in conjunction with page breaks."
msgstr ""

#: ../../conversion.rst:333
# e5dd3f829c3f48c39d472e6c6ffec4a4
msgid ":guilabel:`Replace scene breaks`"
msgstr ""

#: ../../conversion.rst:320
# b8966c9317c04f79bddbf188a79a0aff
msgid "If this option is configured then |app| will replace scene break markers it finds with the replacement text specified by the user.  Please note that some ornamental characters may not be supported across all reading devices."
msgstr ""

#: ../../conversion.rst:323
# fcda2ff9ab2f40d1a0da324ece97eac2
msgid "In general you should avoid using html tags, |app| will discard any tags and use pre-defined markup.  <hr /> tags, i.e. horizontal rules, and <img> tags are exceptions.  Horizontal rules can optionally be specified with styles, if you choose to add your own style be sure to include the 'width' setting, otherwise the style information will be discarded.  Image tags can used, but |app| does not provide the ability to add the image during conversion, this must be done after the fact using the 'Edit Book' feature."
msgstr ""

#: ../../conversion.rst:330
# aa1da2cb6ba84eed96e6f9f741778f35
msgid "Example image tag (place the image within an 'Images' folder inside the epub after conversion):"
msgstr ""

#: ../../conversion.rst:330
# cec1b705cdbd49e6a33d7f92634d86ef
msgid "<img style=\"width:10%\" src=\"../Images/scenebreak.png\" />"
msgstr ""

#: ../../conversion.rst:333
# 762d186fe1c14c8db5e8921502b6d5e9
msgid "Example horizontal rule with styles:"
msgstr ""

#: ../../conversion.rst:333
# afea1328f11c426c9887593cb6c947bd
msgid "<hr style=\"width:20%;padding-top: 1px;border-top: 2px ridge black;border-bottom: 2px groove black;\"/>"
msgstr ""

#: ../../conversion.rst:341
# fdd94f11f4fa4bb082a411079f054563
msgid ":guilabel:`Remove unnecessary hyphens`"
msgstr ""

#: ../../conversion.rst:336
# 7a12ede6566345e99d758bafb6884bc4
msgid "|app| will analyze all hyphenated content in the document when this option is enabled.  The document itself is used as a dictionary for analysis.  This allows |app| to accurately remove hyphens for any words in the document in any language, along with made-up and obscure scientific words.  The primary drawback is words appearing only a single time in the document will not be changed.  Analysis happens in two passes, the first pass analyzes line endings.  Lines are only unwrapped if the word exists with or without a hyphen in the document.  The second pass analyzes all hyphenated words throughout the document, hyphens are removed if the word exists elsewhere in the document without a match."
msgstr ""

#: ../../conversion.rst:345
# 1f50faa0338643c094a7de551bce6b86
msgid ":guilabel:`Italicize common words and patterns`"
msgstr ""

#: ../../conversion.rst:344
# 1b769fe5f4a1419ca8e200de11dac48d
msgid "When enabled, |app| will look for common words and patterns that denote italics and italicize them.  Examples are common text conventions such as ~word~ or phrases that should generally be italicized, e.g. latin phrases like 'etc.' or 'et cetera'."
msgstr ""

#: ../../conversion.rst:349
# 73ee033fd0a44ec1ae4a1d849383c7ca
msgid ":guilabel:`Replace entity indents with CSS indents`"
msgstr ""

#: ../../conversion.rst:348
# 2e4cb157139c4819b055397999049587
msgid "Some documents use a convention of defining text indents using non-breaking space entities.  When this option is enabled |app| will attempt to detect this sort of formatting and convert them to a 3% text indent using css."
msgstr ""

#: ../../conversion.rst:354
# 252d9d19e9334a51be1b5350d018d174
msgid "Search & Replace"
msgstr ""

#: ../../conversion.rst:356
# 68ebe2df651048e786eac453f48698b8
msgid "These options are useful primarily for conversion of PDF documents or OCR conversions, though they can also be used to fix many document specific problems. As an example, some conversions can leaves behind page headers and footers in the text. These options use regular expressions to try and detect headers, footers, or other arbitrary text and remove or replace them. Remember that they operate on the intermediate XHTML produced by the conversion pipeline. There is a wizard to help you customize the regular expressions for your document.  Click the magic wand beside the expression box, and click the 'Test' button after composing your search expression.  Successful matches will be highlighted in Yellow."
msgstr ""

#: ../../conversion.rst:364
# 3f27955819564e279a9082c14e5b19e7
msgid "The search works by using a python regular expression. All matched text is simply removed from the document or replaced using the replacement pattern. The replacement pattern is optional, if left blank then text matching the search pattern will be deleted from the document.  You can learn more about regular expressions and their syntax at :ref:`regexptutorial`."
msgstr ""

#: ../../conversion.rst:372
# 1eadc1911f964b189ac77a31d440dfd4
msgid "Structure Detection"
msgstr ""

#: ../../conversion.rst:374
# 57440e3813304497b03e86ed38ab5ed0
msgid "Structure detection involves |app| trying its best to detect structural elements in the input document, when they are not properly specified. For example, chapters, page breaks, headers, footers, etc. As you can imagine, this process varies widely from book to book. Fortunately, |app| has very powerful options to control this. With power comes complexity, but if once you take the time to learn the complexity, you will find it well worth the effort."
msgstr ""

#: ../../conversion.rst:377
# a4a417c0b5ff4ee8a9e54a1c1b045bae
msgid "Chapters and page breaks"
msgstr ""

#: ../../conversion.rst:379
# d25964aad3f445e9bf00d1254bb5ed04
msgid "|app| has two sets of options for :guilabel:`chapter detection` and :guilabel:`inserting page breaks`. This can sometimes be slightly confusing, as by default, |app| will insert page breaks before detected chapters as well as the locations detected by the page breaks option. The reason for this is that there are often location where page breaks should be inserted that are not chapter boundaries. Also, detected chapters can be optionally inserted into the auto generated Table of Contents."
msgstr ""

#: ../../conversion.rst:384
# 303e1abe29834204b4d4d9a97168f2d9
msgid "|app| uses *XPath*, a powerful language to allow the user to specify chapter boundaries/page breaks. XPath can seem a little daunting to use at first, fortunately, there is a :ref:`XPath tutorial <xpath-tutorial>` in the User Manual. Remember that Structure Detection operates on the intermediate XHTML produced by the conversion pipeline. Use the debug option described in the :ref:`conversion-introduction` to figure out the appropriate settings for your book. There is also a button for a XPath wizard to help with the generation of simple XPath expressions."
msgstr ""

#: ../../conversion.rst:390
# 84f1731627f348bbacc862e1df488d5e
msgid "By default, |app| uses the following expression for chapter detection::"
msgstr ""

#: ../../conversion.rst:394
# d6a0cbfb60db474198985649301e238e
msgid "This expression is rather complex, because it tries to handle a number of common cases simulataneously. What it means is that |app| will assume chapters start at either `<h1>` or `<h2>` tags that have any of the words `(chapter, book, section or part)` in them or that have the `class=\"chapter\"` attribute."
msgstr ""

#: ../../conversion.rst:398
# 9acb26080b8645a2a9909cfd88359f45
msgid "A related option is :guilabel:`Chapter mark`, which allows you to control what |app| does when it detects a chapter. By default, it will insert a page break before the chapter. You can have it insert a ruled line instead of, or in addition to the page break. You can also have it do nothing."
msgstr ""

#: ../../conversion.rst:402
# 621898cdbce74573bd07744f028e9780
msgid "The default setting for detecting page breaks is::"
msgstr ""

#: ../../conversion.rst:406
# a1506f6a2cb84d53b2e3d84bd341c7de
msgid "which means that |app| will insert page breaks before every `<h1>` and `<h2>` tag by default."
msgstr ""

#: ../../conversion.rst:410
# b21a98003bd04aac8a713877a0f93252
msgid "The default expressions may change depending on the input format you are converting."
msgstr ""

#: ../../conversion.rst:421
# 76db5c1f76384aeaa25aa674b02c3269
msgid ":guilabel:`Insert metadata as page at start of book`"
msgstr ""

#: ../../conversion.rst:418
# 7e1a12a142a240f6989028269df11a4f
msgid "One of the great things about |app| is that it allows you to maintain very complete metadata about all of your books, for example, a rating, tags, comments, etc. This option will create a single page with all this metadata and insert it into the converted ebook, typically just after the cover. Think of it as a way to create your own customised book jacket."
msgstr ""

#: ../../conversion.rst:428
# 53d1161038fb4cd6979f25bd485aa669
msgid ":guilabel:`Remove first image`"
msgstr ""

#: ../../conversion.rst:424
# 34732058cb1045a390e58ae7badbe4a2
msgid "Sometimes, the source document you are converting includes the cover as part of the book, instead of as a separate cover. If you also specify a cover in |app|, then the converted book will have two covers. This option will simply remove the first image from the source document, thereby ensuring that the converted book has only one cover, the one specified in |app|."
msgstr ""

#: ../../conversion.rst:431
# 9afa7b067fd842c78d1aad562a939699
msgid "Table of Contents"
msgstr ""

#: ../../conversion.rst:433
# be9186005d5844458c8c574bfb44dd7a
msgid "When the input document has a Table of Contents in its metadata, |app| will just use that. However, a number of older formats either do not support a metadata based Table of Contents, or individual documents do not have one. In these cases, the options in this section can help you automatically generate a Table of Contents in the converted ebook, based on the actual content in the input document."
msgstr ""

#: ../../conversion.rst:438
# 75fe0c389a6c4b40986550ffa840e379
msgid "Using these options can be a little challenging to get exactly right. If you prefer creating/editing the Table of Contents by hand, convert to the EPUB or AZW3 formats and select the checkbox at the bottom of the Table of Contents section of the conversion dialog that says :guilabel:`Manually fine-tune the Table of Contents after conversion`. This will launch the ToC Editor tool after the conversion. It allows you to create entries in the Table of Contents by simply clicking the place in the book where you want the entry to point. You can also use the ToC Editor by itself, without doing a conversion. Go to :guilabel:`Preferences->Toolbars` and add the ToC Editor to the main toolbar. Then just select the book you want to edit and click the ToC Editor button."
msgstr ""

#: ../../conversion.rst:450
# df4574ecf0064fb181c00f0abc5dbf1a
msgid "The first option is :guilabel:`Force use of auto-generated Table of Contents`. By checking this option you can have |app| override any Table of Contents found in the metadata of the input document with the auto generated one."
msgstr ""

#: ../../conversion.rst:454
# 02365a2c99534956b074bb58d83941a7
msgid "The default way that the creation of the auto generated Table of Contents works is that, |app| will first try to add any detected chapters to the generated table of contents. You can learn how to customize the detection of chapters in the :ref:`structure-detection` section above. If you do not want to include detected chapters in the generated table of contents, check the :guilabel:`Do not add detected chapters` option."
msgstr ""

#: ../../conversion.rst:459
# 3b808e47310245d5b3291018693368cc
msgid "If less than the :guilabel:`Chapter threshold` number of chapters were detected, |app| will then add any hyperlinks it finds in the input document to the Table of Contents. This often works well many input documents include a hyperlinked Table of Contents right at the start. The :guilabel:`Number of links` option can be used to control this behavior. If set to zero, no links are added. If set to a number greater than zero, at most that number of links is added."
msgstr ""

#: ../../conversion.rst:465
# 4bd474073ddf41cbbd3e10aff6cedc96
msgid "|app| will automatically filter duplicates from the generated Table of Contents. However, if there are some additional undesirable entries, you can filter them using the :guilabel:`TOC Filter` option. This is a regular expression that will match the title of entries in the generated table of contents. Whenever a match is found, it will be removed. For example, to remove all entries titles \"Next\" or \"Previous\" use::"
msgstr ""

#: ../../conversion.rst:472
# 1a56ce4ab27d4ec5a530773b625a308c
msgid "The :guilabel:`Level 1,2,3 TOC` options allow you to create a sophisticated multi-level Table of Contents. They are XPath expressions that match tags in the intermediate XHTML produced by the conversion pipeline. See the :ref:`conversion-introduction` for how to get access to this XHTML. Also read the :ref:`xpath-tutorial`, to learn how to construct XPath expressions. Next to each option is a button that launches a wizard to help with the creation of basic XPath expressions. The following simple example illustrates how to use these options."
msgstr ""

#: ../../conversion.rst:478
# 0c6226de750b426c92614ee6747119fa
msgid "Suppose you have an input document that results in XHTML that look like this:"
msgstr ""

#: ../../conversion.rst:500
# afe79e908aec4c02b13ab3a71a5654d9
msgid "Then, we set the options as::"
msgstr ""

#: ../../conversion.rst:505
# 95b24b0adfff42e2973d8642dc0e6964
msgid "This will result in an automatically generated two level Table of Contents that looks like::"
msgstr ""

#: ../../conversion.rst:516
# 898606c48e78471984d5e1bdb06251b5
msgid "Not all output formats support a multi level Table of Contents. You should first try with EPUB Output. If that works, then try your format of choice."
msgstr ""

#: ../../conversion.rst:520
# 440620524ea0450490827c10df93b154
msgid "Using images as chapter titles when converting HTML input documents"
msgstr ""

#: ../../conversion.rst:522
# 067c698ba6dc45e0a9b8c1dd2b3a3aad
msgid "Suppose you want to use an image as your chapter title, but still want |app| to be able to automatically generate a Table of Contents for you from the chapter titles. Use the following HTML markup to achieve this"
msgstr ""

#: ../../conversion.rst:536
# 59e99b29d1844d128870b980f0c20899
msgid "Set the :guilabel:`Level 1 TOC` setting to ``//h:h2``. Then, for chapter two, |app| will take the title from the value of the ``title`` attribute on the ``<h2>`` tag, since the tag has no text."
msgstr ""

#: ../../conversion.rst:539
# 6f26af147d224048b48f23ac72b26e7e
msgid "Using tag attributes to supply the text for entries in the Table of Contents"
msgstr ""

#: ../../conversion.rst:541
# 92714255d4fb4137b3690209422b8f69
msgid "If you have particularly long chapter titles and want shortened versions in the Table of Contents, you can use the title attribute to achieve this, for example:"
msgstr ""

#: ../../conversion.rst:556
# 529983753e884ba296f759486b0893d3
msgid "Set the :guilabel:`Level 1 TOC` setting to ``//h:h2/@title``. Then |app| will take the title from the value of the ``title`` attribute on the ``<h2>`` tags, instead of using the text inside the tag. Note the trailing ``/@title`` on the XPath expression, you can use this form to tell |app| to get the text from any attribute you like."
msgstr ""

#: ../../conversion.rst:563
# f9b4c8e283c0484abb849c3a283553d1
msgid "How options are set/saved for Conversion"
msgstr ""

#: ../../conversion.rst:565
# 5f17673bb9774ab8830d0fb7883351a8
msgid "There are two places where conversion options can be set in |app|. The first is in Preferences->Conversion. These settings are the defaults for the conversion options. Whenever you try to convert a new book, the settings set here will be used by default."
msgstr ""

#: ../../conversion.rst:570
# dad69c53de994532bb3d5bf9c28124f3
msgid "You can also change settings in the conversion dialog for each book conversion. When you convert a book, |app| remembers the settings you used for that book, so that if you convert it again, the saved settings for the individual book will take precedence over the defaults set in Preferences. You can restore the individual settings to defaults by using the Restore to defaults button in the individual book conversion dialog. You can remove the saved settings for a group of books by selecting all the books and then clicking the edit metadata button to bring up the bulk metadata edit dialog, near the bottom of the dialog is an option to remove stored conversion settings."
msgstr ""

#: ../../conversion.rst:580
# cb51240558e642e0a90c5c6ee2ae2087
msgid "When you Bulk Convert a set of books, settings are taken in the following order (last one wins):"
msgstr ""

#: ../../conversion.rst:582
# 6f701243bfa046a1850246a108b14b93
msgid "From the defaults set in Preferences->Conversion"
msgstr ""

#: ../../conversion.rst:584
# 837deea747cf45728f6e6339ccaab0d4
msgid "From the saved conversion settings for each book being converted (if any). This can be turned off by the option in the top left corner of the Bulk Conversion dialog."
msgstr ""

#: ../../conversion.rst:588
# f7d8ae4136264ec7b2ff8a7c455ab0e0
msgid "From the settings set in the Bulk conversion dialog"
msgstr ""

#: ../../conversion.rst:590
# e3c6d7e07d084be7aa33f9a4b6cd7ef3
msgid "Note that the final settings for each book in a Bulk Conversion will be saved and re-used if the book is converted again. Since the highest priority in Bulk Conversion is given to the settings in the Bulk Conversion dialog, these will override any book specific settings. So you should only bulk convert books together that need similar settings. The exceptions are metadata and input format specific settings. Since the Bulk Conversion dialog does not have settings for these two categories, they will be taken from book specific settings (if any) or the defaults."
msgstr ""

#: ../../conversion.rst:601
# 59bf2e141dfc45ed9a0aeb48e5201343
msgid "You can see the actual settings used during any conversion by clicking the rotating icon in the lower right corner and then double clicking the individual conversion job. This will bring up a conversion log that will contain the actual settings used, near the top."
msgstr ""

#: ../../conversion.rst:606
# 2d6334833e574a81a40cdb70ea9b1499
msgid "Format specific tips"
msgstr ""

#: ../../conversion.rst:608
# a4eb93f8d95e405085c297503e75f95d
msgid "Here you will find tips specific to the conversion of particular formats. Options specific to particular format, whether input or output are available in the conversion dialog under their own section, for example `TXT Input` or `EPUB Output`."
msgstr ""

#: ../../conversion.rst:613
# 72d4589f3bc34f5b899254ab54c84f1b
msgid "Convert Microsoft Word documents"
msgstr ""

#: ../../conversion.rst:615
# 7fcf656f205645859a3e220cb839d75c
msgid "|app| can automatically convert ``.docx`` files created by Microsoft Word 2007 and newer. Just add the file to |app| and click convert (make sure you are running the latest version of |app| as support for ``.docx`` files is very new)."
msgstr ""

#: ../../conversion.rst:620
# e3ee75360ca9466d984603a0b673ba10
msgid "There is a `demo .docx file <http://calibre-ebook.com/downloads/demos/demo.docx>`_ that demonstrates the capabilities of the |app| conversion engine. Just download it and convert it to EPUB or AZW3 to see what |app| can do."
msgstr ""

#: ../../conversion.rst:624
# 975e2aea1cfd4bb9a31bcb3dbe6e5ab8
msgid "|app| will automatically generate a Table of Contents based on headings if you mark your headings with the ``Heading 1``, ``Heading 2``, etc. styles in Word. Open the output ebook in the calibre viewer and click the Table of Contents button to view the generated Table of Contents."
msgstr ""

#: ../../conversion.rst:630
# e864d96730e24ccf99f368d63c28e09d
msgid "Older .doc files"
msgstr ""

#: ../../conversion.rst:632
# 9695fba541c44f3fb8bb51901d57b27b
msgid "For older .doc files, you can save the document as HTML with Microsoft Word and then convert the resulting HTML file with |app|. When saving as HTML, be sure to use the \"Save as Web Page, Filtered\" option as this will produce clean HTML that will convert well. Note that Word produces really messy HTML, converting it can take a long time, so be patient. If you have a newer version of Word available, you can directly save it as docx as well."
msgstr ""

#: ../../conversion.rst:639
# fbbcf9a47ea74c4fa386b4ccc490f253
msgid "Another alternative is to use the free OpenOffice. Open your .doc file in OpenOffice and save it in OpenOffice's format .odt. |app| can directly convert .odt files."
msgstr ""

#: ../../conversion.rst:644
# bab4bb144c894a69997c17c05f306b2c
msgid "Convert TXT documents"
msgstr ""

#: ../../conversion.rst:646
# 3320ed2cbd9c417db4bfe86c99bcff93
msgid "TXT documents have no well defined way to specify formatting like bold, italics, etc, or document structure like paragraphs, headings, sections and so on, but there are a variety of conventions commonly used.  By default |app| attempts automatic detection of the correct formatting and markup based on those conventions."
msgstr ""

#: ../../conversion.rst:651
# 58b7fe29c4ef4687b7b7db0a32027b5f
msgid "TXT input supports a number of options to differentiate how paragraphs are detected."
msgstr ""

#: ../../conversion.rst:655
# 4e31ea2b857d45e292746f4679605750
msgid ":guilabel:`Paragraph Style: Auto`"
msgstr ""

#: ../../conversion.rst:654
# e4690054ddc641b2be2df17fc19c9684
msgid "Analyzes the text file and attempts to automatically determine how paragraphs are defined.  This option will generally work fine, if you achieve undesirable results try one of the manual options."
msgstr ""

#: ../../conversion.rst:663
# 1b7a6ea0dd55470495c92939ed7a34eb
msgid ":guilabel:`Paragraph Style: Block`"
msgstr ""

#: ../../conversion.rst:658
# 180762949493497294e99a15e16216d7
msgid "Assumes one or more blank lines are a paragraph boundary::"
msgstr ""

#: ../../conversion.rst:670
# a65a397d93b14a90b00243db284e22e9
msgid ":guilabel:`Paragraph Style: Single`"
msgstr ""

#: ../../conversion.rst:666
# bfd4e4b9f92749039fa8f051ac6932f7
msgid "Assumes that every line is a paragraph::"
msgstr ""

#: ../../conversion.rst:681
# 2823119958254e38a80df1ab21ed31f3
msgid ":guilabel:`Paragraph Style: Print`"
msgstr ""

#: ../../conversion.rst:673
# 7bb7cbbd7dec400196cb905e82897f0c
msgid "Assumes that every paragraph starts with an indent (either a tab or 2+ spaces). Paragraphs end when the next line that starts with an indent is reached::"
msgstr ""

#: ../../conversion.rst:685
# 330e2fe56ecc46599ef52be6ff0d34de
msgid ":guilabel:`Paragraph Style: Unformatted`"
msgstr ""

#: ../../conversion.rst:684
# e05c136843a745ef8a4df883d7b21df0
msgid "Assumes that the document has no formatting, but does use hard line breaks.  Punctuation and median line length are used to attempt to re-create paragraphs."
msgstr ""

#: ../../conversion.rst:689
# 437c17b5d8564fb09d266d4de82e3ce8
msgid ":guilabel:`Formatting Style: Auto`"
msgstr ""

#: ../../conversion.rst:688
# 1cbebd19636b4b8aa86ff6fe0d1f3b2f
msgid "Attemtps to detect the type of formatting markup being used.  If no markup is used then heuristic formatting will be applied."
msgstr ""

#: ../../conversion.rst:693
# 6b18c16fae2548a58005fa7bc552e34b
msgid ":guilabel:`Formatting Style: Heuristic`"
msgstr ""

#: ../../conversion.rst:692
# f5814deda7a944bab65265d0ab218d16
msgid "Analyzes the document for common chapter headings, scene breaks, and italicized words and applies the appropriate html markup during conversion."
msgstr ""

#: ../../conversion.rst:700
# eef5a8b2bbc64781adbeba6fe48d916c
msgid ":guilabel:`Formatting Style: Markdown`"
msgstr ""

#: ../../conversion.rst:696
# c2580aea81dd4840991e438f40870402
msgid "|app| also supports running TXT input though a transformation preprocessor known as markdown. Markdown allows for basic formatting to be added to TXT documents, such as bold, italics, section headings, tables, lists, a Table of Contents, etc. Marking chapter headings with a leading # and setting the chapter XPath detection expression to \"//h:h1\" is the easiest way to have a proper table of contents generated from a TXT document. You can learn more about the markdown syntax at `daringfireball <http://daringfireball.net/projects/markdown/syntax>`_."
msgstr ""

#: ../../conversion.rst:703
# 14ba75e6752a4ee7a50125b12910a0e0
msgid ":guilabel:`Formatting Style: None`"
msgstr ""

#: ../../conversion.rst:703
# 33d2e1cca2c34f979b00f0dd2ceb1c9e
msgid "Applies no special formatting to the text, the document is converted to html with no other changes."
msgstr ""

#: ../../conversion.rst:708
# 0e7c2a42d7374a35b0729c2abfeda807
msgid "Convert PDF documents"
msgstr ""

#: ../../conversion.rst:710
# 4acfdc4878bf4ef6b1802b830ee88964
msgid "PDF documents are one of the worst formats to convert from. They are a fixed page size and text placement format. Meaning, it is very difficult to determine where one paragraph ends and another begins. |app| will try to unwrap paragraphs using a configurable, :guilabel:`Line Un-Wrapping Factor`. This is a scale used to determine the length at which a line should be unwrapped. Valid values are a decimal between 0 and 1. The default is 0.45, just under the median line length. Lower this value to include more text in the unwrapping. Increase to include less. You can adjust this value in the conversion settings under :guilabel:`PDF Input`."
msgstr ""

#: ../../conversion.rst:717
# 140c8ad65d3a4856bbd722ea28c1c150
msgid "Also, they often have headers and footers as part of the document that will become included with the text. Use the Search and Replace panel to remove headers and footers to mitigate this issue. If the headers and footers are not removed from the text it can throw off the paragraph unwrapping. To learn how to use the header and footer removal options, read :ref:`regexptutorial`."
msgstr ""

#: ../../conversion.rst:722
# 6d3c3ec821644b808822f08a5d1d68a5
msgid "Some limitations of PDF input are:"
msgstr ""

#: ../../conversion.rst:724
# 83c1b02a0c024b9c944d01a1e3260095
msgid "Complex, multi-column, and image based documents are not supported."
msgstr ""

#: ../../conversion.rst:725
# 3d7174c3965a4503a98b87b1a7195d18
msgid "Extraction of vector images and tables from within the document is also not supported."
msgstr ""

#: ../../conversion.rst:726
# 95f019ccdd9341d988eb3ae1fdd4ddeb
msgid "Some PDFs use special glyphs to represent ll or ff or fi, etc. Conversion of these may or may not work depending on just how they are represented internally in the PDF."
msgstr ""

#: ../../conversion.rst:727
# 5d93a599d7514889885252b798692670
msgid "Links and Tables of Contents are not supported"
msgstr ""

#: ../../conversion.rst:728
# c9747eac149b4a7d813259256e62e7f9
msgid "PDFs that use embedded non-unicode fonts to represent non-English characters will result in garbled output for those characters"
msgstr ""

#: ../../conversion.rst:729
# a7d356025b0440b5ac61cbfd0b9fc561
msgid "Some PDFs are made up of photographs of the page with OCRed text behind them. In such cases |app| uses the OCRed text, which can be very different from what you see when you view the PDF file"
msgstr ""

#: ../../conversion.rst:730
# b3d71fcef9f64dd699fbd6217ba59f48
msgid "PDFs that are used to display complex text, like right to left languages and math typesetting will not convert correctly"
msgstr ""

#: ../../conversion.rst:732
# 64bdcb85f27b438f85b0984032ab3719
msgid "To re-iterate **PDF is a really, really bad** format to use as input. If you absolutely must use PDF, then be prepared for an output ranging anywhere from decent to unusable, depending on the input PDF."
msgstr ""

#: ../../conversion.rst:736
# 735fa2217156454d879fbede59777bfd
msgid "Comic Book Collections"
msgstr ""

#: ../../conversion.rst:738
# ecc69658672141ada26d1cbb44317389
msgid "A comic book collection is a .cbc file. A .cbc file is a zip file that contains other CBZ/CBR files. In addition the .cbc file must contain a simple text file called comics.txt, encoded in UTF-8. The comics.txt file must contain a list of the comics files inside the .cbc file, in the form filename:title, as shown below::"
msgstr ""

#: ../../conversion.rst:746
# 5c2e16a1b0a04a45bd40af8545b9e850
msgid "The .cbc file will then contain::"
msgstr ""

#: ../../conversion.rst:753
# 364d272268bd4477ac195be8344166c4
msgid "|app| will automatically convert this .cbc file into a ebook with a Table of Contents pointing to each entry in comics.txt."
msgstr ""

#: ../../conversion.rst:757
# bd7a0f347efd4c2caf74de08e811e900
msgid "EPUB advanced formatting demo"
msgstr ""

#: ../../conversion.rst:759
# 6f50eec2fc5849df801383c734208804
msgid "Various advanced formatting for EPUB files is demonstrated in this `demo file <http://calibre-ebook.com/downloads/demos/demo.epub>`_. The file was created from hand coded HTML using calibre and is meant to be used as a template for your own EPUB creation efforts."
msgstr ""

#: ../../conversion.rst:762
# f81cdd65351743269b879ce733e4c578
msgid "The source HTML it was created from is available `demo.zip <http://calibre-ebook.com/downloads/demos/demo.zip>`_. The settings used to create the EPUB from the ZIP file are::"
msgstr ""

#: ../../conversion.rst:767
# 867cbcd41f274d70a5248f6b68e489c4
msgid "Note that because this file explores the potential of EPUB, most of the advanced formatting is not going to work on readers less capable than |app|'s built-in EPUB viewer."
msgstr ""

#: ../../conversion.rst:771
# c32e7e7023244a35a082638a1f0ed280
msgid "Convert ODT documents"
msgstr ""

#: ../../conversion.rst:773
# 84324f2865f44641a4247e14ea0da598
msgid "|app| can directly convert ODT (OpenDocument Text) files. You should use styles to format your document and minimize the use of direct formatting. When inserting images into your document you need to anchor them to the paragraph, images anchored to a page will all end up in the front of the conversion."
msgstr ""

#: ../../conversion.rst:776
# 34933353411f490cbfb0955a9c8396a8
msgid "To enable automatic detection of chapters, you need to mark them with the build-in styles called 'Heading 1', 'Heading 2', ..., 'Heading 6' ('Heading 1' equates to the HTML tag <h1>, 'Heading 2' to <h2> etc). When you convert in |app| you can enter which style you used into the 'Detect chapters at' box. Example:"
msgstr ""

#: ../../conversion.rst:778
# 3b087f08af484a908f0d25a232bdb53c
msgid "If you mark Chapters with style 'Heading 2', you have to set the 'Detect chapters at' box to ``//h:h2``"
msgstr ""

#: ../../conversion.rst:779
# d39781531a9c4d17b2559bac6b8139d8
msgid "For a nested TOC with Sections marked with 'Heading 2' and the Chapters marked with 'Heading 3' you need to enter ``//h:h2|//h:h3``. On the Convert - TOC page set the 'Level 1 TOC' box to ``//h:h2`` and the 'Level 2 TOC' box to ``//h:h3``."
msgstr ""

#: ../../conversion.rst:781
# ad4206d2c0234f1aa90b33bd6ec506f0
msgid "Well-known document properties (Title, Keywords, Description, Creator) are recognized and |app| will use the first image (not to small, and with good aspect-ratio) as the cover image."
msgstr ""

#: ../../conversion.rst:783
# 9a635a69e8f54602835f9e8c4c167441
msgid "There is also an advanced property conversion mode, which is activated by setting the custom property ``opf.metadata`` ('Yes or No' type) to Yes in your ODT document (File->Properties->Custom Properties). If this property is detected by |app|, the following custom properties are recognized (``opf.authors`` overrides document creator)::"
msgstr ""

#: ../../conversion.rst:796
# cb221bfe95264a45bf3784ab556f9918
msgid "In addition to this, you can specify the picture to use as the cover by naming it ``opf.cover`` (right click, Picture->Options->Name) in the ODT. If no picture with this name is found, the 'smart' method is used.  As the cover detection might result in double covers in certain output formats, the process will remove the paragraph (only if the only content is the cover!) from the document. But this works only with the named picture!"
msgstr ""

#: ../../conversion.rst:803
# 4c7e3b2525664b7f830e676b2ac2a052
msgid "To disable cover detection you can set the custom property ``opf.nocover`` ('Yes or No' type) to Yes in advanced mode."
msgstr ""

#: ../../conversion.rst:806
# 9d3b8bc70feb4fd9808fdb9f66a8ab1c
msgid "Converting to PDF"
msgstr ""

#: ../../conversion.rst:808
# cbdfaef2c5424ef9af706605604178d0
msgid "The first, most important, setting to decide on when converting to PDF is the page size. By default, |app| uses a page size defined by the current :guilabel:`Output profile`. So if your output profile is set to Kindle, |app| will create a PDF with page size suitable for viewing on the small kindle screen. However, if you view this PDF file on a computer screen, then it will appear to have too large fonts. To create \"normal\" sized PDFs, use the :guilabel:`Override page size` option under :guilabel:`PDF Output` in the conversion dialog."
msgstr ""

#: ../../conversion.rst:817
# e3881e6e56124687b9e982353601bece
msgid "Headers and Footers"
msgstr ""

#: ../../conversion.rst:818
# c4a5802b46bb40f49c81e0b903045b2e
msgid "You can insert arbitrary headers and footers on each page of the PDF by specifying header and footer templates. Templates are just snippets of HTML code that get rendered in the header and footer locations. For example, to display page numbers centered at the bottom of every page, in green, use the following footer template::"
msgstr ""

#: ../../conversion.rst:826
# a583a479664d49908f21a9ed04360722
msgid "|app| will automatically replace _PAGENUM_ with the current page number. You can even put different content on even and odd pages, for example the following header template will show the title on odd pages and the author on even pages::"
msgstr ""

#: ../../conversion.rst:832
# 7e939e14943340068c8d1097ab2818af
msgid "|app| will automatically replace _TITLE_ and _AUTHOR_ with the title and author of the document being converted.  You can also display text at the left and right edges and change the font size, as demonstrated with this header template::"
msgstr ""

#: ../../conversion.rst:839
# fac2f17d5c6a404bb56cf748351227f5
msgid "This will display the title at the left and the author at the right, in a font size smaller than the main text."
msgstr ""

#: ../../conversion.rst:842
# 5579c209d8574f859cddf6909fa7fbaf
msgid "You can also use the current section in templates, as shown below::"
msgstr ""

#: ../../conversion.rst:846
# 62af6446af5244aa84ba276bb22d506a
msgid "_SECTION_ is replaced by whatever the name of the current section is. These names are taken from the metadata Table of Contents in the document (the PDF Outline). If the document has no table of contents then it will be replaced by empty text. If a single PDF page has multiple sections, the first section on the page will be used."
msgstr ""

#: ../../conversion.rst:852
# d0fc1ab9005447bfa6a31b33b8a7e141
msgid "You can even use javascript inside the header and footer templates, for example, the following template will cause page numbers to start at 4 instead of 1::"
msgstr ""

#: ../../conversion.rst:858
# 9be1b4dfde9947cbbcc5cae75ce1920c
msgid "When adding headers and footers make sure you set the page top and bottom margins to large enough values, under the Page Setup section of the conversion dialog."
msgstr ""

#: ../../conversion.rst:863
# 99c064d8e4fb44c195e00c61e210e127
msgid "Printable Table of Contents"
msgstr ""

#: ../../conversion.rst:865
# c28ec1abb21d499f84f1a89f07ce6331
msgid "You can also insert a printable Table of Contents at the end of the PDF that lists the page numbers for every section. This is very useful if you intend to print out the PDF to paper. If you wish to use the PDF on an electronic device, then the PDF Outline provides this functionality and is generated by default."
msgstr ""

#: ../../conversion.rst:870
# 2c4f15b430744db3a190074cf2595bd5
msgid "You can customize the look of the the generated Table of contents by using the Extra CSS conversion setting under the Look & Feel part of the conversion dialog. The default css used is listed below, simply copy it and make whatever changes you like."
msgstr ""

