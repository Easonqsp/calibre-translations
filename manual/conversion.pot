# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.42.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-28 13:56+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../conversion.rst:6
# cb4d724eacea41aca232bb16b872acf8
msgid "Ebook Conversion"
msgstr ""

#: ../../conversion.rst:8
# d46a8fab24134af6a152b45e00fdb3ca
msgid "|app| has a conversion system that is designed to be very easy to use. Normally, you just add a book to |app|, click convert and |app| will try hard to generate output that is as close as possible to the input. However, |app| accepts a very large number of input formats, not all of which are as suitable as others for conversion to ebooks. In the case of such input formats, or if you just want greater control over the conversion system, |app| has a lot of options to fine tune the conversion process. Note however that |app|'s conversion system is not a substitute for a full blown ebook editor. To edit ebooks, I recommend first converting them to EPUB or AZW3 using |app| and then using the Edit Book feature to get them into perfect shape. You can then use the edited ebook as input for conversion into other formats in |app|."
msgstr ""

#: ../../conversion.rst:20
# 05c413e19fb546fd8211273ee677461a
msgid "This document will refer mainly to the conversion settings as found in the conversion dialog, pictured below. All these settings are also available via command line interface to conversion, documented at :ref:`ebook-convert`. In |app|, you can obtain help on any individual setting by holding your mouse over it, a tooltip will appear describing the setting."
msgstr ""

#: ../../conversion.rst:0
#: ../../conversion.rst:0
# 241ea46263d2441aa2dc940453ddb3fd
# 9f9a0ac0545a48178b138f976eec4cca
msgid "Contents"
msgstr ""

#: ../../conversion.rst:38
# 85f1730175484e618bd8f496d155cb2d
msgid "Introduction"
msgstr ""

#: ../../conversion.rst:44
# fe9270bbbda04eed89c0290b42f0517d
msgid "The first thing to understand about the conversion system is that it is designed as a pipeline. Schematically, it looks like this:"
msgstr ""

#: ../../conversion.rst:51
# 119e8bc960534ec7852bc826f0432a28
msgid "The input format is first converted to XHTML by the appropriate *Input Plugin*. This HTML is then *transformed*. In the last step, the processed XHTML is converted to the specified output format by the appropriate *Output Plugin*. The results of the conversion can vary greatly, based on the input format. Some formats convert much better than others. A list of the best source formats for conversion is available :ref:`here <best-source-formats>`."
msgstr ""

#: ../../conversion.rst:58
# bb156d1d116e48648f4e98d62edb656e
msgid "The transforms that act on the XHTML output are where all the work happens. There are various transforms, for example, to insert book metadata as a page at the start of the book, to detect chapter headings and automatically create a Table of Contents, to proportionally adjust font sizes, et cetera. It is important to remeber that all the transforms act on the XHTML output by the *Input Plugin*, not on the input file itself. So, for example, if you ask |app| to convert an RTF file to EPUB, it will first be converted to XHTML internally, the various transforms will be applied to the XHTML and then the *Output Plugin* will create the EPUB file, automatically generating all metadata, Table of Contents, et cetera."
msgstr ""

#: ../../conversion.rst:67
# f58d7f2ae1924c899d1a24deb40521b4
msgid "You can see this process in action by using the debug option |dbgi|. Just specify the path to a directory for the debug output. During conversion, |app| will place the XHTML generated by the various stages of the conversion pipeline in different sub-directories. The four sub-directories are:"
msgstr ""

#: ../../conversion.rst:0
# 8b2fdc3181014179b349ac4e3f17b7cd
msgid "Stages of the conversion pipeline"
msgstr ""

#: ../../conversion.rst:75
# 979f13dc1f9643349bc1fc916f039931
msgid "Directory"
msgstr ""

#: ../../conversion.rst:75
# edfcf883fb554ebd9d9327b7dd4040ef
msgid "Description"
msgstr ""

#: ../../conversion.rst:77
# 2f70a3d361fb4727adf365c280da1673
msgid "input"
msgstr ""

#: ../../conversion.rst:77
# 3804d78673a64413b9365a98522607dd
msgid "This contains the HTML output by the Input Plugin. Use this to debug the Input Plugin."
msgstr ""

#: ../../conversion.rst:78
# 7d7225981af14f84b6ec92f016520395
msgid "parsed"
msgstr ""

#: ../../conversion.rst:78
# f810ad9d3ae04fdd934e55a628d1ef7b
msgid "The result of pre-processing and converting to XHTML the output from the Input Plugin. Use to debug structure detection."
msgstr ""

#: ../../conversion.rst:79
# 99639ee087b94d6a83f7e6a4bd823739
msgid "structure"
msgstr ""

#: ../../conversion.rst:79
# b34d9a5e392343c7802dee8d6375e1a8
msgid "Post structure detection, but before CSS flattening and font size conversion. Use to debug font size conversion and CSS transforms."
msgstr ""

#: ../../conversion.rst:80
# e000b88aa56a4f45b1a7299526338eec
msgid "processed"
msgstr ""

#: ../../conversion.rst:80
# b964b097a4e841649163671d4cb852aa
msgid "Just before the ebook is passed to the output plugin. Use to debug the Output Plugin."
msgstr ""

#: ../../conversion.rst:83
# 731712ee2f4c4133b0c6bd298e893812
msgid "If you want to edit the input document a little before having |app| convert it, the best thing to do is edit the files in the :file:`input` sub-directory, then zip it up, and use the zip file as the input format for subsequent conversions. To do this use the :guilabel:`Edit meta information` dialog to add the zip file as a format for the book and then, in the top left corner of the conversion dialog, select ZIP as the input format."
msgstr ""

#: ../../conversion.rst:89
# f2ccccce967b4160828b3bc8cacd0d46
msgid "This document will deal mainly with the various transforms that operate on the intermediate XHTML and how to control them. At the end are some tips specific to each Input/Output format."
msgstr ""

#: ../../conversion.rst:93
# 0d9ed561b9744c6a89910ea936c8f7cb
msgid "Look & Feel"
msgstr ""

#: ../../conversion.rst:99
# 9502767c9fe04281a61e9e35c75a1325
msgid "This group of options controls various aspects of the look and feel of the converted ebook."
msgstr ""

#: ../../conversion.rst:104
# 0ca5cd68b7044216a3e5a8f5d3334185
msgid "Font size rescaling"
msgstr ""

#: ../../conversion.rst:106
# bc69360104f648269b086ff1f3d29a91
msgid "One of the nicest features of the e-reading experience is the ability to easily adjust font sizes to suit individual needs and lighting conditions. |app| has sophisticated algorithms to ensure that all the books it outputs have a consistent font sizes, no matter what font sizes are specified in the input document."
msgstr ""

#: ../../conversion.rst:111
# 04dc379501624c49aa916359b6d80127
msgid "The base font size of a document is the most common font size in that document, i.e., the size of the bulk of text in that document. When you specify a :guilabel:`Base font size`, |app| automatically rescales all font sizes in the document proportionately, so that the most common font size becomes the specified base font size and other font sizes are rescaled appropriately. By choosing a larger base font size, you can make the fonts in the document larger and vice versa. When you set the base font size, for best results, you should also set the font size key."
msgstr ""

#: ../../conversion.rst:119
# 8011c51951cb4f52884191e238765b4d
msgid "Normally, |app| will automatically choose a base font size appropriate to the Output Profile you have chosen (see :ref:`page-setup`). However, you can override this here in case the default is not suitable for you."
msgstr ""

#: ../../conversion.rst:123
# 4f7d831c05b34fb59d2ec195d3e0e515
msgid "The :guilabel:`Font size key` option lets you control how non-base font sizes are rescaled. The font rescaling algorithm works using a font size key, which is simply a comma-separated list of font sizes. The font size key tells |app| how many \"steps\" bigger or smaller a given font size should be compared to the base font size. The idea is that there should be a limited number of font sizes in a document. For example, one size for the body text, a couple of sizes for different levels of headings and a couple of sizes for super/sub scripts and footnotes. The font size key allows |app| to compartmentalize the font sizes in the input documents into separate \"bins\" corresponding to the different logical font sizes."
msgstr ""

#: ../../conversion.rst:132
# d2e3ed66727f4bdfa0694415c422687c
msgid "Let's illustrate with an example. Suppose the source document we are converting was produced by someone with excellent eyesight and has a base font size of 8pt. That means the bulk of the text in the document is sized at 8pts, while headings are somewhat larger (say 10 and 12pt) and footnotes somewhat smaller at 6pt. Now if we use the following settings::"
msgstr ""

#: ../../conversion.rst:141
# de33622114ec41ef9d3599dca6b33fbd
msgid "The output document will have a base font size of 12pt, headings of 14 and 16pt and footnotes of 8pt. Now suppose we want to make the largest heading size stand out more and make the footnotes a little larger as well. To achieve this, the font key should be changed to::"
msgstr ""

#: ../../conversion.rst:147
# 9fca8ce34a9c45febb734300806d0a7b
msgid "The largest headings will now become 18pt, while the footnotes will become 9pt. You can play with these settings to try and figure out what would be optimum for you by using the font rescaling wizard, which can be accessed by clicking the little button next to the :guilabel:`Font size key` setting."
msgstr ""

#: ../../conversion.rst:152
# dd92597293504a3c8b7f88da52cb85da
msgid "All the font size rescaling in the conversion can also be disabled here, if you would like to preserve the font sizes in the input document."
msgstr ""

#: ../../conversion.rst:155
# 005218687fc843c58dd0507f3677fe59
msgid "A related setting is :guilabel:`Line height`. Line height controls the vertical height of lines. By default, (a line height of 0), no manipulation of line heights is performed. If you specify a non-default value, line heights will be set in all locations that don't specify their own line heights. However, this is something of a blunt weapon and should be used sparingly. If you want to adjust the line heights for some section of the input, it's better to use the :ref:`extra-css`."
msgstr ""

#: ../../conversion.rst:163
# c33652a2ee654e14ba9b903bfa8d23d7
msgid "Paragraph spacing"
msgstr ""

#: ../../conversion.rst:165
# c5ecc8ee40834e97a77de977143a319f
msgid "Normally, paragraphs in XHTML are rendered with a blank line between them and no leading text indent. |app| has a couple of options to control this. :guilabel:`Remove spacing between paragraphs` forcefully ensure that all paragraphs have no inter paragraph spacing. It also sets the text indent to 1.5em (can be changed) to mark the start of every paragraph. :guilabel:`Insert blank line` does the opposite, guaranteeing that there is exactly one blank line between each pair of paragraphs. Both these options are very comprehensive, removing spacing, or inserting it for *all* paragraphs (technically <p> and <div> tags). This is so that you can just set the option and be sure that it performs as advertised, irrespective of how messy the input file is. The one exception is when the input file uses hard line breaks to implement inter-paragraph spacing."
msgstr ""

#: ../../conversion.rst:176
# 23bb119c5f774f6da79b9278d0a18190
msgid "If you want to remove the spacing between all paragraphs, except a select few, don't use these options. Instead add the following CSS code to :ref:`extra-css`::"
msgstr ""

#: ../../conversion.rst:182
# 7809c3866b4d4c2a9aa7b6467f477145
msgid "Then, in your source document, mark the paragraphs that need spacing with `class=\"spacious\"`. If your input document is not in HTML, use the Debug option, described in the Introduction to get HTML (use the :file:`input` sub-directory)."
msgstr ""

#: ../../conversion.rst:190
# 9815c11f60954b7dbc749359570b22ef
msgid "Extra CSS"
msgstr ""

#: ../../conversion.rst:192
# 62c7a712ad764eaca1d3e3be50e38385
msgid "This option allows you to specify arbitrary CSS that will be applied to all HTML files in the input. This CSS is applied with very high priority and so should override most CSS present in the **input document** itself. You can use this setting to fine tune the presentation/layout of your document. For example, if you want all paragraphs of class `endnote` to be right aligned, just add::"
msgstr ""

#: ../../conversion.rst:200
# 8822df957dc040abb5def8bb29306ec5
msgid "or if you want to change the indentation of all paragraphs::"
msgstr ""

#: ../../conversion.rst:204
# f1dce5ac0362426392818737076012ed
msgid ":guilabel:`Extra CSS` is a very powerful option, but you do need an understanding of how CSS works to use it to its full potential. You can use the debug pipeline option described above to see what CSS is present in your input document."
msgstr ""

#: ../../conversion.rst:209
#: ../../conversion.rst:414
# 717cc6a464ad4bf0a6e4316f2ee756a3
# 79007a3cf65c428c81e7891f49430032
msgid "Miscellaneous"
msgstr ""

#: ../../conversion.rst:211
#: ../../conversion.rst:416
# 1696f5e41a9d49fb8eb4aa8e0e6ecb26
# d054440496ff443fa64bec0b1803676c
msgid "There are a few more options in this section."
msgstr ""

#: ../../conversion.rst:217
# acfc06b5a167407da5db152d78cd605a
msgid ":guilabel:`No text justification`"
msgstr ""

#: ../../conversion.rst:214
# 369921b516ca40ad92a57779a96537f7
msgid "Normally, if the output format supports it, |app| will force the output ebook to have *justified* text (i.e., a smooth right margin). This option will turn off this behavior, in which case whatever justification is specified in the input document will be used instead."
msgstr ""

#: ../../conversion.rst:224
# 95e3bccabca742839ac5540cf9d55677
msgid ":guilabel:`Linearize tables`"
msgstr ""

#: ../../conversion.rst:220
# 6218fd930fed4dcb9b28849d2464af8e
msgid "Some badly designed documents use tables to control the layout of text on the page. When converted these documents often have text that runs off the page and other artifacts. This option will extract the content from the tables and present it in a linear fashion. Note that this option linearizes *all* tables, so only use it if you are sure the input document does not use tables for legitimate purposes, like presenting tabular information."
msgstr ""

#: ../../conversion.rst:233
# 8e47c1b988ff43fda4b48730c6880f87
msgid ":guilabel:`Transliterate unicode characters`"
msgstr ""

#: ../../conversion.rst:227
# 3528f997b75f469187a0dc926417800d
msgid "Transliterate unicode characters to an ASCII representation. Use with care because this will replace unicode characters with ASCII. For instance it will replace \"Михаил Горбачёв\" with \"Mikhail Gorbachiov\". Also, note that in cases where there are multiple representations of a character (characters shared by Chinese and Japanese for instance) the representation used by the largest number of people will be used (Chinese in the previous example). This option is mainly useful if you are going to view the ebook on a device that does not have support for unicode."
msgstr ""

#: ../../conversion.rst:242
# 647bfaed685244cf9124032c8c49e19e
msgid ":guilabel:`Input character encoding`"
msgstr ""

#: ../../conversion.rst:236
# d82adfb8bc2a476ea744400fc35cc243
msgid "Older documents sometimes don't specify their character encoding. When converted, this can result in non-English characters or special characters like smart quotes being corrupted. |app| tries to auto-detect the character encoding of the source document, but it does not' always succeed. You can force it to assume a particular character encoding by using this setting. `cp1252` is a common encoding for documents produced using windows software. You should also read :ref:`char-encoding-faq` for more on encoding issues."
msgstr ""

#: ../../conversion.rst:247
# 81a62b6a447c4e3eb515b45c9956b2ae
msgid "Page Setup"
msgstr ""

#: ../../conversion.rst:249
# ef699751298746d4854d177da0b2b466
msgid "The Page Setup options are for controlling screen layout, like margins and screen sizes. There are options to setup page margins, which will be used by the Output Plugin, if the selected Output Format supports page margins. In addition, you should choose an Input profile and an Output profile. Both sets of profiles basically deal with how to interpret measurements in the input/output documents, screen sizes and default font rescaling keys."
msgstr ""

#: ../../conversion.rst:255
# deda2b1904f64ca5941f79d1a5e8bd7a
msgid "If you know that the file you are converting was intended to be used on a particular device/software platform, choose the corresponding input profile, otherwise just choose the default input profile. If you know the files you are producing are meant for a particular device type, choose the corresponding Output profile. In particular, for MOBI Output files, you should choose the Kindle, for LIT the Microsoft Reader and for EPUB the Sony Reader. In the case of EPUB, the Sony Reader profile will result in EPUB files that will work everywhere. However, it has some side effects, like inserting artificial section breaks to keep internal components below the size threshold, needed for SONY devices. In particular for the iPhone/Android phones, choose the SONY output profile. If you know your EPUB files will not be read on a SONY or similar device, use the default output profile. If you are producing MOBI files that are not intended for the Kindle, choose the Mobipocket books output profile."
msgstr ""

#: ../../conversion.rst:259
# a158403cabd245678ddf5d8733da5d5a
msgid "The Output profile also controls the screen size. This will cause, for example, images to be auto-resized to be fit to the screen in some output formats. So choose a profile of a device that has a screen size similar to your device."
msgstr ""

#: ../../conversion.rst:264
# 834e1c16478a43d7977f8c803fca00a9
msgid "Heuristic Processing"
msgstr ""

#: ../../conversion.rst:266
# 83fdd061439a453fb99ee228db593b10
msgid "Heuristic Processing provides a variety of functions which can be used to try and detect and correct common problems in poorly formatted input documents.  Use these functions if your input document suffers from poor formatting. Because these functions rely on common patterns, be aware that in some cases an option may lead to worse results, so use with care.  As an example, several of these options will remove all non-breaking-space entities, or may include false positive matches relating to the function."
msgstr ""

#: ../../conversion.rst:274
# 3d0209219b0e4211bb04a2192d92f83a
msgid ":guilabel:`Enable heuristic processing`"
msgstr ""

#: ../../conversion.rst:273
# 20675f956124451aace3385c8e654d77
msgid "This option activates |app|'s Heuristic Processing stage of the conversion pipeline. This must be enabled in order for various sub-functions to be applied"
msgstr ""

#: ../../conversion.rst:280
# 762820e133ad49028f13699d4ff51ab7
msgid ":guilabel:`Unwrap lines`"
msgstr ""

#: ../../conversion.rst:277
# d2dcb3a6f5b44834bbbbd1ea88ea508d
msgid "Enabling this option will cause |app| to attempt to detect and correct hard line breaks that exist within a document using punctuation clues and line length. |app| will first attempt to detect whether hard line breaks exist, if they do not appear to exist |app| will not attempt to unwrap lines. The line-unwrap factor can be reduced if you want to 'force' |app| to unwrap lines."
msgstr ""

#: ../../conversion.rst:286
# e3be0d0ad49e4d99b38b7b24af34a7d2
msgid ":guilabel:`Line-unwrap factor`"
msgstr ""

#: ../../conversion.rst:283
# 40a8b688b73744c1b3eca1cd26d3143e
msgid "This option controls the algorithm |app| uses to remove hard line breaks. For example, if the value of this option is 0.4, that means calibre will remove hard line breaks from the end of lines whose lengths are less than the length of 40% of all lines in the document.  If your document only has a few line breaks which need correction, then this value should be reduced to somewhere between 0.1 and 0.2."
msgstr ""

#: ../../conversion.rst:301
# f5438756578e4ae28075f2e97c141998
msgid ":guilabel:`Detect and markup unformatted chapter headings and sub headings`"
msgstr ""

#: ../../conversion.rst:289
# b4e76738da224f23b81fba36530ecf9f
msgid "If your document does not have chapter headings and titles formatted differently from the rest of the text, |app| can use this option to attempt detection them and surround them with heading tags. <h2> tags are used for chapter headings; <h3> tags are used for any titles that are detected."
msgstr ""

#: ../../conversion.rst:293
# 3313beae8f8d44aa8f5a6ab136dcc957
msgid "This function will not create a TOC, but in many cases it will cause |app|'s default chapter detection settings to correctly detect chapters and build a TOC.  Adjust the XPath under Structure Detection if a TOC is not automatically created.  If there are no other headings used in the document then setting \"//h:h2\" under Structure Detection would be the easiest way to create a TOC for the document."
msgstr ""

#: ../../conversion.rst:298
# e32a76967ef74dba9bf7cc363047e24a
msgid "The inserted headings are not formatted, to apply formatting use the :guilabel:`Extra CSS` option under the Look and Feel conversion settings.  For example, to center heading tags, use the following::"
msgstr ""

#: ../../conversion.rst:306
# fd5b193a98ee484286846e8ad3bea86e
msgid ":guilabel:`Renumber sequences of <h1> or <h2> tags`"
msgstr ""

#: ../../conversion.rst:304
# 40c080e02afd4de18d617c1c875c4932
msgid "Some publishers format chapter headings using multiple <h1> or <h2> tags sequentially. |app|'s default conversion settings will cause such titles to be split into two pieces.  This option will re-number the heading tags to prevent splitting."
msgstr ""

#: ../../conversion.rst:313
# c29610ef27304ed89859f2deb107764a
msgid ":guilabel:`Delete blank lines between paragraphs`"
msgstr ""

#: ../../conversion.rst:309
# 6a7857d10e114aba83cb9063fb0b2680
msgid "This option will cause |app| to analyze blank lines included within the document.  If every paragraph is interleaved with a blank line, then |app| will remove all those blank paragraphs.  Sequences of multiple blank lines will be considered scene breaks and retained as a single paragraph.  This option differs from the 'Remove Paragraph Spacing' option under 'Look and Feel' in that it actually modifies the HTML content, while the other option modifies the document styles.  This option can also remove paragraphs which were inserted using |app|'s 'Insert blank line' option."
msgstr ""

#: ../../conversion.rst:318
# b919895750044958a0e427bff37a9710
msgid ":guilabel:`Ensure scene breaks are consistently formatted`"
msgstr ""

#: ../../conversion.rst:316
# 9105dd8ca76a4364a6f01a6ccf0bdcf1
msgid "With this option |app| will attempt to detect common scene-break markers and ensure that they are center aligned. 'Soft' scene break markers, i.e. scene breaks only defined by extra white space, are styled to ensure that they will not be displayed in conjunction with page breaks."
msgstr ""

#: ../../conversion.rst:334
# 1abd0f41e58446f59429e5666359aaf7
msgid ":guilabel:`Replace scene breaks`"
msgstr ""

#: ../../conversion.rst:321
# 4454ef7849374743b33f87ab49e05026
msgid "If this option is configured then |app| will replace scene break markers it finds with the replacement text specified by the user.  Please note that some ornamental characters may not be supported across all reading devices."
msgstr ""

#: ../../conversion.rst:324
# dae283ba72bc45bbb70fba2f29779304
msgid "In general you should avoid using html tags, |app| will discard any tags and use pre-defined markup.  <hr /> tags, i.e. horizontal rules, and <img> tags are exceptions.  Horizontal rules can optionally be specified with styles, if you choose to add your own style be sure to include the 'width' setting, otherwise the style information will be discarded.  Image tags can used, but |app| does not provide the ability to add the image during conversion, this must be done after the fact using the 'Edit Book' feature."
msgstr ""

#: ../../conversion.rst:331
# 1f415850e0a440aab8d98a949d234e90
msgid "Example image tag (place the image within an 'Images' folder inside the epub after conversion):"
msgstr ""

#: ../../conversion.rst:331
# 9d095e8e397f4e8a89959f1db3146af3
msgid "<img style=\"width:10%\" src=\"../Images/scenebreak.png\" />"
msgstr ""

#: ../../conversion.rst:334
# 7cfe18bc3a2b4e3d80df12f076e3c9fb
msgid "Example horizontal rule with styles:"
msgstr ""

#: ../../conversion.rst:334
# 3a201ed158614bcc82b3a39ccef5d4a2
msgid "<hr style=\"width:20%;padding-top: 1px;border-top: 2px ridge black;border-bottom: 2px groove black;\"/>"
msgstr ""

#: ../../conversion.rst:342
# e52b42eb77b543a3980a8492c6ed1e77
msgid ":guilabel:`Remove unnecessary hyphens`"
msgstr ""

#: ../../conversion.rst:337
# b4c11d90e5e5446d903c5252781143b5
msgid "|app| will analyze all hyphenated content in the document when this option is enabled.  The document itself is used as a dictionary for analysis.  This allows |app| to accurately remove hyphens for any words in the document in any language, along with made-up and obscure scientific words.  The primary drawback is words appearing only a single time in the document will not be changed.  Analysis happens in two passes, the first pass analyzes line endings.  Lines are only unwrapped if the word exists with or without a hyphen in the document.  The second pass analyzes all hyphenated words throughout the document, hyphens are removed if the word exists elsewhere in the document without a match."
msgstr ""

#: ../../conversion.rst:346
# a1b8acef1b7943588cc6e164470fa1f2
msgid ":guilabel:`Italicize common words and patterns`"
msgstr ""

#: ../../conversion.rst:345
# 18a038fa5d504603a6db349c3e013a3b
msgid "When enabled, |app| will look for common words and patterns that denote italics and italicize them.  Examples are common text conventions such as ~word~ or phrases that should generally be italicized, e.g. latin phrases like 'etc.' or 'et cetera'."
msgstr ""

#: ../../conversion.rst:350
# 190b98182baa45da981d7c45386778be
msgid ":guilabel:`Replace entity indents with CSS indents`"
msgstr ""

#: ../../conversion.rst:349
# 611f931a5ac14099b94f936c1acfd631
msgid "Some documents use a convention of defining text indents using non-breaking space entities.  When this option is enabled |app| will attempt to detect this sort of formatting and convert them to a 3% text indent using css."
msgstr ""

#: ../../conversion.rst:355
# 2947e252c5c54dadaf050d6700a94168
msgid "Search & Replace"
msgstr ""

#: ../../conversion.rst:357
# 11d0985db0f94818a992d4940322224c
msgid "These options are useful primarily for conversion of PDF documents or OCR conversions, though they can also be used to fix many document specific problems. As an example, some conversions can leaves behind page headers and footers in the text. These options use regular expressions to try and detect headers, footers, or other arbitrary text and remove or replace them. Remember that they operate on the intermediate XHTML produced by the conversion pipeline. There is a wizard to help you customize the regular expressions for your document.  Click the magic wand beside the expression box, and click the 'Test' button after composing your search expression.  Successful matches will be highlighted in Yellow."
msgstr ""

#: ../../conversion.rst:365
# bc11cbd189904fb19cc00d91592d6ec4
msgid "The search works by using a python regular expression. All matched text is simply removed from the document or replaced using the replacement pattern. The replacement pattern is optional, if left blank then text matching the search pattern will be deleted from the document.  You can learn more about regular expressions and their syntax at :ref:`regexptutorial`."
msgstr ""

#: ../../conversion.rst:373
# 123e1d717f924b098e57f69fcaf30312
msgid "Structure Detection"
msgstr ""

#: ../../conversion.rst:375
# 20686f81ec40478794ff2516621633db
msgid "Structure detection involves |app| trying its best to detect structural elements in the input document, when they are not properly specified. For example, chapters, page breaks, headers, footers, etc. As you can imagine, this process varies widely from book to book. Fortunately, |app| has very powerful options to control this. With power comes complexity, but if once you take the time to learn the complexity, you will find it well worth the effort."
msgstr ""

#: ../../conversion.rst:378
# a054af0f28a640be8b3bca692b05052b
msgid "Chapters and page breaks"
msgstr ""

#: ../../conversion.rst:380
# c741e3b215d3482cb72b55f3de327332
msgid "|app| has two sets of options for :guilabel:`chapter detection` and :guilabel:`inserting page breaks`. This can sometimes be slightly confusing, as by default, |app| will insert page breaks before detected chapters as well as the locations detected by the page breaks option. The reason for this is that there are often location where page breaks should be inserted that are not chapter boundaries. Also, detected chapters can be optionally inserted into the auto generated Table of Contents."
msgstr ""

#: ../../conversion.rst:385
# 80d9d41cf23a4065a5a3edb003842584
msgid "|app| uses *XPath*, a powerful language to allow the user to specify chapter boundaries/page breaks. XPath can seem a little daunting to use at first, fortunately, there is a :ref:`XPath tutorial <xpath-tutorial>` in the User Manual. Remember that Structure Detection operates on the intermediate XHTML produced by the conversion pipeline. Use the debug option described in the :ref:`conversion-introduction` to figure out the appropriate settings for your book. There is also a button for a XPath wizard to help with the generation of simple XPath expressions."
msgstr ""

#: ../../conversion.rst:391
# 3ea3078d08c047a19cf2d2d93adc4de5
msgid "By default, |app| uses the following expression for chapter detection::"
msgstr ""

#: ../../conversion.rst:395
# 2af86168657744308f79813105bce70b
msgid "This expression is rather complex, because it tries to handle a number of common cases simulataneously. What it means is that |app| will assume chapters start at either `<h1>` or `<h2>` tags that have any of the words `(chapter, book, section or part)` in them or that have the `class=\"chapter\"` attribute."
msgstr ""

#: ../../conversion.rst:399
# a4ba4e1e7c5c4558ba2af91274ce485c
msgid "A related option is :guilabel:`Chapter mark`, which allows you to control what |app| does when it detects a chapter. By default, it will insert a page break before the chapter. You can have it insert a ruled line instead of, or in addition to the page break. You can also have it do nothing."
msgstr ""

#: ../../conversion.rst:403
# f49820c9423e4ffebc844e02df282105
msgid "The default setting for detecting page breaks is::"
msgstr ""

#: ../../conversion.rst:407
# 35e08b186e944c9db6fd0bb06e89c3d1
msgid "which means that |app| will insert page breaks before every `<h1>` and `<h2>` tag by default."
msgstr ""

#: ../../conversion.rst:411
# 7c859381a8a94908be63a1c3e909ed59
msgid "The default expressions may change depending on the input format you are converting."
msgstr ""

#: ../../conversion.rst:422
# 3004492a27814030b50c50e4f3db8096
msgid ":guilabel:`Insert metadata as page at start of book`"
msgstr ""

#: ../../conversion.rst:419
# 7a9e906252fe4fb0b69895e724d69084
msgid "One of the great things about |app| is that it allows you to maintain very complete metadata about all of your books, for example, a rating, tags, comments, etc. This option will create a single page with all this metadata and insert it into the converted ebook, typically just after the cover. Think of it as a way to create your own customised book jacket."
msgstr ""

#: ../../conversion.rst:429
# 1ba3fe06cef44bf5a630509ae6ca7f79
msgid ":guilabel:`Remove first image`"
msgstr ""

#: ../../conversion.rst:425
# 330a1c45a37e4dbeb07cb4bb4b16eb4b
msgid "Sometimes, the source document you are converting includes the cover as part of the book, instead of as a separate cover. If you also specify a cover in |app|, then the converted book will have two covers. This option will simply remove the first image from the source document, thereby ensuring that the converted book has only one cover, the one specified in |app|."
msgstr ""

#: ../../conversion.rst:432
# bc9b23817639468792d1c63798f6e9f9
msgid "Table of Contents"
msgstr ""

#: ../../conversion.rst:434
# 20daa37da7724d48bc91b94016d1db42
msgid "When the input document has a Table of Contents in its metadata, |app| will just use that. However, a number of older formats either do not support a metadata based Table of Contents, or individual documents do not have one. In these cases, the options in this section can help you automatically generate a Table of Contents in the converted ebook, based on the actual content in the input document."
msgstr ""

#: ../../conversion.rst:439
# 31b03ef8d2344de7b537321786adafbd
msgid "Using these options can be a little challenging to get exactly right. If you prefer creating/editing the Table of Contents by hand, convert to the EPUB or AZW3 formats and select the checkbox at the bottom of the Table of Contents section of the conversion dialog that says :guilabel:`Manually fine-tune the Table of Contents after conversion`. This will launch the ToC Editor tool after the conversion. It allows you to create entries in the Table of Contents by simply clicking the place in the book where you want the entry to point. You can also use the ToC Editor by itself, without doing a conversion. Go to :guilabel:`Preferences->Toolbars` and add the ToC Editor to the main toolbar. Then just select the book you want to edit and click the ToC Editor button."
msgstr ""

#: ../../conversion.rst:451
# c48f49eb357d4224bac2dbcaa36d1ff1
msgid "The first option is :guilabel:`Force use of auto-generated Table of Contents`. By checking this option you can have |app| override any Table of Contents found in the metadata of the input document with the auto generated one."
msgstr ""

#: ../../conversion.rst:455
# cc79cba3e7ba440d999ed675ba3aae98
msgid "The default way that the creation of the auto generated Table of Contents works is that, |app| will first try to add any detected chapters to the generated table of contents. You can learn how to customize the detection of chapters in the :ref:`structure-detection` section above. If you do not want to include detected chapters in the generated table of contents, check the :guilabel:`Do not add detected chapters` option."
msgstr ""

#: ../../conversion.rst:460
# 75a3839add134fe8bd2cccca6060aed5
msgid "If less than the :guilabel:`Chapter threshold` number of chapters were detected, |app| will then add any hyperlinks it finds in the input document to the Table of Contents. This often works well many input documents include a hyperlinked Table of Contents right at the start. The :guilabel:`Number of links` option can be used to control this behavior. If set to zero, no links are added. If set to a number greater than zero, at most that number of links is added."
msgstr ""

#: ../../conversion.rst:466
# 0709307ac83648319395e0ad224d1d86
msgid "|app| will automatically filter duplicates from the generated Table of Contents. However, if there are some additional undesirable entries, you can filter them using the :guilabel:`TOC Filter` option. This is a regular expression that will match the title of entries in the generated table of contents. Whenever a match is found, it will be removed. For example, to remove all entries titles \"Next\" or \"Previous\" use::"
msgstr ""

#: ../../conversion.rst:473
# ecd0d78057b44fb688e5409a5ce5181b
msgid "The :guilabel:`Level 1,2,3 TOC` options allow you to create a sophisticated multi-level Table of Contents. They are XPath expressions that match tags in the intermediate XHTML produced by the conversion pipeline. See the :ref:`conversion-introduction` for how to get access to this XHTML. Also read the :ref:`xpath-tutorial`, to learn how to construct XPath expressions. Next to each option is a button that launches a wizard to help with the creation of basic XPath expressions. The following simple example illustrates how to use these options."
msgstr ""

#: ../../conversion.rst:479
# 0a17287edc56415f93841d521f6201dd
msgid "Suppose you have an input document that results in XHTML that look like this:"
msgstr ""

#: ../../conversion.rst:501
# a12ce29850284450bebe78f8118a1d8e
msgid "Then, we set the options as::"
msgstr ""

#: ../../conversion.rst:506
# 988d1c7cd33746ac9a71a55d9baf8161
msgid "This will result in an automatically generated two level Table of Contents that looks like::"
msgstr ""

#: ../../conversion.rst:517
# fefb94d6a6fd46ea857555f568e8f58d
msgid "Not all output formats support a multi level Table of Contents. You should first try with EPUB Output. If that works, then try your format of choice."
msgstr ""

#: ../../conversion.rst:521
# af8d69ab1a9347729a5cf8f0496e71a0
msgid "Using images as chapter titles when converting HTML input documents"
msgstr ""

#: ../../conversion.rst:523
# 6cf3d71a756341d78c163d828d8eb494
msgid "Suppose you want to use an image as your chapter title, but still want |app| to be able to automatically generate a Table of Contents for you from the chapter titles. Use the following HTML markup to achieve this"
msgstr ""

#: ../../conversion.rst:537
# 107989be7411478e9df51320d5ada668
msgid "Set the :guilabel:`Level 1 TOC` setting to ``//h:h2``. Then, for chapter two, |app| will take the title from the value of the ``title`` attribute on the ``<h2>`` tag, since the tag has no text."
msgstr ""

#: ../../conversion.rst:540
# a85add31ebde499e8ae59bf45048c180
msgid "Using tag attributes to supply the text for entries in the Table of Contents"
msgstr ""

#: ../../conversion.rst:542
# 43f1f82ebef448ed8f7e26efeca86af5
msgid "If you have particularly long chapter titles and want shortened versions in the Table of Contents, you can use the title attribute to achieve this, for example:"
msgstr ""

#: ../../conversion.rst:557
# 62bc3fd69eac4108af6c9de206178120
msgid "Set the :guilabel:`Level 1 TOC` setting to ``//h:h2/@title``. Then |app| will take the title from the value of the ``title`` attribute on the ``<h2>`` tags, instead of using the text inside the tag. Note the trailing ``/@title`` on the XPath expression, you can use this form to tell |app| to get the text from any attribute you like."
msgstr ""

#: ../../conversion.rst:564
# bf4a961b5a5d4779b88615f397e80728
msgid "How options are set/saved for Conversion"
msgstr ""

#: ../../conversion.rst:566
# 8e829365ed8a4fc0af817e9eeb9fbfe1
msgid "There are two places where conversion options can be set in |app|. The first is in Preferences->Conversion. These settings are the defaults for the conversion options. Whenever you try to convert a new book, the settings set here will be used by default."
msgstr ""

#: ../../conversion.rst:571
# 975e9f46747a44c5b891ab126764c415
msgid "You can also change settings in the conversion dialog for each book conversion. When you convert a book, |app| remembers the settings you used for that book, so that if you convert it again, the saved settings for the individual book will take precedence over the defaults set in Preferences. You can restore the individual settings to defaults by using the Restore to defaults button in the individual book conversion dialog. You can remove the saved settings for a group of books by selecting all the books and then clicking the edit metadata button to bring up the bulk metadata edit dialog, near the bottom of the dialog is an option to remove stored conversion settings."
msgstr ""

#: ../../conversion.rst:581
# 3dd83b276c8844d2a0c647d439503bda
msgid "When you Bulk Convert a set of books, settings are taken in the following order (last one wins):"
msgstr ""

#: ../../conversion.rst:583
# 0bed39556d18447f8426338013edb3fd
msgid "From the defaults set in Preferences->Conversion"
msgstr ""

#: ../../conversion.rst:585
# e016c854af804edd9c82a0236d2453d7
msgid "From the saved conversion settings for each book being converted (if any). This can be turned off by the option in the top left corner of the Bulk Conversion dialog."
msgstr ""

#: ../../conversion.rst:589
# c1a0c7b08be74d879c2eaba4f8e7b656
msgid "From the settings set in the Bulk conversion dialog"
msgstr ""

#: ../../conversion.rst:591
# a2a32764d906444dad3740025e383266
msgid "Note that the final settings for each book in a Bulk Conversion will be saved and re-used if the book is converted again. Since the highest priority in Bulk Conversion is given to the settings in the Bulk Conversion dialog, these will override any book specific settings. So you should only bulk convert books together that need similar settings. The exceptions are metadata and input format specific settings. Since the Bulk Conversion dialog does not have settings for these two categories, they will be taken from book specific settings (if any) or the defaults."
msgstr ""

#: ../../conversion.rst:602
# 35a2a86483374d8ba5ce7731e94e564a
msgid "You can see the actual settings used during any conversion by clicking the rotating icon in the lower right corner and then double clicking the individual conversion job. This will bring up a conversion log that will contain the actual settings used, near the top."
msgstr ""

#: ../../conversion.rst:607
# 4bea79d7bb404d4bb0e99b26019bee34
msgid "Format specific tips"
msgstr ""

#: ../../conversion.rst:609
# ab07bdd299504a14a4dbad4bf3978e8d
msgid "Here you will find tips specific to the conversion of particular formats. Options specific to particular format, whether input or output are available in the conversion dialog under their own section, for example `TXT Input` or `EPUB Output`."
msgstr ""

#: ../../conversion.rst:614
# 626daabf05d340c0865ce188ed140125
msgid "Convert Microsoft Word documents"
msgstr ""

#: ../../conversion.rst:616
# ff2aed557d024ba0922d79cbee64cfbc
msgid "|app| can automatically convert ``.docx`` files created by Microsoft Word 2007 and newer. Just add the file to |app| and click convert (make sure you are running the latest version of |app| as support for ``.docx`` files is very new)."
msgstr ""

#: ../../conversion.rst:621
# 3e292e21f19746a8aceb52659cc20d80
msgid "There is a `demo .docx file <http://calibre-ebook.com/downloads/demos/demo.docx>`_ that demonstrates the capabilities of the |app| conversion engine. Just download it and convert it to EPUB or AZW3 to see what |app| can do."
msgstr ""

#: ../../conversion.rst:625
# 5f0cd5a0bf1744d3bfc872dc535150f4
msgid "|app| will automatically generate a Table of Contents based on headings if you mark your headings with the ``Heading 1``, ``Heading 2``, etc. styles in Word. Open the output ebook in the calibre viewer and click the Table of Contents button to view the generated Table of Contents."
msgstr ""

#: ../../conversion.rst:631
# 5e2582bf0e7e493185a6dc6b3d9ed431
msgid "Older .doc files"
msgstr ""

#: ../../conversion.rst:633
# 089c936273484c05a23a1302e671ba92
msgid "For older .doc files, you can save the document as HTML with Microsoft Word and then convert the resulting HTML file with |app|. When saving as HTML, be sure to use the \"Save as Web Page, Filtered\" option as this will produce clean HTML that will convert well. Note that Word produces really messy HTML, converting it can take a long time, so be patient. If you have a newer version of Word available, you can directly save it as docx as well."
msgstr ""

#: ../../conversion.rst:640
# 608ddeb99e3b45f6b088a8bbc4a5797c
msgid "Another alternative is to use the free OpenOffice. Open your .doc file in OpenOffice and save it in OpenOffice's format .odt. |app| can directly convert .odt files."
msgstr ""

#: ../../conversion.rst:645
# 521a0c237c7249dfbf82d208381dc882
msgid "Convert TXT documents"
msgstr ""

#: ../../conversion.rst:647
# 40a04c8be9df4bda868b017eb15bbe6f
msgid "TXT documents have no well defined way to specify formatting like bold, italics, etc, or document structure like paragraphs, headings, sections and so on, but there are a variety of conventions commonly used.  By default |app| attempts automatic detection of the correct formatting and markup based on those conventions."
msgstr ""

#: ../../conversion.rst:652
# 27997522841a48faa5b6aeaefd1d020e
msgid "TXT input supports a number of options to differentiate how paragraphs are detected."
msgstr ""

#: ../../conversion.rst:656
# e1da63b7f7cf42bc8fe2fbcd725c2be9
msgid ":guilabel:`Paragraph Style: Auto`"
msgstr ""

#: ../../conversion.rst:655
# 5d5a81f4b307498b9f86d8f3ac06bad4
msgid "Analyzes the text file and attempts to automatically determine how paragraphs are defined.  This option will generally work fine, if you achieve undesirable results try one of the manual options."
msgstr ""

#: ../../conversion.rst:664
# 79f715af6c4143c59b83ac3507fc2e64
msgid ":guilabel:`Paragraph Style: Block`"
msgstr ""

#: ../../conversion.rst:659
# f33daee1504b404b91ada006fcfdb65f
msgid "Assumes one or more blank lines are a paragraph boundary::"
msgstr ""

#: ../../conversion.rst:671
# e18bff759aef4c44a435b08084af6fb9
msgid ":guilabel:`Paragraph Style: Single`"
msgstr ""

#: ../../conversion.rst:667
# 9e23378aaa1b4c428d0f1e12a43f808e
msgid "Assumes that every line is a paragraph::"
msgstr ""

#: ../../conversion.rst:682
# f201b57a611449d3a61b9d48a5cd247e
msgid ":guilabel:`Paragraph Style: Print`"
msgstr ""

#: ../../conversion.rst:674
# c96c7148fd52485f9bfefeae0e576c1f
msgid "Assumes that every paragraph starts with an indent (either a tab or 2+ spaces). Paragraphs end when the next line that starts with an indent is reached::"
msgstr ""

#: ../../conversion.rst:686
# 517507f0afaa428c8de13fb90135427a
msgid ":guilabel:`Paragraph Style: Unformatted`"
msgstr ""

#: ../../conversion.rst:685
# d3183f93d2a142549a0b69e0e671492d
msgid "Assumes that the document has no formatting, but does use hard line breaks.  Punctuation and median line length are used to attempt to re-create paragraphs."
msgstr ""

#: ../../conversion.rst:690
# a39a677f2219481c8595eee293b293c4
msgid ":guilabel:`Formatting Style: Auto`"
msgstr ""

#: ../../conversion.rst:689
# c8c9cfa74012420088ac10b7301ef7c9
msgid "Attemtps to detect the type of formatting markup being used.  If no markup is used then heuristic formatting will be applied."
msgstr ""

#: ../../conversion.rst:694
# 5f979cf2a3834eaca990d73873d61b0b
msgid ":guilabel:`Formatting Style: Heuristic`"
msgstr ""

#: ../../conversion.rst:693
# 82cd09c5cfb947b9a9e434dc364619d1
msgid "Analyzes the document for common chapter headings, scene breaks, and italicized words and applies the appropriate html markup during conversion."
msgstr ""

#: ../../conversion.rst:701
# da0bc82ced494f5a981b7441aec43daa
msgid ":guilabel:`Formatting Style: Markdown`"
msgstr ""

#: ../../conversion.rst:697
# 34c83b11a97341a496f5bd8a876ce63b
msgid "|app| also supports running TXT input though a transformation preprocessor known as markdown. Markdown allows for basic formatting to be added to TXT documents, such as bold, italics, section headings, tables, lists, a Table of Contents, etc. Marking chapter headings with a leading # and setting the chapter XPath detection expression to \"//h:h1\" is the easiest way to have a proper table of contents generated from a TXT document. You can learn more about the markdown syntax at `daringfireball <http://daringfireball.net/projects/markdown/syntax>`_."
msgstr ""

#: ../../conversion.rst:704
# 93f284dd9cb84f45af1522791b09d8ad
msgid ":guilabel:`Formatting Style: None`"
msgstr ""

#: ../../conversion.rst:704
# 09d17b976f774025a00d7604346cc8fd
msgid "Applies no special formatting to the text, the document is converted to html with no other changes."
msgstr ""

#: ../../conversion.rst:709
# 5506c803864d4b4c8fc1443704670cae
msgid "Convert PDF documents"
msgstr ""

#: ../../conversion.rst:711
# be209c2aafad4461919c816728e07773
msgid "PDF documents are one of the worst formats to convert from. They are a fixed page size and text placement format. Meaning, it is very difficult to determine where one paragraph ends and another begins. |app| will try to unwrap paragraphs using a configurable, :guilabel:`Line Un-Wrapping Factor`. This is a scale used to determine the length at which a line should be unwrapped. Valid values are a decimal between 0 and 1. The default is 0.45, just under the median line length. Lower this value to include more text in the unwrapping. Increase to include less. You can adjust this value in the conversion settings under :guilabel:`PDF Input`."
msgstr ""

#: ../../conversion.rst:718
# 67e6b8cf934f4cb8bd58274f3050b354
msgid "Also, they often have headers and footers as part of the document that will become included with the text. Use the Search and Replace panel to remove headers and footers to mitigate this issue. If the headers and footers are not removed from the text it can throw off the paragraph unwrapping. To learn how to use the header and footer removal options, read :ref:`regexptutorial`."
msgstr ""

#: ../../conversion.rst:723
# bb9358ada9674a98a605413cd6edf99d
msgid "Some limitations of PDF input are:"
msgstr ""

#: ../../conversion.rst:725
# d6ec185c1d5e40cc8a4933e241dc8f3d
msgid "Complex, multi-column, and image based documents are not supported."
msgstr ""

#: ../../conversion.rst:726
# e34c4b44203647389d6063314aa6e9da
msgid "Extraction of vector images and tables from within the document is also not supported."
msgstr ""

#: ../../conversion.rst:727
# e51d2572e5ad4305a8d75e583e794273
msgid "Some PDFs use special glyphs to represent ll or ff or fi, etc. Conversion of these may or may not work depending on just how they are represented internally in the PDF."
msgstr ""

#: ../../conversion.rst:728
# 2f6e47360a9c491eac833be5d3c247ac
msgid "Links and Tables of Contents are not supported"
msgstr ""

#: ../../conversion.rst:729
# 54b3fafc718b47caba2cd87d3d09f574
msgid "PDFs that use embedded non-unicode fonts to represent non-English characters will result in garbled output for those characters"
msgstr ""

#: ../../conversion.rst:730
# dab7793555d940c19dcc4f3964a3f7d5
msgid "Some PDFs are made up of photographs of the page with OCRed text behind them. In such cases |app| uses the OCRed text, which can be very different from what you see when you view the PDF file"
msgstr ""

#: ../../conversion.rst:731
# 4cc0839aa6ca451488e42e2aebc870b5
msgid "PDFs that are used to display complex text, like right to left languages and math typesetting will not convert correctly"
msgstr ""

#: ../../conversion.rst:733
# 70a4d6c8ef9b457083960e59c5819a0a
msgid "To re-iterate **PDF is a really, really bad** format to use as input. If you absolutely must use PDF, then be prepared for an output ranging anywhere from decent to unusable, depending on the input PDF."
msgstr ""

#: ../../conversion.rst:737
# af02ebba64344f2ba32524d38910fa9f
msgid "Comic Book Collections"
msgstr ""

#: ../../conversion.rst:739
# 26c22319f9444feb94450dbbe42de52d
msgid "A comic book collection is a .cbc file. A .cbc file is a zip file that contains other CBZ/CBR files. In addition the .cbc file must contain a simple text file called comics.txt, encoded in UTF-8. The comics.txt file must contain a list of the comics files inside the .cbc file, in the form filename:title, as shown below::"
msgstr ""

#: ../../conversion.rst:747
# bc4c385d724545ad9509f820c6765575
msgid "The .cbc file will then contain::"
msgstr ""

#: ../../conversion.rst:754
# 41bf4634789145cdb1ea03a8fd278640
msgid "|app| will automatically convert this .cbc file into a ebook with a Table of Contents pointing to each entry in comics.txt."
msgstr ""

#: ../../conversion.rst:758
# af06a0f9f75c4f4c9a79778b07095e67
msgid "EPUB advanced formatting demo"
msgstr ""

#: ../../conversion.rst:760
# 1fb89a5a638c4eea845ef35cff7233ee
msgid "Various advanced formatting for EPUB files is demonstrated in this `demo file <http://calibre-ebook.com/downloads/demos/demo.epub>`_. The file was created from hand coded HTML using calibre and is meant to be used as a template for your own EPUB creation efforts."
msgstr ""

#: ../../conversion.rst:763
# b04f41f68edd43c1b5f61e2325f5b6aa
msgid "The source HTML it was created from is available `demo.zip <http://calibre-ebook.com/downloads/demos/demo.zip>`_. The settings used to create the EPUB from the ZIP file are::"
msgstr ""

#: ../../conversion.rst:768
# 69dc82a8761b4031b9fd1b4ccbef873a
msgid "Note that because this file explores the potential of EPUB, most of the advanced formatting is not going to work on readers less capable than |app|'s built-in EPUB viewer."
msgstr ""

#: ../../conversion.rst:772
# 74d7c56357434b7ea1a7db55c8e0b723
msgid "Convert ODT documents"
msgstr ""

#: ../../conversion.rst:774
# 73c30a2b7ba5420c8fabe992368f56ad
msgid "|app| can directly convert ODT (OpenDocument Text) files. You should use styles to format your document and minimize the use of direct formatting. When inserting images into your document you need to anchor them to the paragraph, images anchored to a page will all end up in the front of the conversion."
msgstr ""

#: ../../conversion.rst:777
# c19be92679144877af514535e09e5c1b
msgid "To enable automatic detection of chapters, you need to mark them with the build-in styles called 'Heading 1', 'Heading 2', ..., 'Heading 6' ('Heading 1' equates to the HTML tag <h1>, 'Heading 2' to <h2> etc). When you convert in |app| you can enter which style you used into the 'Detect chapters at' box. Example:"
msgstr ""

#: ../../conversion.rst:779
# 945a3fa96bed4b389146006db06a1814
msgid "If you mark Chapters with style 'Heading 2', you have to set the 'Detect chapters at' box to ``//h:h2``"
msgstr ""

#: ../../conversion.rst:780
# bbe545595a9c4cb9b62c3a3068f4456b
msgid "For a nested TOC with Sections marked with 'Heading 2' and the Chapters marked with 'Heading 3' you need to enter ``//h:h2|//h:h3``. On the Convert - TOC page set the 'Level 1 TOC' box to ``//h:h2`` and the 'Level 2 TOC' box to ``//h:h3``."
msgstr ""

#: ../../conversion.rst:782
# 8ddc13a521ac4231a8317d6c22f518d6
msgid "Well-known document properties (Title, Keywords, Description, Creator) are recognized and |app| will use the first image (not to small, and with good aspect-ratio) as the cover image."
msgstr ""

#: ../../conversion.rst:784
# c99135b7b73e4415b0efcbfb47b0496d
msgid "There is also an advanced property conversion mode, which is activated by setting the custom property ``opf.metadata`` ('Yes or No' type) to Yes in your ODT document (File->Properties->Custom Properties). If this property is detected by |app|, the following custom properties are recognized (``opf.authors`` overrides document creator)::"
msgstr ""

#: ../../conversion.rst:797
# a524d1eb230644c68ee14c9de7ceb513
msgid "In addition to this, you can specify the picture to use as the cover by naming it ``opf.cover`` (right click, Picture->Options->Name) in the ODT. If no picture with this name is found, the 'smart' method is used.  As the cover detection might result in double covers in certain output formats, the process will remove the paragraph (only if the only content is the cover!) from the document. But this works only with the named picture!"
msgstr ""

#: ../../conversion.rst:804
# 982c8a1100f04973bf51fcc4de31982b
msgid "To disable cover detection you can set the custom property ``opf.nocover`` ('Yes or No' type) to Yes in advanced mode."
msgstr ""

#: ../../conversion.rst:807
# dd642019768046f3856f1fb6c2171132
msgid "Converting to PDF"
msgstr ""

#: ../../conversion.rst:809
# 148d508b69ec45919013535337b0d1e5
msgid "The first, most important, setting to decide on when converting to PDF is the page size. By default, |app| uses a page size defined by the current :guilabel:`Output profile`. So if your output profile is set to Kindle, |app| will create a PDF with page size suitable for viewing on the small kindle screen. However, if you view this PDF file on a computer screen, then it will appear to have too large fonts. To create \"normal\" sized PDFs, use the :guilabel:`Override page size` option under :guilabel:`PDF Output` in the conversion dialog."
msgstr ""

#: ../../conversion.rst:818
# 7fcaf6bcf79b47779710c73a8cc3e0c8
msgid "Headers and Footers"
msgstr ""

#: ../../conversion.rst:819
# 1ad3f2b95f3d4e8483346b8a4a0fa514
msgid "You can insert arbitrary headers and footers on each page of the PDF by specifying header and footer templates. Templates are just snippets of HTML code that get rendered in the header and footer locations. For example, to display page numbers centered at the bottom of every page, in green, use the following footer template::"
msgstr ""

#: ../../conversion.rst:827
# 19fa9c78e51d4c64bf047836ca5682dd
msgid "|app| will automatically replace _PAGENUM_ with the current page number. You can even put different content on even and odd pages, for example the following header template will show the title on odd pages and the author on even pages::"
msgstr ""

#: ../../conversion.rst:833
# dbe16aba6e394ebcb8e8693990edbf2d
msgid "|app| will automatically replace _TITLE_ and _AUTHOR_ with the title and author of the document being converted.  You can also display text at the left and right edges and change the font size, as demonstrated with this header template::"
msgstr ""

#: ../../conversion.rst:840
# e45fdebffd494517ae57c797e59d7deb
msgid "This will display the title at the left and the author at the right, in a font size smaller than the main text."
msgstr ""

#: ../../conversion.rst:843
# 8cfc5c0a1aec46688881ecdb0bae2d48
msgid "You can also use the current section in templates, as shown below::"
msgstr ""

#: ../../conversion.rst:847
# 1b54ded9a7af4338a44bdb6fb4d8c35a
msgid "_SECTION_ is replaced by whatever the name of the current section is. These names are taken from the metadata Table of Contents in the document (the PDF Outline). If the document has no table of contents then it will be replaced by empty text. If a single PDF page has multiple sections, the first section on the page will be used."
msgstr ""

#: ../../conversion.rst:853
# 67d31a68d6e24da4bbc59afe09c16277
msgid "You can even use javascript inside the header and footer templates, for example, the following template will cause page numbers to start at 4 instead of 1::"
msgstr ""

#: ../../conversion.rst:859
# b7c98c3b7b674dcab0a13649106c6efa
msgid "When adding headers and footers make sure you set the page top and bottom margins to large enough values, under the Page Setup section of the conversion dialog."
msgstr ""

#: ../../conversion.rst:864
# 7bab0607de31417f97c29bb1068ee847
msgid "Printable Table of Contents"
msgstr ""

#: ../../conversion.rst:866
# 147a5f8d94d24b48815fb780727f37f9
msgid "You can also insert a printable Table of Contents at the end of the PDF that lists the page numbers for every section. This is very useful if you intend to print out the PDF to paper. If you wish to use the PDF on an electronic device, then the PDF Outline provides this functionality and is generated by default."
msgstr ""

#: ../../conversion.rst:871
# 2dc80e562f954c47ab5a73fd0ed072dd
msgid "You can customize the look of the the generated Table of contents by using the Extra CSS conversion setting under the Look & Feel part of the conversion dialog. The default css used is listed below, simply copy it and make whatever changes you like."
msgstr ""

