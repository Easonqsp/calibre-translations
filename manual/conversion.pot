# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.48.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-08 08:53+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../conversion.rst:6
# 0bf1675c7b0c433ca58fde0fdf5dda93
msgid "Ebook Conversion"
msgstr ""

#: ../../conversion.rst:8
# 548ae78784884a0ea7f2dd1b8339eb4b
msgid "|app| has a conversion system that is designed to be very easy to use. Normally, you just add a book to |app|, click convert and |app| will try hard to generate output that is as close as possible to the input. However, |app| accepts a very large number of input formats, not all of which are as suitable as others for conversion to ebooks. In the case of such input formats, or if you just want greater control over the conversion system, |app| has a lot of options to fine tune the conversion process. Note however that |app|'s conversion system is not a substitute for a full blown ebook editor. To edit ebooks, I recommend first converting them to EPUB or AZW3 using |app| and then using the Edit Book feature to get them into perfect shape. You can then use the edited ebook as input for conversion into other formats in |app|."
msgstr ""

#: ../../conversion.rst:20
# 962a2a59f55045fc847641e2e7d2e7a0
msgid "This document will refer mainly to the conversion settings as found in the conversion dialog, pictured below. All these settings are also available via command line interface to conversion, documented at :ref:`ebook-convert`. In |app|, you can obtain help on any individual setting by holding your mouse over it, a tooltip will appear describing the setting."
msgstr ""

#: ../../conversion.rst:0
#: ../../conversion.rst:0
# 0492666eb11c4011a7b858fb8743ac1f
# bb4b7c4fd76b4a54a35d9e885624a820
msgid "Contents"
msgstr ""

#: ../../conversion.rst:38
# 573c4695a73842d0b84c4be93c5790d5
msgid "Introduction"
msgstr ""

#: ../../conversion.rst:44
# ddb2de6182154f46bf73d7c2739d46ec
msgid "The first thing to understand about the conversion system is that it is designed as a pipeline. Schematically, it looks like this:"
msgstr ""

#: ../../conversion.rst:51
# 21b339bec12f4daa86db4b9d0683853b
msgid "The input format is first converted to XHTML by the appropriate *Input Plugin*. This HTML is then *transformed*. In the last step, the processed XHTML is converted to the specified output format by the appropriate *Output Plugin*. The results of the conversion can vary greatly, based on the input format. Some formats convert much better than others. A list of the best source formats for conversion is available :ref:`here <best-source-formats>`."
msgstr ""

#: ../../conversion.rst:58
# f31f799895c54da49ad132313d69f6b7
msgid "The transforms that act on the XHTML output are where all the work happens. There are various transforms, for example, to insert book metadata as a page at the start of the book, to detect chapter headings and automatically create a Table of Contents, to proportionally adjust font sizes, et cetera. It is important to remeber that all the transforms act on the XHTML output by the *Input Plugin*, not on the input file itself. So, for example, if you ask |app| to convert an RTF file to EPUB, it will first be converted to XHTML internally, the various transforms will be applied to the XHTML and then the *Output Plugin* will create the EPUB file, automatically generating all metadata, Table of Contents, et cetera."
msgstr ""

#: ../../conversion.rst:67
# 6730313879304e25a35fbc7d29054f61
msgid "You can see this process in action by using the debug option |dbgi|. Just specify the path to a directory for the debug output. During conversion, |app| will place the XHTML generated by the various stages of the conversion pipeline in different sub-directories. The four sub-directories are:"
msgstr ""

#: ../../conversion.rst:0
# 83d5d2744f6e49619fdc7956062545e5
msgid "Stages of the conversion pipeline"
msgstr ""

#: ../../conversion.rst:75
# b6a91addd38c47b09e1b23e87a8264e0
msgid "Directory"
msgstr ""

#: ../../conversion.rst:75
# 3ad33fe39eda4f5cbdd7533b429af9ac
msgid "Description"
msgstr ""

#: ../../conversion.rst:77
# efc479f8e8e44e37af3a1f83a4570ef0
msgid "input"
msgstr ""

#: ../../conversion.rst:77
# bc2921f82b8e4a7fa9a8417939c43c53
msgid "This contains the HTML output by the Input Plugin. Use this to debug the Input Plugin."
msgstr ""

#: ../../conversion.rst:78
# 664660f6f1f94847b7655b9a5f3f93b0
msgid "parsed"
msgstr ""

#: ../../conversion.rst:78
# cfc93f1c32d548c5b7d0c09ea21c4cf0
msgid "The result of pre-processing and converting to XHTML the output from the Input Plugin. Use to debug structure detection."
msgstr ""

#: ../../conversion.rst:79
# 62974f10f769479994b68330897e8650
msgid "structure"
msgstr ""

#: ../../conversion.rst:79
# 322225e5419b4779bc708a05a033e63b
msgid "Post structure detection, but before CSS flattening and font size conversion. Use to debug font size conversion and CSS transforms."
msgstr ""

#: ../../conversion.rst:80
# ffa25f633da8440dbdfcc8abccf8e9d1
msgid "processed"
msgstr ""

#: ../../conversion.rst:80
# e4e470026d1c4df2bece123992ca7929
msgid "Just before the ebook is passed to the output plugin. Use to debug the Output Plugin."
msgstr ""

#: ../../conversion.rst:83
# ca1c9cf35d244fa8ac3286415971f033
msgid "If you want to edit the input document a little before having |app| convert it, the best thing to do is edit the files in the :file:`input` sub-directory, then zip it up, and use the zip file as the input format for subsequent conversions. To do this use the :guilabel:`Edit meta information` dialog to add the zip file as a format for the book and then, in the top left corner of the conversion dialog, select ZIP as the input format."
msgstr ""

#: ../../conversion.rst:89
# ea329585d2da44d49e66fa90f8e2b531
msgid "This document will deal mainly with the various transforms that operate on the intermediate XHTML and how to control them. At the end are some tips specific to each Input/Output format."
msgstr ""

#: ../../conversion.rst:93
# cd0873e9fdd4495a86be2f233c53df48
msgid "Look & Feel"
msgstr ""

#: ../../conversion.rst:99
# 9bbd42d698404c38982362c1f47871d6
msgid "This group of options controls various aspects of the look and feel of the converted ebook."
msgstr ""

#: ../../conversion.rst:104
# 8921bf9c58644943aae58845eac182d3
msgid "Font size rescaling"
msgstr ""

#: ../../conversion.rst:106
# d982e7e49e2c46f0b24745bb3738ac05
msgid "One of the nicest features of the e-reading experience is the ability to easily adjust font sizes to suit individual needs and lighting conditions. |app| has sophisticated algorithms to ensure that all the books it outputs have a consistent font sizes, no matter what font sizes are specified in the input document."
msgstr ""

#: ../../conversion.rst:111
# 04b4fe92aee44af2a898c56aae089209
msgid "The base font size of a document is the most common font size in that document, i.e., the size of the bulk of text in that document. When you specify a :guilabel:`Base font size`, |app| automatically rescales all font sizes in the document proportionately, so that the most common font size becomes the specified base font size and other font sizes are rescaled appropriately. By choosing a larger base font size, you can make the fonts in the document larger and vice versa. When you set the base font size, for best results, you should also set the font size key."
msgstr ""

#: ../../conversion.rst:119
# ebf3ecfdc83d4622998082d3f8c170f7
msgid "Normally, |app| will automatically choose a base font size appropriate to the Output Profile you have chosen (see :ref:`page-setup`). However, you can override this here in case the default is not suitable for you."
msgstr ""

#: ../../conversion.rst:123
# 72381dd926f242e9b5e286fbeba3ef7b
msgid "The :guilabel:`Font size key` option lets you control how non-base font sizes are rescaled. The font rescaling algorithm works using a font size key, which is simply a comma-separated list of font sizes. The font size key tells |app| how many \"steps\" bigger or smaller a given font size should be compared to the base font size. The idea is that there should be a limited number of font sizes in a document. For example, one size for the body text, a couple of sizes for different levels of headings and a couple of sizes for super/sub scripts and footnotes. The font size key allows |app| to compartmentalize the font sizes in the input documents into separate \"bins\" corresponding to the different logical font sizes."
msgstr ""

#: ../../conversion.rst:132
# bdf77244469e4b1997d2724885265447
msgid "Let's illustrate with an example. Suppose the source document we are converting was produced by someone with excellent eyesight and has a base font size of 8pt. That means the bulk of the text in the document is sized at 8pts, while headings are somewhat larger (say 10 and 12pt) and footnotes somewhat smaller at 6pt. Now if we use the following settings::"
msgstr ""

#: ../../conversion.rst:141
# 73e4e5bc385b4db9bd6ee488f5f98b9b
msgid "The output document will have a base font size of 12pt, headings of 14 and 16pt and footnotes of 8pt. Now suppose we want to make the largest heading size stand out more and make the footnotes a little larger as well. To achieve this, the font key should be changed to::"
msgstr ""

#: ../../conversion.rst:147
# 4e22cf85bcb04aebb3e2473cdd5357d4
msgid "The largest headings will now become 18pt, while the footnotes will become 9pt. You can play with these settings to try and figure out what would be optimum for you by using the font rescaling wizard, which can be accessed by clicking the little button next to the :guilabel:`Font size key` setting."
msgstr ""

#: ../../conversion.rst:152
# 920122f80dc74990a5bba3bbb906d580
msgid "All the font size rescaling in the conversion can also be disabled here, if you would like to preserve the font sizes in the input document."
msgstr ""

#: ../../conversion.rst:155
# da25afc796d94c8182adad4b6d642bac
msgid "A related setting is :guilabel:`Line height`. Line height controls the vertical height of lines. By default, (a line height of 0), no manipulation of line heights is performed. If you specify a non-default value, line heights will be set in all locations that don't specify their own line heights. However, this is something of a blunt weapon and should be used sparingly. If you want to adjust the line heights for some section of the input, it's better to use the :ref:`extra-css`."
msgstr ""

#: ../../conversion.rst:163
# a6e403eaa5d542aa8df70b2ee58819bc
msgid "Paragraph spacing"
msgstr ""

#: ../../conversion.rst:165
# 45e7b58a3a7746c781ba115cbc2560cb
msgid "Normally, paragraphs in XHTML are rendered with a blank line between them and no leading text indent. |app| has a couple of options to control this. :guilabel:`Remove spacing between paragraphs` forcefully ensure that all paragraphs have no inter paragraph spacing. It also sets the text indent to 1.5em (can be changed) to mark the start of every paragraph. :guilabel:`Insert blank line` does the opposite, guaranteeing that there is exactly one blank line between each pair of paragraphs. Both these options are very comprehensive, removing spacing, or inserting it for *all* paragraphs (technically <p> and <div> tags). This is so that you can just set the option and be sure that it performs as advertised, irrespective of how messy the input file is. The one exception is when the input file uses hard line breaks to implement inter-paragraph spacing."
msgstr ""

#: ../../conversion.rst:176
# 6d111eba573142d0bdb7cc4dff2cf2cb
msgid "If you want to remove the spacing between all paragraphs, except a select few, don't use these options. Instead add the following CSS code to :ref:`extra-css`::"
msgstr ""

#: ../../conversion.rst:182
# d169ab509204452aad7add964ca13a28
msgid "Then, in your source document, mark the paragraphs that need spacing with `class=\"spacious\"`. If your input document is not in HTML, use the Debug option, described in the Introduction to get HTML (use the :file:`input` sub-directory)."
msgstr ""

#: ../../conversion.rst:190
# 890bb0a278de4df0a27f00d46b84eb71
msgid "Extra CSS"
msgstr ""

#: ../../conversion.rst:192
# 7274bb7b9807474b840f10281023c907
msgid "This option allows you to specify arbitrary CSS that will be applied to all HTML files in the input. This CSS is applied with very high priority and so should override most CSS present in the **input document** itself. You can use this setting to fine tune the presentation/layout of your document. For example, if you want all paragraphs of class `endnote` to be right aligned, just add::"
msgstr ""

#: ../../conversion.rst:200
# 809cbfd5757d46dfbce9468b0888740c
msgid "or if you want to change the indentation of all paragraphs::"
msgstr ""

#: ../../conversion.rst:204
# 5f7a231263484ba7ac599399f1ffac8e
msgid ":guilabel:`Extra CSS` is a very powerful option, but you do need an understanding of how CSS works to use it to its full potential. You can use the debug pipeline option described above to see what CSS is present in your input document."
msgstr ""

#: ../../conversion.rst:209
#: ../../conversion.rst:414
# 6515481756a24dee91b87a4264c08f89
# 68e5c1c19a90450c869f33d1ffefe572
msgid "Miscellaneous"
msgstr ""

#: ../../conversion.rst:211
#: ../../conversion.rst:416
# 456f17deaffb48d483bea987f4104b21
# 03dbda7f2da046239cb083de30f0c6de
msgid "There are a few more options in this section."
msgstr ""

#: ../../conversion.rst:217
# 758b84eaa22449909d8646272b93de5b
msgid ":guilabel:`No text justification`"
msgstr ""

#: ../../conversion.rst:214
# db1aa15b61ce4459811299e86d11f03f
msgid "Normally, if the output format supports it, |app| will force the output ebook to have *justified* text (i.e., a smooth right margin). This option will turn off this behavior, in which case whatever justification is specified in the input document will be used instead."
msgstr ""

#: ../../conversion.rst:224
# cbdceb093349448da7d8b5fdc08d0d1c
msgid ":guilabel:`Linearize tables`"
msgstr ""

#: ../../conversion.rst:220
# afb5b97bc8754c5a8390e49e54f748f6
msgid "Some badly designed documents use tables to control the layout of text on the page. When converted these documents often have text that runs off the page and other artifacts. This option will extract the content from the tables and present it in a linear fashion. Note that this option linearizes *all* tables, so only use it if you are sure the input document does not use tables for legitimate purposes, like presenting tabular information."
msgstr ""

#: ../../conversion.rst:233
# 6373ccc3dff84ee6985a0be9a4124ed6
msgid ":guilabel:`Transliterate unicode characters`"
msgstr ""

#: ../../conversion.rst:227
# 1ade8f1c711645e18139b6b7b82ec5d5
msgid "Transliterate unicode characters to an ASCII representation. Use with care because this will replace unicode characters with ASCII. For instance it will replace \"Михаил Горбачёв\" with \"Mikhail Gorbachiov\". Also, note that in cases where there are multiple representations of a character (characters shared by Chinese and Japanese for instance) the representation used by the largest number of people will be used (Chinese in the previous example). This option is mainly useful if you are going to view the ebook on a device that does not have support for unicode."
msgstr ""

#: ../../conversion.rst:242
# 02730e799652423e80dc05fbf3f089a5
msgid ":guilabel:`Input character encoding`"
msgstr ""

#: ../../conversion.rst:236
# 200b5d1fc6384513aef8dfab6eadbf12
msgid "Older documents sometimes don't specify their character encoding. When converted, this can result in non-English characters or special characters like smart quotes being corrupted. |app| tries to auto-detect the character encoding of the source document, but it does not' always succeed. You can force it to assume a particular character encoding by using this setting. `cp1252` is a common encoding for documents produced using windows software. You should also read :ref:`char-encoding-faq` for more on encoding issues."
msgstr ""

#: ../../conversion.rst:247
# 2967b74bdc8143889cf383ab8cb642cc
msgid "Page Setup"
msgstr ""

#: ../../conversion.rst:249
# 298630c7f0f6440383e325a626c8f9b7
msgid "The Page Setup options are for controlling screen layout, like margins and screen sizes. There are options to setup page margins, which will be used by the Output Plugin, if the selected Output Format supports page margins. In addition, you should choose an Input profile and an Output profile. Both sets of profiles basically deal with how to interpret measurements in the input/output documents, screen sizes and default font rescaling keys."
msgstr ""

#: ../../conversion.rst:255
# f829282a036d4dafbb72415bf598d023
msgid "If you know that the file you are converting was intended to be used on a particular device/software platform, choose the corresponding input profile, otherwise just choose the default input profile. If you know the files you are producing are meant for a particular device type, choose the corresponding Output profile. In particular, for MOBI Output files, you should choose the Kindle, for LIT the Microsoft Reader and for EPUB the Sony Reader. In the case of EPUB, the Sony Reader profile will result in EPUB files that will work everywhere. However, it has some side effects, like inserting artificial section breaks to keep internal components below the size threshold, needed for SONY devices. In particular for the iPhone/Android phones, choose the SONY output profile. If you know your EPUB files will not be read on a SONY or similar device, use the default output profile. If you are producing MOBI files that are not intended for the Kindle, choose the Mobipocket books output profile."
msgstr ""

#: ../../conversion.rst:259
# 2b10eace519647658155c3e726fe7ae7
msgid "The Output profile also controls the screen size. This will cause, for example, images to be auto-resized to be fit to the screen in some output formats. So choose a profile of a device that has a screen size similar to your device."
msgstr ""

#: ../../conversion.rst:264
# b024a9feeab84d158dc2837541ff2ea7
msgid "Heuristic Processing"
msgstr ""

#: ../../conversion.rst:266
# bfa83ade38f6405584e9064194a3602c
msgid "Heuristic Processing provides a variety of functions which can be used to try and detect and correct common problems in poorly formatted input documents.  Use these functions if your input document suffers from poor formatting. Because these functions rely on common patterns, be aware that in some cases an option may lead to worse results, so use with care.  As an example, several of these options will remove all non-breaking-space entities, or may include false positive matches relating to the function."
msgstr ""

#: ../../conversion.rst:274
# cf0dcb1fef88467988c63ac8b37b452b
msgid ":guilabel:`Enable heuristic processing`"
msgstr ""

#: ../../conversion.rst:273
# 94ca86d266bb4fe88815c6912176c7b7
msgid "This option activates |app|'s Heuristic Processing stage of the conversion pipeline. This must be enabled in order for various sub-functions to be applied"
msgstr ""

#: ../../conversion.rst:280
# 61225a91b91347ff91f6ccfdd36a8f68
msgid ":guilabel:`Unwrap lines`"
msgstr ""

#: ../../conversion.rst:277
# 4b4eba4b3e98465fbf1e3dcb8a220bc5
msgid "Enabling this option will cause |app| to attempt to detect and correct hard line breaks that exist within a document using punctuation clues and line length. |app| will first attempt to detect whether hard line breaks exist, if they do not appear to exist |app| will not attempt to unwrap lines. The line-unwrap factor can be reduced if you want to 'force' |app| to unwrap lines."
msgstr ""

#: ../../conversion.rst:286
# 0863170313a244a69148379f009eb08a
msgid ":guilabel:`Line-unwrap factor`"
msgstr ""

#: ../../conversion.rst:283
# 129e51219b674d4e80ed8773f1a58082
msgid "This option controls the algorithm |app| uses to remove hard line breaks. For example, if the value of this option is 0.4, that means calibre will remove hard line breaks from the end of lines whose lengths are less than the length of 40% of all lines in the document.  If your document only has a few line breaks which need correction, then this value should be reduced to somewhere between 0.1 and 0.2."
msgstr ""

#: ../../conversion.rst:301
# 554b2a9b43e143d0aeb677cd4513a3e8
msgid ":guilabel:`Detect and markup unformatted chapter headings and sub headings`"
msgstr ""

#: ../../conversion.rst:289
# 9f46d0abb2ca4223880b903e2a36a6ce
msgid "If your document does not have chapter headings and titles formatted differently from the rest of the text, |app| can use this option to attempt detection them and surround them with heading tags. <h2> tags are used for chapter headings; <h3> tags are used for any titles that are detected."
msgstr ""

#: ../../conversion.rst:293
# 206c828c57b148f29133aac360f4659e
msgid "This function will not create a TOC, but in many cases it will cause |app|'s default chapter detection settings to correctly detect chapters and build a TOC.  Adjust the XPath under Structure Detection if a TOC is not automatically created.  If there are no other headings used in the document then setting \"//h:h2\" under Structure Detection would be the easiest way to create a TOC for the document."
msgstr ""

#: ../../conversion.rst:298
# 8964277fd5a34896bc1533270ca7f60e
msgid "The inserted headings are not formatted, to apply formatting use the :guilabel:`Extra CSS` option under the Look and Feel conversion settings.  For example, to center heading tags, use the following::"
msgstr ""

#: ../../conversion.rst:306
# 89f7b50fc35b4043a5bb41d745f8f8b9
msgid ":guilabel:`Renumber sequences of <h1> or <h2> tags`"
msgstr ""

#: ../../conversion.rst:304
# 667367ea1bf040fabec063862deac529
msgid "Some publishers format chapter headings using multiple <h1> or <h2> tags sequentially. |app|'s default conversion settings will cause such titles to be split into two pieces.  This option will re-number the heading tags to prevent splitting."
msgstr ""

#: ../../conversion.rst:313
# f113f22c11c0485f92698d3aa498effa
msgid ":guilabel:`Delete blank lines between paragraphs`"
msgstr ""

#: ../../conversion.rst:309
# 29223cf1157145d08e9fd55f3ed51d92
msgid "This option will cause |app| to analyze blank lines included within the document.  If every paragraph is interleaved with a blank line, then |app| will remove all those blank paragraphs.  Sequences of multiple blank lines will be considered scene breaks and retained as a single paragraph.  This option differs from the 'Remove Paragraph Spacing' option under 'Look and Feel' in that it actually modifies the HTML content, while the other option modifies the document styles.  This option can also remove paragraphs which were inserted using |app|'s 'Insert blank line' option."
msgstr ""

#: ../../conversion.rst:318
# 8c939587299c4646bd87e5ca78604f22
msgid ":guilabel:`Ensure scene breaks are consistently formatted`"
msgstr ""

#: ../../conversion.rst:316
# 6f7fa8a65ed74d57815e0ca66c4d5984
msgid "With this option |app| will attempt to detect common scene-break markers and ensure that they are center aligned. 'Soft' scene break markers, i.e. scene breaks only defined by extra white space, are styled to ensure that they will not be displayed in conjunction with page breaks."
msgstr ""

#: ../../conversion.rst:334
# b0c856182b474f3ea37e4e229977e1cb
msgid ":guilabel:`Replace scene breaks`"
msgstr ""

#: ../../conversion.rst:321
# d7e460e777434c0b8aa8688441268d92
msgid "If this option is configured then |app| will replace scene break markers it finds with the replacement text specified by the user.  Please note that some ornamental characters may not be supported across all reading devices."
msgstr ""

#: ../../conversion.rst:324
# 69b5cfb6b7b24da0b2c9000954f9ba5e
msgid "In general you should avoid using html tags, |app| will discard any tags and use pre-defined markup.  <hr /> tags, i.e. horizontal rules, and <img> tags are exceptions.  Horizontal rules can optionally be specified with styles, if you choose to add your own style be sure to include the 'width' setting, otherwise the style information will be discarded.  Image tags can used, but |app| does not provide the ability to add the image during conversion, this must be done after the fact using the 'Edit Book' feature."
msgstr ""

#: ../../conversion.rst:331
# 674ef4f692894d36abed760df0187b3e
msgid "Example image tag (place the image within an 'Images' folder inside the epub after conversion):"
msgstr ""

#: ../../conversion.rst:331
# 27fcb283bd1e4a4ea5f46c020d5e5004
msgid "<img style=\"width:10%\" src=\"../Images/scenebreak.png\" />"
msgstr ""

#: ../../conversion.rst:334
# 3054ba48e32942388ffe3f23f5b9d10a
msgid "Example horizontal rule with styles:"
msgstr ""

#: ../../conversion.rst:334
# f3f0b74015bc45f7a600e3f9900baba3
msgid "<hr style=\"width:20%;padding-top: 1px;border-top: 2px ridge black;border-bottom: 2px groove black;\"/>"
msgstr ""

#: ../../conversion.rst:342
# 0613cf1e7ea34c31af5852c3676cdc81
msgid ":guilabel:`Remove unnecessary hyphens`"
msgstr ""

#: ../../conversion.rst:337
# 4c28c0b9a9ac4953b0d3312fd8fa5746
msgid "|app| will analyze all hyphenated content in the document when this option is enabled.  The document itself is used as a dictionary for analysis.  This allows |app| to accurately remove hyphens for any words in the document in any language, along with made-up and obscure scientific words.  The primary drawback is words appearing only a single time in the document will not be changed.  Analysis happens in two passes, the first pass analyzes line endings.  Lines are only unwrapped if the word exists with or without a hyphen in the document.  The second pass analyzes all hyphenated words throughout the document, hyphens are removed if the word exists elsewhere in the document without a match."
msgstr ""

#: ../../conversion.rst:346
# 97e7b640d15d4d599e43a29000cca6e9
msgid ":guilabel:`Italicize common words and patterns`"
msgstr ""

#: ../../conversion.rst:345
# 265232756bcc4d0094c6c6667926ae76
msgid "When enabled, |app| will look for common words and patterns that denote italics and italicize them.  Examples are common text conventions such as ~word~ or phrases that should generally be italicized, e.g. latin phrases like 'etc.' or 'et cetera'."
msgstr ""

#: ../../conversion.rst:350
# c078dc49b01d46e5ac16c50c0ec7dae7
msgid ":guilabel:`Replace entity indents with CSS indents`"
msgstr ""

#: ../../conversion.rst:349
# 0027ec8f7d304a41b0c8746b5b436d48
msgid "Some documents use a convention of defining text indents using non-breaking space entities.  When this option is enabled |app| will attempt to detect this sort of formatting and convert them to a 3% text indent using css."
msgstr ""

#: ../../conversion.rst:355
# a7a15b0152604c5e84f8f77a14cbf615
msgid "Search & Replace"
msgstr ""

#: ../../conversion.rst:357
# c4ed8116fa6a4cd89e2b5d1920f5c821
msgid "These options are useful primarily for conversion of PDF documents or OCR conversions, though they can also be used to fix many document specific problems. As an example, some conversions can leaves behind page headers and footers in the text. These options use regular expressions to try and detect headers, footers, or other arbitrary text and remove or replace them. Remember that they operate on the intermediate XHTML produced by the conversion pipeline. There is a wizard to help you customize the regular expressions for your document.  Click the magic wand beside the expression box, and click the 'Test' button after composing your search expression.  Successful matches will be highlighted in Yellow."
msgstr ""

#: ../../conversion.rst:365
# 55886d6329a142328d7c3e3bfb34fc92
msgid "The search works by using a python regular expression. All matched text is simply removed from the document or replaced using the replacement pattern. The replacement pattern is optional, if left blank then text matching the search pattern will be deleted from the document.  You can learn more about regular expressions and their syntax at :ref:`regexptutorial`."
msgstr ""

#: ../../conversion.rst:373
# 4d60329f6a724bd69e4411c5811f5ce1
msgid "Structure Detection"
msgstr ""

#: ../../conversion.rst:375
# 314e573a784e456eaefbcd20cbbb62ca
msgid "Structure detection involves |app| trying its best to detect structural elements in the input document, when they are not properly specified. For example, chapters, page breaks, headers, footers, etc. As you can imagine, this process varies widely from book to book. Fortunately, |app| has very powerful options to control this. With power comes complexity, but if once you take the time to learn the complexity, you will find it well worth the effort."
msgstr ""

#: ../../conversion.rst:378
# a6a012c25d01441e995f91325c8ec50d
msgid "Chapters and page breaks"
msgstr ""

#: ../../conversion.rst:380
# 67fa5efe501243e795f00f374277f146
msgid "|app| has two sets of options for :guilabel:`chapter detection` and :guilabel:`inserting page breaks`. This can sometimes be slightly confusing, as by default, |app| will insert page breaks before detected chapters as well as the locations detected by the page breaks option. The reason for this is that there are often location where page breaks should be inserted that are not chapter boundaries. Also, detected chapters can be optionally inserted into the auto generated Table of Contents."
msgstr ""

#: ../../conversion.rst:385
# 4f865989e52045a7b09848a1084b537a
msgid "|app| uses *XPath*, a powerful language to allow the user to specify chapter boundaries/page breaks. XPath can seem a little daunting to use at first, fortunately, there is a :ref:`XPath tutorial <xpath-tutorial>` in the User Manual. Remember that Structure Detection operates on the intermediate XHTML produced by the conversion pipeline. Use the debug option described in the :ref:`conversion-introduction` to figure out the appropriate settings for your book. There is also a button for a XPath wizard to help with the generation of simple XPath expressions."
msgstr ""

#: ../../conversion.rst:391
# 528459c4590e46c2ae0e05435eac33b5
msgid "By default, |app| uses the following expression for chapter detection::"
msgstr ""

#: ../../conversion.rst:395
# c88a5c9b651545d8a73dd2d451b3ffff
msgid "This expression is rather complex, because it tries to handle a number of common cases simulataneously. What it means is that |app| will assume chapters start at either `<h1>` or `<h2>` tags that have any of the words `(chapter, book, section or part)` in them or that have the `class=\"chapter\"` attribute."
msgstr ""

#: ../../conversion.rst:399
# 111d6636323b4292b2b8655a47287a48
msgid "A related option is :guilabel:`Chapter mark`, which allows you to control what |app| does when it detects a chapter. By default, it will insert a page break before the chapter. You can have it insert a ruled line instead of, or in addition to the page break. You can also have it do nothing."
msgstr ""

#: ../../conversion.rst:403
# 6d9cfb762ef244e79b9a3106cd312f7b
msgid "The default setting for detecting page breaks is::"
msgstr ""

#: ../../conversion.rst:407
# b00a7900261546cd87137bbab46e4f44
msgid "which means that |app| will insert page breaks before every `<h1>` and `<h2>` tag by default."
msgstr ""

#: ../../conversion.rst:411
# 2d3da268efed4585a96620035dfa9eff
msgid "The default expressions may change depending on the input format you are converting."
msgstr ""

#: ../../conversion.rst:422
# a1a2f54f10f34ee1ab092b230c9db3b5
msgid ":guilabel:`Insert metadata as page at start of book`"
msgstr ""

#: ../../conversion.rst:419
# ab1741fd7ef041c38b65a67dcd038a49
msgid "One of the great things about |app| is that it allows you to maintain very complete metadata about all of your books, for example, a rating, tags, comments, etc. This option will create a single page with all this metadata and insert it into the converted ebook, typically just after the cover. Think of it as a way to create your own customised book jacket."
msgstr ""

#: ../../conversion.rst:429
# 77eab332f5ea47ceb83152bc59bb62ae
msgid ":guilabel:`Remove first image`"
msgstr ""

#: ../../conversion.rst:425
# ab20831fb17b45b0966cde28bb01ac14
msgid "Sometimes, the source document you are converting includes the cover as part of the book, instead of as a separate cover. If you also specify a cover in |app|, then the converted book will have two covers. This option will simply remove the first image from the source document, thereby ensuring that the converted book has only one cover, the one specified in |app|."
msgstr ""

#: ../../conversion.rst:432
# ae71686036ac43fc97e83357a0d95c31
msgid "Table of Contents"
msgstr ""

#: ../../conversion.rst:434
# 0d4211f14cd44c549b653a4d8b99538b
msgid "When the input document has a Table of Contents in its metadata, |app| will just use that. However, a number of older formats either do not support a metadata based Table of Contents, or individual documents do not have one. In these cases, the options in this section can help you automatically generate a Table of Contents in the converted ebook, based on the actual content in the input document."
msgstr ""

#: ../../conversion.rst:439
# e6bb88b742524a75a7d21c58fca1f98a
msgid "Using these options can be a little challenging to get exactly right. If you prefer creating/editing the Table of Contents by hand, convert to the EPUB or AZW3 formats and select the checkbox at the bottom of the Table of Contents section of the conversion dialog that says :guilabel:`Manually fine-tune the Table of Contents after conversion`. This will launch the ToC Editor tool after the conversion. It allows you to create entries in the Table of Contents by simply clicking the place in the book where you want the entry to point. You can also use the ToC Editor by itself, without doing a conversion. Go to :guilabel:`Preferences->Toolbars` and add the ToC Editor to the main toolbar. Then just select the book you want to edit and click the ToC Editor button."
msgstr ""

#: ../../conversion.rst:451
# 79b74778e51b4d489c3233d716f72165
msgid "The first option is :guilabel:`Force use of auto-generated Table of Contents`. By checking this option you can have |app| override any Table of Contents found in the metadata of the input document with the auto generated one."
msgstr ""

#: ../../conversion.rst:455
# d3731e71357f4b4c8a2823d5b82d0a20
msgid "The default way that the creation of the auto generated Table of Contents works is that, |app| will first try to add any detected chapters to the generated table of contents. You can learn how to customize the detection of chapters in the :ref:`structure-detection` section above. If you do not want to include detected chapters in the generated table of contents, check the :guilabel:`Do not add detected chapters` option."
msgstr ""

#: ../../conversion.rst:460
# d9bb405bdabf41ac9db05aaf5882b7b9
msgid "If less than the :guilabel:`Chapter threshold` number of chapters were detected, |app| will then add any hyperlinks it finds in the input document to the Table of Contents. This often works well many input documents include a hyperlinked Table of Contents right at the start. The :guilabel:`Number of links` option can be used to control this behavior. If set to zero, no links are added. If set to a number greater than zero, at most that number of links is added."
msgstr ""

#: ../../conversion.rst:466
# 386f93c99d5a42b18765e94c546fb61e
msgid "|app| will automatically filter duplicates from the generated Table of Contents. However, if there are some additional undesirable entries, you can filter them using the :guilabel:`TOC Filter` option. This is a regular expression that will match the title of entries in the generated table of contents. Whenever a match is found, it will be removed. For example, to remove all entries titles \"Next\" or \"Previous\" use::"
msgstr ""

#: ../../conversion.rst:473
# 9853e6de73e140429c099e7cee06c134
msgid "The :guilabel:`Level 1,2,3 TOC` options allow you to create a sophisticated multi-level Table of Contents. They are XPath expressions that match tags in the intermediate XHTML produced by the conversion pipeline. See the :ref:`conversion-introduction` for how to get access to this XHTML. Also read the :ref:`xpath-tutorial`, to learn how to construct XPath expressions. Next to each option is a button that launches a wizard to help with the creation of basic XPath expressions. The following simple example illustrates how to use these options."
msgstr ""

#: ../../conversion.rst:479
# 8ab756b878f14117b224ad83c8f10dc0
msgid "Suppose you have an input document that results in XHTML that look like this:"
msgstr ""

#: ../../conversion.rst:501
# c625f1c8c0d34f0989f36cf3b91ac028
msgid "Then, we set the options as::"
msgstr ""

#: ../../conversion.rst:506
# 9eca88e9a31347bc927af89e755a9e3a
msgid "This will result in an automatically generated two level Table of Contents that looks like::"
msgstr ""

#: ../../conversion.rst:517
# 382355275e9d4a6fb5300926f7fddcd0
msgid "Not all output formats support a multi level Table of Contents. You should first try with EPUB Output. If that works, then try your format of choice."
msgstr ""

#: ../../conversion.rst:521
# a6da3839bff841cb98f76c899e1debef
msgid "Using images as chapter titles when converting HTML input documents"
msgstr ""

#: ../../conversion.rst:523
# d782b2dda29a4242875d48fb4f40cdf5
msgid "Suppose you want to use an image as your chapter title, but still want |app| to be able to automatically generate a Table of Contents for you from the chapter titles. Use the following HTML markup to achieve this"
msgstr ""

#: ../../conversion.rst:537
# 515f55cc53c7484a8eba349bbb664a28
msgid "Set the :guilabel:`Level 1 TOC` setting to ``//h:h2``. Then, for chapter two, |app| will take the title from the value of the ``title`` attribute on the ``<h2>`` tag, since the tag has no text."
msgstr ""

#: ../../conversion.rst:540
# c72a31ec462d48e39ad642d9e0dfc975
msgid "Using tag attributes to supply the text for entries in the Table of Contents"
msgstr ""

#: ../../conversion.rst:542
# 81ef088d8d684e6eb90aa114c325c2a8
msgid "If you have particularly long chapter titles and want shortened versions in the Table of Contents, you can use the title attribute to achieve this, for example:"
msgstr ""

#: ../../conversion.rst:557
# 9bf1f3d3549047da99d8e61fccdd782b
msgid "Set the :guilabel:`Level 1 TOC` setting to ``//h:h2/@title``. Then |app| will take the title from the value of the ``title`` attribute on the ``<h2>`` tags, instead of using the text inside the tag. Note the trailing ``/@title`` on the XPath expression, you can use this form to tell |app| to get the text from any attribute you like."
msgstr ""

#: ../../conversion.rst:564
# 8032c50e88e04535933b4d4676b8a73c
msgid "How options are set/saved for Conversion"
msgstr ""

#: ../../conversion.rst:566
# 18cfba70fa14487abd47d3217a1fbf81
msgid "There are two places where conversion options can be set in |app|. The first is in Preferences->Conversion. These settings are the defaults for the conversion options. Whenever you try to convert a new book, the settings set here will be used by default."
msgstr ""

#: ../../conversion.rst:571
# 8fe64c0672a74089bf2073c3ff84d080
msgid "You can also change settings in the conversion dialog for each book conversion. When you convert a book, |app| remembers the settings you used for that book, so that if you convert it again, the saved settings for the individual book will take precedence over the defaults set in Preferences. You can restore the individual settings to defaults by using the Restore to defaults button in the individual book conversion dialog. You can remove the saved settings for a group of books by selecting all the books and then clicking the edit metadata button to bring up the bulk metadata edit dialog, near the bottom of the dialog is an option to remove stored conversion settings."
msgstr ""

#: ../../conversion.rst:581
# 172cef28dac64ead8b1e8885824f6db0
msgid "When you Bulk Convert a set of books, settings are taken in the following order (last one wins):"
msgstr ""

#: ../../conversion.rst:583
# 664c268c05d8413db0a0eea1690862e9
msgid "From the defaults set in Preferences->Conversion"
msgstr ""

#: ../../conversion.rst:585
# de61832e72a54842a19f6573ae157177
msgid "From the saved conversion settings for each book being converted (if any). This can be turned off by the option in the top left corner of the Bulk Conversion dialog."
msgstr ""

#: ../../conversion.rst:589
# af5ee5ea2a194e5cace2fdc492db95df
msgid "From the settings set in the Bulk conversion dialog"
msgstr ""

#: ../../conversion.rst:591
# 79cfd80380084ce7934bbeb2d178d8f2
msgid "Note that the final settings for each book in a Bulk Conversion will be saved and re-used if the book is converted again. Since the highest priority in Bulk Conversion is given to the settings in the Bulk Conversion dialog, these will override any book specific settings. So you should only bulk convert books together that need similar settings. The exceptions are metadata and input format specific settings. Since the Bulk Conversion dialog does not have settings for these two categories, they will be taken from book specific settings (if any) or the defaults."
msgstr ""

#: ../../conversion.rst:602
# c6b060a00b7345eabc4c7a214be1fdc1
msgid "You can see the actual settings used during any conversion by clicking the rotating icon in the lower right corner and then double clicking the individual conversion job. This will bring up a conversion log that will contain the actual settings used, near the top."
msgstr ""

#: ../../conversion.rst:607
# bd88fd3d8ecf4ba0b4278070003a5c39
msgid "Format specific tips"
msgstr ""

#: ../../conversion.rst:609
# 0b2382c61ad243cb8fbb01020b61ee22
msgid "Here you will find tips specific to the conversion of particular formats. Options specific to particular format, whether input or output are available in the conversion dialog under their own section, for example `TXT Input` or `EPUB Output`."
msgstr ""

#: ../../conversion.rst:614
# 2c188ef63b214fc090e7b470f26b2d7d
msgid "Convert Microsoft Word documents"
msgstr ""

#: ../../conversion.rst:616
# 5de48b1b40f74a27848edc59dcdcd75c
msgid "|app| can automatically convert ``.docx`` files created by Microsoft Word 2007 and newer. Just add the file to |app| and click convert (make sure you are running the latest version of |app| as support for ``.docx`` files is very new)."
msgstr ""

#: ../../conversion.rst:621
# 70d4c6fcfe7e4fbe8de40d5cce63af16
msgid "There is a `demo .docx file <http://calibre-ebook.com/downloads/demos/demo.docx>`_ that demonstrates the capabilities of the |app| conversion engine. Just download it and convert it to EPUB or AZW3 to see what |app| can do."
msgstr ""

#: ../../conversion.rst:625
# c2d8039fb40048d697c805f06b894dc6
msgid "|app| will automatically generate a Table of Contents based on headings if you mark your headings with the ``Heading 1``, ``Heading 2``, etc. styles in Word. Open the output ebook in the calibre viewer and click the Table of Contents button to view the generated Table of Contents."
msgstr ""

#: ../../conversion.rst:631
# b3e9a444f3d646848782f5d4770411c0
msgid "Older .doc files"
msgstr ""

#: ../../conversion.rst:633
# 76de63ddf79d4504aba5a2de8075562e
msgid "For older .doc files, you can save the document as HTML with Microsoft Word and then convert the resulting HTML file with |app|. When saving as HTML, be sure to use the \"Save as Web Page, Filtered\" option as this will produce clean HTML that will convert well. Note that Word produces really messy HTML, converting it can take a long time, so be patient. If you have a newer version of Word available, you can directly save it as docx as well."
msgstr ""

#: ../../conversion.rst:640
# 31b4e6d40e1a4bb0a1ce7deb68a7de4e
msgid "Another alternative is to use the free OpenOffice. Open your .doc file in OpenOffice and save it in OpenOffice's format .odt. |app| can directly convert .odt files."
msgstr ""

#: ../../conversion.rst:645
# 7914cf441fc54d119a8cdcc3be5326a4
msgid "Convert TXT documents"
msgstr ""

#: ../../conversion.rst:647
# 9dab333b619f4c3c99f2441355b479fb
msgid "TXT documents have no well defined way to specify formatting like bold, italics, etc, or document structure like paragraphs, headings, sections and so on, but there are a variety of conventions commonly used.  By default |app| attempts automatic detection of the correct formatting and markup based on those conventions."
msgstr ""

#: ../../conversion.rst:652
# 95fc8ee7dc9342269ed009d7ad1622b9
msgid "TXT input supports a number of options to differentiate how paragraphs are detected."
msgstr ""

#: ../../conversion.rst:656
# a4aa2ef3ba5f451e92e12407f34f4ca3
msgid ":guilabel:`Paragraph Style: Auto`"
msgstr ""

#: ../../conversion.rst:655
# 3b0ffe40b6514fb9ba12f7d68a4ce214
msgid "Analyzes the text file and attempts to automatically determine how paragraphs are defined.  This option will generally work fine, if you achieve undesirable results try one of the manual options."
msgstr ""

#: ../../conversion.rst:664
# 13d7e315a5dc422b9cd028d3badf6f30
msgid ":guilabel:`Paragraph Style: Block`"
msgstr ""

#: ../../conversion.rst:659
# 6c0d111680d743f7a011e0d15464ecbc
msgid "Assumes one or more blank lines are a paragraph boundary::"
msgstr ""

#: ../../conversion.rst:671
# 2ce449bb647f4174a6fb2ba76fbfdbdf
msgid ":guilabel:`Paragraph Style: Single`"
msgstr ""

#: ../../conversion.rst:667
# 7889260016484212ba64338b0bf51202
msgid "Assumes that every line is a paragraph::"
msgstr ""

#: ../../conversion.rst:682
# 2e2305fd6afb44959599f0168167201d
msgid ":guilabel:`Paragraph Style: Print`"
msgstr ""

#: ../../conversion.rst:674
# d6db306ff76f47829c1680cb76275a6a
msgid "Assumes that every paragraph starts with an indent (either a tab or 2+ spaces). Paragraphs end when the next line that starts with an indent is reached::"
msgstr ""

#: ../../conversion.rst:686
# 65063639126b42a38ca355f005dbeefc
msgid ":guilabel:`Paragraph Style: Unformatted`"
msgstr ""

#: ../../conversion.rst:685
# b67d7e72bf734e2997e3d70d0c0243fb
msgid "Assumes that the document has no formatting, but does use hard line breaks.  Punctuation and median line length are used to attempt to re-create paragraphs."
msgstr ""

#: ../../conversion.rst:690
# 2bbab2caf1aa41e3a83fef7720c53d42
msgid ":guilabel:`Formatting Style: Auto`"
msgstr ""

#: ../../conversion.rst:689
# 590c6d7f733b45ada8b597243676f542
msgid "Attemtps to detect the type of formatting markup being used.  If no markup is used then heuristic formatting will be applied."
msgstr ""

#: ../../conversion.rst:694
# 5eb4671a99a341aba2c94e348d57dc60
msgid ":guilabel:`Formatting Style: Heuristic`"
msgstr ""

#: ../../conversion.rst:693
# d9113d63e0b64eb99dd7591417d9e00c
msgid "Analyzes the document for common chapter headings, scene breaks, and italicized words and applies the appropriate html markup during conversion."
msgstr ""

#: ../../conversion.rst:701
# b62f90f239c04068824a2a8636bd4492
msgid ":guilabel:`Formatting Style: Markdown`"
msgstr ""

#: ../../conversion.rst:697
# 4b683b03a5a24595b591bd6abfb6dcb6
msgid "|app| also supports running TXT input though a transformation preprocessor known as markdown. Markdown allows for basic formatting to be added to TXT documents, such as bold, italics, section headings, tables, lists, a Table of Contents, etc. Marking chapter headings with a leading # and setting the chapter XPath detection expression to \"//h:h1\" is the easiest way to have a proper table of contents generated from a TXT document. You can learn more about the markdown syntax at `daringfireball <http://daringfireball.net/projects/markdown/syntax>`_."
msgstr ""

#: ../../conversion.rst:704
# 365b5d27c7fc40f59377135b6d53ac3e
msgid ":guilabel:`Formatting Style: None`"
msgstr ""

#: ../../conversion.rst:704
# 7d38f370f2d04c4a8bf08f7d0bbe6959
msgid "Applies no special formatting to the text, the document is converted to html with no other changes."
msgstr ""

#: ../../conversion.rst:709
# b561594e03a54003ba5ca24a58ccdc23
msgid "Convert PDF documents"
msgstr ""

#: ../../conversion.rst:711
# addd0b9df423423882fc7f0bcdc842a6
msgid "PDF documents are one of the worst formats to convert from. They are a fixed page size and text placement format. Meaning, it is very difficult to determine where one paragraph ends and another begins. |app| will try to unwrap paragraphs using a configurable, :guilabel:`Line Un-Wrapping Factor`. This is a scale used to determine the length at which a line should be unwrapped. Valid values are a decimal between 0 and 1. The default is 0.45, just under the median line length. Lower this value to include more text in the unwrapping. Increase to include less. You can adjust this value in the conversion settings under :guilabel:`PDF Input`."
msgstr ""

#: ../../conversion.rst:718
# 8f3a05824016432d886b817354ff34cc
msgid "Also, they often have headers and footers as part of the document that will become included with the text. Use the Search and Replace panel to remove headers and footers to mitigate this issue. If the headers and footers are not removed from the text it can throw off the paragraph unwrapping. To learn how to use the header and footer removal options, read :ref:`regexptutorial`."
msgstr ""

#: ../../conversion.rst:723
# 5ca40466f3024a979caaf655ad9b65e1
msgid "Some limitations of PDF input are:"
msgstr ""

#: ../../conversion.rst:725
# 92772e9bdd1840fd9ff5542558146db7
msgid "Complex, multi-column, and image based documents are not supported."
msgstr ""

#: ../../conversion.rst:726
# 06759c3411394e0d90ed75927d417fe8
msgid "Extraction of vector images and tables from within the document is also not supported."
msgstr ""

#: ../../conversion.rst:727
# a2e4d6db6b3e40f78323166213ab8eb3
msgid "Some PDFs use special glyphs to represent ll or ff or fi, etc. Conversion of these may or may not work depending on just how they are represented internally in the PDF."
msgstr ""

#: ../../conversion.rst:728
# a8894907bc6d40838dc6d69674e2efcf
msgid "Links and Tables of Contents are not supported"
msgstr ""

#: ../../conversion.rst:729
# b080cc1acf874cfdabaad6977c59cd3c
msgid "PDFs that use embedded non-unicode fonts to represent non-English characters will result in garbled output for those characters"
msgstr ""

#: ../../conversion.rst:730
# 21da4ac93aa94650b5eba38d20441db2
msgid "Some PDFs are made up of photographs of the page with OCRed text behind them. In such cases |app| uses the OCRed text, which can be very different from what you see when you view the PDF file"
msgstr ""

#: ../../conversion.rst:731
# 0629337e56a54438aa703be80378fe32
msgid "PDFs that are used to display complex text, like right to left languages and math typesetting will not convert correctly"
msgstr ""

#: ../../conversion.rst:733
# 3a4a5482dabd4d30b524672afb413d8e
msgid "To re-iterate **PDF is a really, really bad** format to use as input. If you absolutely must use PDF, then be prepared for an output ranging anywhere from decent to unusable, depending on the input PDF."
msgstr ""

#: ../../conversion.rst:737
# 5a05fbed16504f07ab3b0756d2e87788
msgid "Comic Book Collections"
msgstr ""

#: ../../conversion.rst:739
# a0c86b40397849b39f981cfb6583a7db
msgid "A comic book collection is a .cbc file. A .cbc file is a zip file that contains other CBZ/CBR files. In addition the .cbc file must contain a simple text file called comics.txt, encoded in UTF-8. The comics.txt file must contain a list of the comics files inside the .cbc file, in the form filename:title, as shown below::"
msgstr ""

#: ../../conversion.rst:747
# 156f4812810c41fe8b2af856ee8707ce
msgid "The .cbc file will then contain::"
msgstr ""

#: ../../conversion.rst:754
# 470b415d3d0d471d85543b771badcb3a
msgid "|app| will automatically convert this .cbc file into a ebook with a Table of Contents pointing to each entry in comics.txt."
msgstr ""

#: ../../conversion.rst:758
# 40d267f8d7064306845c0c4bfb2df116
msgid "EPUB advanced formatting demo"
msgstr ""

#: ../../conversion.rst:760
# 78669cfcd57d40b6ae6fc1e28b0ca41b
msgid "Various advanced formatting for EPUB files is demonstrated in this `demo file <http://calibre-ebook.com/downloads/demos/demo.epub>`_. The file was created from hand coded HTML using calibre and is meant to be used as a template for your own EPUB creation efforts."
msgstr ""

#: ../../conversion.rst:763
# fbc20cd6ff9a45ffb462650de9e254ae
msgid "The source HTML it was created from is available `demo.zip <http://calibre-ebook.com/downloads/demos/demo.zip>`_. The settings used to create the EPUB from the ZIP file are::"
msgstr ""

#: ../../conversion.rst:768
# 23a8f51ebcc64ad6a390338dee89b3f1
msgid "Note that because this file explores the potential of EPUB, most of the advanced formatting is not going to work on readers less capable than |app|'s built-in EPUB viewer."
msgstr ""

#: ../../conversion.rst:772
# 80a8505e7ab04c1faf2814b55b5173e6
msgid "Convert ODT documents"
msgstr ""

#: ../../conversion.rst:774
# 149c2bab37064a60828eafcb62964697
msgid "|app| can directly convert ODT (OpenDocument Text) files. You should use styles to format your document and minimize the use of direct formatting. When inserting images into your document you need to anchor them to the paragraph, images anchored to a page will all end up in the front of the conversion."
msgstr ""

#: ../../conversion.rst:777
# aa27a85891d64f95b62bd9d0a873e731
msgid "To enable automatic detection of chapters, you need to mark them with the build-in styles called 'Heading 1', 'Heading 2', ..., 'Heading 6' ('Heading 1' equates to the HTML tag <h1>, 'Heading 2' to <h2> etc). When you convert in |app| you can enter which style you used into the 'Detect chapters at' box. Example:"
msgstr ""

#: ../../conversion.rst:779
# 76dd350eb85f463f9a2e24ce96bd5996
msgid "If you mark Chapters with style 'Heading 2', you have to set the 'Detect chapters at' box to ``//h:h2``"
msgstr ""

#: ../../conversion.rst:780
# a40f4d867df34baa9e09b2d7f07390f3
msgid "For a nested TOC with Sections marked with 'Heading 2' and the Chapters marked with 'Heading 3' you need to enter ``//h:h2|//h:h3``. On the Convert - TOC page set the 'Level 1 TOC' box to ``//h:h2`` and the 'Level 2 TOC' box to ``//h:h3``."
msgstr ""

#: ../../conversion.rst:782
# 8a597442fcf047cd9ced821df5a7dc5e
msgid "Well-known document properties (Title, Keywords, Description, Creator) are recognized and |app| will use the first image (not to small, and with good aspect-ratio) as the cover image."
msgstr ""

#: ../../conversion.rst:784
# 82778c50d3114eedb9a6a93dca914d10
msgid "There is also an advanced property conversion mode, which is activated by setting the custom property ``opf.metadata`` ('Yes or No' type) to Yes in your ODT document (File->Properties->Custom Properties). If this property is detected by |app|, the following custom properties are recognized (``opf.authors`` overrides document creator)::"
msgstr ""

#: ../../conversion.rst:797
# 820e91b6e3ff4641a77cb62c6bd10b8c
msgid "In addition to this, you can specify the picture to use as the cover by naming it ``opf.cover`` (right click, Picture->Options->Name) in the ODT. If no picture with this name is found, the 'smart' method is used.  As the cover detection might result in double covers in certain output formats, the process will remove the paragraph (only if the only content is the cover!) from the document. But this works only with the named picture!"
msgstr ""

#: ../../conversion.rst:804
# 7c729f4bb2524448a6b6194be32a8f27
msgid "To disable cover detection you can set the custom property ``opf.nocover`` ('Yes or No' type) to Yes in advanced mode."
msgstr ""

#: ../../conversion.rst:807
# 802e324ad73941a3b2133afa7e163e97
msgid "Converting to PDF"
msgstr ""

#: ../../conversion.rst:809
# c925f622e8b5475daa5b899ad9efde79
msgid "The first, most important, setting to decide on when converting to PDF is the page size. By default, |app| uses a page size defined by the current :guilabel:`Output profile`. So if your output profile is set to Kindle, |app| will create a PDF with page size suitable for viewing on the small kindle screen. However, if you view this PDF file on a computer screen, then it will appear to have too large fonts. To create \"normal\" sized PDFs, use the :guilabel:`Override page size` option under :guilabel:`PDF Output` in the conversion dialog."
msgstr ""

#: ../../conversion.rst:818
# 067b6da84fea4e1b8a1031fc344c0548
msgid "Headers and Footers"
msgstr ""

#: ../../conversion.rst:819
# e815ffbe0c6b4280b02431cb0daa7f38
msgid "You can insert arbitrary headers and footers on each page of the PDF by specifying header and footer templates. Templates are just snippets of HTML code that get rendered in the header and footer locations. For example, to display page numbers centered at the bottom of every page, in green, use the following footer template::"
msgstr ""

#: ../../conversion.rst:827
# 7547c078b08f4e51b4076a7c6671a1db
msgid "|app| will automatically replace _PAGENUM_ with the current page number. You can even put different content on even and odd pages, for example the following header template will show the title on odd pages and the author on even pages::"
msgstr ""

#: ../../conversion.rst:833
# 248e8361e6be478babb2c266b33f2f3d
msgid "|app| will automatically replace _TITLE_ and _AUTHOR_ with the title and author of the document being converted.  You can also display text at the left and right edges and change the font size, as demonstrated with this header template::"
msgstr ""

#: ../../conversion.rst:840
# b13147fd5f514e5ca0d52fc31abd597b
msgid "This will display the title at the left and the author at the right, in a font size smaller than the main text."
msgstr ""

#: ../../conversion.rst:843
# dcdfbac5decc496a8ca5f9240a5154a4
msgid "You can also use the current section in templates, as shown below::"
msgstr ""

#: ../../conversion.rst:847
# 5ffcd8d5fab94719b989ec8a365eb3a3
msgid "_SECTION_ is replaced by whatever the name of the current section is. These names are taken from the metadata Table of Contents in the document (the PDF Outline). If the document has no table of contents then it will be replaced by empty text. If a single PDF page has multiple sections, the first section on the page will be used."
msgstr ""

#: ../../conversion.rst:853
# e6f98756ee06475988fe0a93de7f491e
msgid "You can even use javascript inside the header and footer templates, for example, the following template will cause page numbers to start at 4 instead of 1::"
msgstr ""

#: ../../conversion.rst:859
# f2207cbdfa8f43a0be038c864438f906
msgid "When adding headers and footers make sure you set the page top and bottom margins to large enough values, under the Page Setup section of the conversion dialog."
msgstr ""

#: ../../conversion.rst:864
# 04c8fcbb469e42dfb75a7a8c90b9451d
msgid "Printable Table of Contents"
msgstr ""

#: ../../conversion.rst:866
# 7b4b8409651a42869ab8634b1f930e9a
msgid "You can also insert a printable Table of Contents at the end of the PDF that lists the page numbers for every section. This is very useful if you intend to print out the PDF to paper. If you wish to use the PDF on an electronic device, then the PDF Outline provides this functionality and is generated by default."
msgstr ""

#: ../../conversion.rst:871
# 7db95f7703b940d6a963c771ecaa6180
msgid "You can customize the look of the the generated Table of contents by using the Extra CSS conversion setting under the Look & Feel part of the conversion dialog. The default css used is listed below, simply copy it and make whatever changes you like."
msgstr ""

