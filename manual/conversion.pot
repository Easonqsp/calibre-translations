# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.41.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-21 08:59+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../conversion.rst:6
# 1c3b7285484c4d68ae353830e362b129
msgid "Ebook Conversion"
msgstr ""

#: ../../conversion.rst:8
# ca4a442840c2497fa2558c83120f0b93
msgid "|app| has a conversion system that is designed to be very easy to use. Normally, you just add a book to |app|, click convert and |app| will try hard to generate output that is as close as possible to the input. However, |app| accepts a very large number of input formats, not all of which are as suitable as others for conversion to ebooks. In the case of such input formats, or if you just want greater control over the conversion system, |app| has a lot of options to fine tune the conversion process. Note however that |app|'s conversion system is not a substitute for a full blown ebook editor. To edit ebooks, I recommend first converting them to EPUB or AZW3 using |app| and then using the Edit Book feature to get them into perfect shape. You can then use the edited ebook as input for conversion into other formats in |app|."
msgstr ""

#: ../../conversion.rst:20
# cc1675cd9b194a5d8e45f19df220e782
msgid "This document will refer mainly to the conversion settings as found in the conversion dialog, pictured below. All these settings are also available via command line interface to conversion, documented at :ref:`ebook-convert`. In |app|, you can obtain help on any individual setting by holding your mouse over it, a tooltip will appear describing the setting."
msgstr ""

#: ../../conversion.rst:0
#: ../../conversion.rst:0
# e76bd578fb5e4da5b633e932e326b12a
# 033212dba54c42b1bad81e10ec31ee28
msgid "Contents"
msgstr ""

#: ../../conversion.rst:38
# 32d8b07930064017a2da4751daa6a753
msgid "Introduction"
msgstr ""

#: ../../conversion.rst:44
# 220fb41ea0544400a22ba29aeb131198
msgid "The first thing to understand about the conversion system is that it is designed as a pipeline. Schematically, it looks like this:"
msgstr ""

#: ../../conversion.rst:51
# 1515bd9e50de446dbe5c3159549cb7bc
msgid "The input format is first converted to XHTML by the appropriate *Input Plugin*. This HTML is then *transformed*. In the last step, the processed XHTML is converted to the specified output format by the appropriate *Output Plugin*. The results of the conversion can vary greatly, based on the input format. Some formats convert much better than others. A list of the best source formats for conversion is available :ref:`here <best-source-formats>`."
msgstr ""

#: ../../conversion.rst:58
# 3a241d90017047bfaaeb85e944e2c36d
msgid "The transforms that act on the XHTML output are where all the work happens. There are various transforms, for example, to insert book metadata as a page at the start of the book, to detect chapter headings and automatically create a Table of Contents, to proportionally adjust font sizes, et cetera. It is important to remeber that all the transforms act on the XHTML output by the *Input Plugin*, not on the input file itself. So, for example, if you ask |app| to convert an RTF file to EPUB, it will first be converted to XHTML internally, the various transforms will be applied to the XHTML and then the *Output Plugin* will create the EPUB file, automatically generating all metadata, Table of Contents, et cetera."
msgstr ""

#: ../../conversion.rst:67
# 144ebd3e414b41f6a1cef84752e32e46
msgid "You can see this process in action by using the debug option |dbgi|. Just specify the path to a directory for the debug output. During conversion, |app| will place the XHTML generated by the various stages of the conversion pipeline in different sub-directories. The four sub-directories are:"
msgstr ""

#: ../../conversion.rst:0
# a19ccd51be0a48eeb2af806b0068bf37
msgid "Stages of the conversion pipeline"
msgstr ""

#: ../../conversion.rst:75
# 1d9ea81182384a089ef2e484b91c6e16
msgid "Directory"
msgstr ""

#: ../../conversion.rst:75
# 3b029e5f7c3648d8a21f625d7e888de6
msgid "Description"
msgstr ""

#: ../../conversion.rst:77
# 4f6aa6c7c4de47848a3e0b5dc0f2baf6
msgid "input"
msgstr ""

#: ../../conversion.rst:77
# ea960504db5a4aa5862687e39ad652a0
msgid "This contains the HTML output by the Input Plugin. Use this to debug the Input Plugin."
msgstr ""

#: ../../conversion.rst:78
# 657101d71bf54c2298cd06de50c275b9
msgid "parsed"
msgstr ""

#: ../../conversion.rst:78
# 9e41d56b5b914f32adc763d00e83d0b5
msgid "The result of pre-processing and converting to XHTML the output from the Input Plugin. Use to debug structure detection."
msgstr ""

#: ../../conversion.rst:79
# bf28a2bab8e443bfb9030b8cdc827b0b
msgid "structure"
msgstr ""

#: ../../conversion.rst:79
# cbeb9283a3e24ecc829fae9440346461
msgid "Post structure detection, but before CSS flattening and font size conversion. Use to debug font size conversion and CSS transforms."
msgstr ""

#: ../../conversion.rst:80
# 30fd8c5527824320927784794f4924a8
msgid "processed"
msgstr ""

#: ../../conversion.rst:80
# 74e56f01dd1e4b95a9351de9788280ea
msgid "Just before the ebook is passed to the output plugin. Use to debug the Output Plugin."
msgstr ""

#: ../../conversion.rst:83
# 1a7ae082ad654980b9616a2452c97be5
msgid "If you want to edit the input document a little before having |app| convert it, the best thing to do is edit the files in the :file:`input` sub-directory, then zip it up, and use the zip file as the input format for subsequent conversions. To do this use the :guilabel:`Edit meta information` dialog to add the zip file as a format for the book and then, in the top left corner of the conversion dialog, select ZIP as the input format."
msgstr ""

#: ../../conversion.rst:89
# d7a78e4f5b0b4cedabad28a9581745e8
msgid "This document will deal mainly with the various transforms that operate on the intermediate XHTML and how to control them. At the end are some tips specific to each Input/Output format."
msgstr ""

#: ../../conversion.rst:93
# 4dcb7541c06d4468bbde4f6f216b956f
msgid "Look & Feel"
msgstr ""

#: ../../conversion.rst:99
# 3337eb05e0ea45cd949fbb346c329fd0
msgid "This group of options controls various aspects of the look and feel of the converted ebook."
msgstr ""

#: ../../conversion.rst:104
# 3a66a842202e4dccb43fd706f04bb60f
msgid "Font size rescaling"
msgstr ""

#: ../../conversion.rst:106
# 1dea54f02fb444bc8e600b3269090f37
msgid "One of the nicest features of the e-reading experience is the ability to easily adjust font sizes to suit individual needs and lighting conditions. |app| has sophisticated algorithms to ensure that all the books it outputs have a consistent font sizes, no matter what font sizes are specified in the input document."
msgstr ""

#: ../../conversion.rst:111
# 699cad6ce9ed42ce8071c1ccd628f607
msgid "The base font size of a document is the most common font size in that document, i.e., the size of the bulk of text in that document. When you specify a :guilabel:`Base font size`, |app| automatically rescales all font sizes in the document proportionately, so that the most common font size becomes the specified base font size and other font sizes are rescaled appropriately. By choosing a larger base font size, you can make the fonts in the document larger and vice versa. When you set the base font size, for best results, you should also set the font size key."
msgstr ""

#: ../../conversion.rst:119
# ae416c64b2fa4cbd9273f48d44160bc8
msgid "Normally, |app| will automatically choose a base font size appropriate to the Output Profile you have chosen (see :ref:`page-setup`). However, you can override this here in case the default is not suitable for you."
msgstr ""

#: ../../conversion.rst:123
# 1b9c19d8065d4cedaf25ab7c84d39657
msgid "The :guilabel:`Font size key` option lets you control how non-base font sizes are rescaled. The font rescaling algorithm works using a font size key, which is simply a comma-separated list of font sizes. The font size key tells |app| how many \"steps\" bigger or smaller a given font size should be compared to the base font size. The idea is that there should be a limited number of font sizes in a document. For example, one size for the body text, a couple of sizes for different levels of headings and a couple of sizes for super/sub scripts and footnotes. The font size key allows |app| to compartmentalize the font sizes in the input documents into separate \"bins\" corresponding to the different logical font sizes."
msgstr ""

#: ../../conversion.rst:132
# 4ace8c5db4a3401d973b85966354be63
msgid "Let's illustrate with an example. Suppose the source document we are converting was produced by someone with excellent eyesight and has a base font size of 8pt. That means the bulk of the text in the document is sized at 8pts, while headings are somewhat larger (say 10 and 12pt) and footnotes somewhat smaller at 6pt. Now if we use the following settings::"
msgstr ""

#: ../../conversion.rst:141
# 04a8ce2461c741a4a2c5869321c32563
msgid "The output document will have a base font size of 12pt, headings of 14 and 16pt and footnotes of 8pt. Now suppose we want to make the largest heading size stand out more and make the footnotes a little larger as well. To achieve this, the font key should be changed to::"
msgstr ""

#: ../../conversion.rst:147
# becb9ef9bdae4bd5ac16112c072f758d
msgid "The largest headings will now become 18pt, while the footnotes will become 9pt. You can play with these settings to try and figure out what would be optimum for you by using the font rescaling wizard, which can be accessed by clicking the little button next to the :guilabel:`Font size key` setting."
msgstr ""

#: ../../conversion.rst:152
# 8a2de6ed312a4135ab7ee96bbcfecaf7
msgid "All the font size rescaling in the conversion can also be disabled here, if you would like to preserve the font sizes in the input document."
msgstr ""

#: ../../conversion.rst:155
# 5d7b9f2257334004a17d2c1ccd310850
msgid "A related setting is :guilabel:`Line height`. Line height controls the vertical height of lines. By default, (a line height of 0), no manipulation of line heights is performed. If you specify a non-default value, line heights will be set in all locations that don't specify their own line heights. However, this is something of a blunt weapon and should be used sparingly. If you want to adjust the line heights for some section of the input, it's better to use the :ref:`extra-css`."
msgstr ""

#: ../../conversion.rst:163
# 2dee789cda304b6a8abbade847afd0ce
msgid "Paragraph spacing"
msgstr ""

#: ../../conversion.rst:165
# 998ec9f9b9204a789e7b36a42719fb54
msgid "Normally, paragraphs in XHTML are rendered with a blank line between them and no leading text indent. |app| has a couple of options to control this. :guilabel:`Remove spacing between paragraphs` forcefully ensure that all paragraphs have no inter paragraph spacing. It also sets the text indent to 1.5em (can be changed) to mark the start of every paragraph. :guilabel:`Insert blank line` does the opposite, guaranteeing that there is exactly one blank line between each pair of paragraphs. Both these options are very comprehensive, removing spacing, or inserting it for *all* paragraphs (technically <p> and <div> tags). This is so that you can just set the option and be sure that it performs as advertised, irrespective of how messy the input file is. The one exception is when the input file uses hard line breaks to implement inter-paragraph spacing."
msgstr ""

#: ../../conversion.rst:176
# c2cb47156ae246b1b7a838add2355fb2
msgid "If you want to remove the spacing between all paragraphs, except a select few, don't use these options. Instead add the following CSS code to :ref:`extra-css`::"
msgstr ""

#: ../../conversion.rst:182
# 1947d0c334644c2697e6b9d8b360ccc2
msgid "Then, in your source document, mark the paragraphs that need spacing with `class=\"spacious\"`. If your input document is not in HTML, use the Debug option, described in the Introduction to get HTML (use the :file:`input` sub-directory)."
msgstr ""

#: ../../conversion.rst:190
# df88f39775b6446586d948fda7d7f346
msgid "Extra CSS"
msgstr ""

#: ../../conversion.rst:192
# cb2d6a56ec81483e92ada767af649939
msgid "This option allows you to specify arbitrary CSS that will be applied to all HTML files in the input. This CSS is applied with very high priority and so should override most CSS present in the **input document** itself. You can use this setting to fine tune the presentation/layout of your document. For example, if you want all paragraphs of class `endnote` to be right aligned, just add::"
msgstr ""

#: ../../conversion.rst:200
# 95a48f92d79f423097dd1a21d3b7756f
msgid "or if you want to change the indentation of all paragraphs::"
msgstr ""

#: ../../conversion.rst:204
# ce372e131551450e8656b61cd1be957b
msgid ":guilabel:`Extra CSS` is a very powerful option, but you do need an understanding of how CSS works to use it to its full potential. You can use the debug pipeline option described above to see what CSS is present in your input document."
msgstr ""

#: ../../conversion.rst:209
#: ../../conversion.rst:414
# d00a5e9bcdcc459595e7c168ad922e17
# 9357efe22c904795a8204ebb91dedce9
msgid "Miscellaneous"
msgstr ""

#: ../../conversion.rst:211
#: ../../conversion.rst:416
# 1a97619b72c447b688671e3921a30aa3
# 9c55bef477ec4f61bba8b8de909fedde
msgid "There are a few more options in this section."
msgstr ""

#: ../../conversion.rst:217
# cfbd8f4cb44a4644a5b0c8ac07df8b2b
msgid ":guilabel:`No text justification`"
msgstr ""

#: ../../conversion.rst:214
# b2b9a396bf554f2ca1787fa4b91e6551
msgid "Normally, if the output format supports it, |app| will force the output ebook to have *justified* text (i.e., a smooth right margin). This option will turn off this behavior, in which case whatever justification is specified in the input document will be used instead."
msgstr ""

#: ../../conversion.rst:224
# f1a088f5bb3e49e1bd2e6ed6aea63ac6
msgid ":guilabel:`Linearize tables`"
msgstr ""

#: ../../conversion.rst:220
# 89f00bb5992441649c078851d213421e
msgid "Some badly designed documents use tables to control the layout of text on the page. When converted these documents often have text that runs off the page and other artifacts. This option will extract the content from the tables and present it in a linear fashion. Note that this option linearizes *all* tables, so only use it if you are sure the input document does not use tables for legitimate purposes, like presenting tabular information."
msgstr ""

#: ../../conversion.rst:233
# ff97c64fd6a744fb9f9cd47696779502
msgid ":guilabel:`Transliterate unicode characters`"
msgstr ""

#: ../../conversion.rst:227
# 6d5e17356b224046b366295d12d9f1e1
msgid "Transliterate unicode characters to an ASCII representation. Use with care because this will replace unicode characters with ASCII. For instance it will replace \"Михаил Горбачёв\" with \"Mikhail Gorbachiov\". Also, note that in cases where there are multiple representations of a character (characters shared by Chinese and Japanese for instance) the representation used by the largest number of people will be used (Chinese in the previous example). This option is mainly useful if you are going to view the ebook on a device that does not have support for unicode."
msgstr ""

#: ../../conversion.rst:242
# c31e37ea709e4a0280574998834903c3
msgid ":guilabel:`Input character encoding`"
msgstr ""

#: ../../conversion.rst:236
# 17ff2deab7e44491bbaf9dea50a68a47
msgid "Older documents sometimes don't specify their character encoding. When converted, this can result in non-English characters or special characters like smart quotes being corrupted. |app| tries to auto-detect the character encoding of the source document, but it does not' always succeed. You can force it to assume a particular character encoding by using this setting. `cp1252` is a common encoding for documents produced using windows software. You should also read :ref:`char-encoding-faq` for more on encoding issues."
msgstr ""

#: ../../conversion.rst:247
# 084537d5d83044dabcc53d662d13b3f2
msgid "Page Setup"
msgstr ""

#: ../../conversion.rst:249
# 374c755aadd74d10814c549866ae3d59
msgid "The Page Setup options are for controlling screen layout, like margins and screen sizes. There are options to setup page margins, which will be used by the Output Plugin, if the selected Output Format supports page margins. In addition, you should choose an Input profile and an Output profile. Both sets of profiles basically deal with how to interpret measurements in the input/output documents, screen sizes and default font rescaling keys."
msgstr ""

#: ../../conversion.rst:255
# e956617fc51542668a14e80e04a7bfcc
msgid "If you know that the file you are converting was intended to be used on a particular device/software platform, choose the corresponding input profile, otherwise just choose the default input profile. If you know the files you are producing are meant for a particular device type, choose the corresponding Output profile. In particular, for MOBI Output files, you should choose the Kindle, for LIT the Microsoft Reader and for EPUB the Sony Reader. In the case of EPUB, the Sony Reader profile will result in EPUB files that will work everywhere. However, it has some side effects, like inserting artificial section breaks to keep internal components below the size threshold, needed for SONY devices. In particular for the iPhone/Android phones, choose the SONY output profile. If you know your EPUB files will not be read on a SONY or similar device, use the default output profile. If you are producing MOBI files that are not intended for the Kindle, choose the Mobipocket books output profile."
msgstr ""

#: ../../conversion.rst:259
# fd79fd6683804c10b85fc54a94c1cad5
msgid "The Output profile also controls the screen size. This will cause, for example, images to be auto-resized to be fit to the screen in some output formats. So choose a profile of a device that has a screen size similar to your device."
msgstr ""

#: ../../conversion.rst:264
# 87fabbc1d5fb414f98b2d6d95de09d59
msgid "Heuristic Processing"
msgstr ""

#: ../../conversion.rst:266
# 22ba557b1d4c4bcc90a2256f47401df0
msgid "Heuristic Processing provides a variety of functions which can be used to try and detect and correct common problems in poorly formatted input documents.  Use these functions if your input document suffers from poor formatting. Because these functions rely on common patterns, be aware that in some cases an option may lead to worse results, so use with care.  As an example, several of these options will remove all non-breaking-space entities, or may include false positive matches relating to the function."
msgstr ""

#: ../../conversion.rst:274
# be2faced8f0a491db78bd79e5baf7bf4
msgid ":guilabel:`Enable heuristic processing`"
msgstr ""

#: ../../conversion.rst:273
# 590fcd2b6c734fb48b5ff99e156a60af
msgid "This option activates |app|'s Heuristic Processing stage of the conversion pipeline. This must be enabled in order for various sub-functions to be applied"
msgstr ""

#: ../../conversion.rst:280
# 82ec1c4fdff3413093dcd7e65fbe08e6
msgid ":guilabel:`Unwrap lines`"
msgstr ""

#: ../../conversion.rst:277
# cbbdf176794b427fa5b2de5702eadb2f
msgid "Enabling this option will cause |app| to attempt to detect and correct hard line breaks that exist within a document using punctuation clues and line length. |app| will first attempt to detect whether hard line breaks exist, if they do not appear to exist |app| will not attempt to unwrap lines. The line-unwrap factor can be reduced if you want to 'force' |app| to unwrap lines."
msgstr ""

#: ../../conversion.rst:286
# 449a330693c64afb98346622bc16b23e
msgid ":guilabel:`Line-unwrap factor`"
msgstr ""

#: ../../conversion.rst:283
# 0a2fa67923024580bbcfa3b67acaf62c
msgid "This option controls the algorithm |app| uses to remove hard line breaks. For example, if the value of this option is 0.4, that means calibre will remove hard line breaks from the end of lines whose lengths are less than the length of 40% of all lines in the document.  If your document only has a few line breaks which need correction, then this value should be reduced to somewhere between 0.1 and 0.2."
msgstr ""

#: ../../conversion.rst:301
# a7cd6ab6f21d4bc9b753404d542efd96
msgid ":guilabel:`Detect and markup unformatted chapter headings and sub headings`"
msgstr ""

#: ../../conversion.rst:289
# b42af9bb6fe943e681847738a1be1e3f
msgid "If your document does not have chapter headings and titles formatted differently from the rest of the text, |app| can use this option to attempt detection them and surround them with heading tags. <h2> tags are used for chapter headings; <h3> tags are used for any titles that are detected."
msgstr ""

#: ../../conversion.rst:293
# 05874de5e15c481c871b3e08a6b69f21
msgid "This function will not create a TOC, but in many cases it will cause |app|'s default chapter detection settings to correctly detect chapters and build a TOC.  Adjust the XPath under Structure Detection if a TOC is not automatically created.  If there are no other headings used in the document then setting \"//h:h2\" under Structure Detection would be the easiest way to create a TOC for the document."
msgstr ""

#: ../../conversion.rst:298
# 649d4c2fe3294e07982eb2d030558876
msgid "The inserted headings are not formatted, to apply formatting use the :guilabel:`Extra CSS` option under the Look and Feel conversion settings.  For example, to center heading tags, use the following::"
msgstr ""

#: ../../conversion.rst:306
# a6fc95a9cdad40ed8e7b53ab85f99156
msgid ":guilabel:`Renumber sequences of <h1> or <h2> tags`"
msgstr ""

#: ../../conversion.rst:304
# 2d5591f334094d5089cf91c1dd832f41
msgid "Some publishers format chapter headings using multiple <h1> or <h2> tags sequentially. |app|'s default conversion settings will cause such titles to be split into two pieces.  This option will re-number the heading tags to prevent splitting."
msgstr ""

#: ../../conversion.rst:313
# 06ba50a291514ffa95576b80192ffbaa
msgid ":guilabel:`Delete blank lines between paragraphs`"
msgstr ""

#: ../../conversion.rst:309
# b8b92500bf494ffabcc8bc7e932cb1b5
msgid "This option will cause |app| to analyze blank lines included within the document.  If every paragraph is interleaved with a blank line, then |app| will remove all those blank paragraphs.  Sequences of multiple blank lines will be considered scene breaks and retained as a single paragraph.  This option differs from the 'Remove Paragraph Spacing' option under 'Look and Feel' in that it actually modifies the HTML content, while the other option modifies the document styles.  This option can also remove paragraphs which were inserted using |app|'s 'Insert blank line' option."
msgstr ""

#: ../../conversion.rst:318
# e0b831463d6d4c1b847bdffcb53ee3b8
msgid ":guilabel:`Ensure scene breaks are consistently formatted`"
msgstr ""

#: ../../conversion.rst:316
# a2da0df935c04c2784b7b37d8f79835a
msgid "With this option |app| will attempt to detect common scene-break markers and ensure that they are center aligned. 'Soft' scene break markers, i.e. scene breaks only defined by extra white space, are styled to ensure that they will not be displayed in conjunction with page breaks."
msgstr ""

#: ../../conversion.rst:334
# 26a8784b98e24bc1bb636078558f925e
msgid ":guilabel:`Replace scene breaks`"
msgstr ""

#: ../../conversion.rst:321
# 381df12e96ee487e8b5f22be4556a233
msgid "If this option is configured then |app| will replace scene break markers it finds with the replacement text specified by the user.  Please note that some ornamental characters may not be supported across all reading devices."
msgstr ""

#: ../../conversion.rst:324
# 9e11bb77d3b3441d92551d670e7b2250
msgid "In general you should avoid using html tags, |app| will discard any tags and use pre-defined markup.  <hr /> tags, i.e. horizontal rules, and <img> tags are exceptions.  Horizontal rules can optionally be specified with styles, if you choose to add your own style be sure to include the 'width' setting, otherwise the style information will be discarded.  Image tags can used, but |app| does not provide the ability to add the image during conversion, this must be done after the fact using the 'Edit Book' feature."
msgstr ""

#: ../../conversion.rst:331
# 73ccfa90163840a68f1cf54143f3a6e0
msgid "Example image tag (place the image within an 'Images' folder inside the epub after conversion):"
msgstr ""

#: ../../conversion.rst:331
# b7a967180be34015ab95b578cab2351d
msgid "<img style=\"width:10%\" src=\"../Images/scenebreak.png\" />"
msgstr ""

#: ../../conversion.rst:334
# 520e9a3a4f6b438f9a199a054889bb82
msgid "Example horizontal rule with styles:"
msgstr ""

#: ../../conversion.rst:334
# ee6164b544264824996a2ed91fe9fba4
msgid "<hr style=\"width:20%;padding-top: 1px;border-top: 2px ridge black;border-bottom: 2px groove black;\"/>"
msgstr ""

#: ../../conversion.rst:342
# ed4ebcf8f347480c916bf110c35f3da2
msgid ":guilabel:`Remove unnecessary hyphens`"
msgstr ""

#: ../../conversion.rst:337
# 63e7d9054a3d4d4fa8700f2c3e270ee3
msgid "|app| will analyze all hyphenated content in the document when this option is enabled.  The document itself is used as a dictionary for analysis.  This allows |app| to accurately remove hyphens for any words in the document in any language, along with made-up and obscure scientific words.  The primary drawback is words appearing only a single time in the document will not be changed.  Analysis happens in two passes, the first pass analyzes line endings.  Lines are only unwrapped if the word exists with or without a hyphen in the document.  The second pass analyzes all hyphenated words throughout the document, hyphens are removed if the word exists elsewhere in the document without a match."
msgstr ""

#: ../../conversion.rst:346
# b36a68af8f5544a7ba7516e43f171583
msgid ":guilabel:`Italicize common words and patterns`"
msgstr ""

#: ../../conversion.rst:345
# fd723d5f710540a5bff8574de41d878c
msgid "When enabled, |app| will look for common words and patterns that denote italics and italicize them.  Examples are common text conventions such as ~word~ or phrases that should generally be italicized, e.g. latin phrases like 'etc.' or 'et cetera'."
msgstr ""

#: ../../conversion.rst:350
# cc3013bfe2ac4599b5ba6ebabe4526ad
msgid ":guilabel:`Replace entity indents with CSS indents`"
msgstr ""

#: ../../conversion.rst:349
# 2aada2d8bbae415e877bfe8864d86831
msgid "Some documents use a convention of defining text indents using non-breaking space entities.  When this option is enabled |app| will attempt to detect this sort of formatting and convert them to a 3% text indent using css."
msgstr ""

#: ../../conversion.rst:355
# 8220c8845e81473faa73e4305b151252
msgid "Search & Replace"
msgstr ""

#: ../../conversion.rst:357
# 28d80d3e9fe74fa593d3ac84519d323f
msgid "These options are useful primarily for conversion of PDF documents or OCR conversions, though they can also be used to fix many document specific problems. As an example, some conversions can leaves behind page headers and footers in the text. These options use regular expressions to try and detect headers, footers, or other arbitrary text and remove or replace them. Remember that they operate on the intermediate XHTML produced by the conversion pipeline. There is a wizard to help you customize the regular expressions for your document.  Click the magic wand beside the expression box, and click the 'Test' button after composing your search expression.  Successful matches will be highlighted in Yellow."
msgstr ""

#: ../../conversion.rst:365
# de0a5193b2e741c3853f1db7472c1045
msgid "The search works by using a python regular expression. All matched text is simply removed from the document or replaced using the replacement pattern. The replacement pattern is optional, if left blank then text matching the search pattern will be deleted from the document.  You can learn more about regular expressions and their syntax at :ref:`regexptutorial`."
msgstr ""

#: ../../conversion.rst:373
# 3347272a0cdd452c8004c0a6e46908c9
msgid "Structure Detection"
msgstr ""

#: ../../conversion.rst:375
# a6c512f29b664f499d8e111c8403be12
msgid "Structure detection involves |app| trying its best to detect structural elements in the input document, when they are not properly specified. For example, chapters, page breaks, headers, footers, etc. As you can imagine, this process varies widely from book to book. Fortunately, |app| has very powerful options to control this. With power comes complexity, but if once you take the time to learn the complexity, you will find it well worth the effort."
msgstr ""

#: ../../conversion.rst:378
# 13faf2c852f94f3590fe6fb17cad66b6
msgid "Chapters and page breaks"
msgstr ""

#: ../../conversion.rst:380
# 0d6872962ceb4c58a03f29e28c718c3a
msgid "|app| has two sets of options for :guilabel:`chapter detection` and :guilabel:`inserting page breaks`. This can sometimes be slightly confusing, as by default, |app| will insert page breaks before detected chapters as well as the locations detected by the page breaks option. The reason for this is that there are often location where page breaks should be inserted that are not chapter boundaries. Also, detected chapters can be optionally inserted into the auto generated Table of Contents."
msgstr ""

#: ../../conversion.rst:385
# 385757e5306f47f0bf94f87d5b906c87
msgid "|app| uses *XPath*, a powerful language to allow the user to specify chapter boundaries/page breaks. XPath can seem a little daunting to use at first, fortunately, there is a :ref:`XPath tutorial <xpath-tutorial>` in the User Manual. Remember that Structure Detection operates on the intermediate XHTML produced by the conversion pipeline. Use the debug option described in the :ref:`conversion-introduction` to figure out the appropriate settings for your book. There is also a button for a XPath wizard to help with the generation of simple XPath expressions."
msgstr ""

#: ../../conversion.rst:391
# a7ca40a188524b659419618388f8d2fb
msgid "By default, |app| uses the following expression for chapter detection::"
msgstr ""

#: ../../conversion.rst:395
# b2ac9b87855d4e598f56896f990930d6
msgid "This expression is rather complex, because it tries to handle a number of common cases simulataneously. What it means is that |app| will assume chapters start at either `<h1>` or `<h2>` tags that have any of the words `(chapter, book, section or part)` in them or that have the `class=\"chapter\"` attribute."
msgstr ""

#: ../../conversion.rst:399
# 2dec4fdcf89445e382c27549cb4e90e4
msgid "A related option is :guilabel:`Chapter mark`, which allows you to control what |app| does when it detects a chapter. By default, it will insert a page break before the chapter. You can have it insert a ruled line instead of, or in addition to the page break. You can also have it do nothing."
msgstr ""

#: ../../conversion.rst:403
# 518dc2dc4b0449cc9410762e20121e41
msgid "The default setting for detecting page breaks is::"
msgstr ""

#: ../../conversion.rst:407
# 2b550882e9e84d16b1c0466ae547fecc
msgid "which means that |app| will insert page breaks before every `<h1>` and `<h2>` tag by default."
msgstr ""

#: ../../conversion.rst:411
# 19947fbc00b3412fa418a4f3e795d7df
msgid "The default expressions may change depending on the input format you are converting."
msgstr ""

#: ../../conversion.rst:422
# 119003794cdf42f8aafb3951ae968659
msgid ":guilabel:`Insert metadata as page at start of book`"
msgstr ""

#: ../../conversion.rst:419
# 7d7e3dc1bd2b44afbf7e767e78282da2
msgid "One of the great things about |app| is that it allows you to maintain very complete metadata about all of your books, for example, a rating, tags, comments, etc. This option will create a single page with all this metadata and insert it into the converted ebook, typically just after the cover. Think of it as a way to create your own customised book jacket."
msgstr ""

#: ../../conversion.rst:429
# 8749f02d6d1f463aa71101221dd7cafe
msgid ":guilabel:`Remove first image`"
msgstr ""

#: ../../conversion.rst:425
# 7efbf0f7b13240c981b5c77a193d07ea
msgid "Sometimes, the source document you are converting includes the cover as part of the book, instead of as a separate cover. If you also specify a cover in |app|, then the converted book will have two covers. This option will simply remove the first image from the source document, thereby ensuring that the converted book has only one cover, the one specified in |app|."
msgstr ""

#: ../../conversion.rst:432
# 095e22e72b244b0fa5cea102238e8041
msgid "Table of Contents"
msgstr ""

#: ../../conversion.rst:434
# d73942896f10409b96c8d6ccc9d8c7b0
msgid "When the input document has a Table of Contents in its metadata, |app| will just use that. However, a number of older formats either do not support a metadata based Table of Contents, or individual documents do not have one. In these cases, the options in this section can help you automatically generate a Table of Contents in the converted ebook, based on the actual content in the input document."
msgstr ""

#: ../../conversion.rst:439
# 6e6ddd11957b41e68b1c3e2d3c3680a7
msgid "Using these options can be a little challenging to get exactly right. If you prefer creating/editing the Table of Contents by hand, convert to the EPUB or AZW3 formats and select the checkbox at the bottom of the Table of Contents section of the conversion dialog that says :guilabel:`Manually fine-tune the Table of Contents after conversion`. This will launch the ToC Editor tool after the conversion. It allows you to create entries in the Table of Contents by simply clicking the place in the book where you want the entry to point. You can also use the ToC Editor by itself, without doing a conversion. Go to :guilabel:`Preferences->Toolbars` and add the ToC Editor to the main toolbar. Then just select the book you want to edit and click the ToC Editor button."
msgstr ""

#: ../../conversion.rst:451
# 71aa96f3c6944f3aa6e3aa4f1b7cd8bc
msgid "The first option is :guilabel:`Force use of auto-generated Table of Contents`. By checking this option you can have |app| override any Table of Contents found in the metadata of the input document with the auto generated one."
msgstr ""

#: ../../conversion.rst:455
# ee6193fcb0c5449782cb567491a4cb11
msgid "The default way that the creation of the auto generated Table of Contents works is that, |app| will first try to add any detected chapters to the generated table of contents. You can learn how to customize the detection of chapters in the :ref:`structure-detection` section above. If you do not want to include detected chapters in the generated table of contents, check the :guilabel:`Do not add detected chapters` option."
msgstr ""

#: ../../conversion.rst:460
# 1b7aa1e15a704a718335468a260cd38a
msgid "If less than the :guilabel:`Chapter threshold` number of chapters were detected, |app| will then add any hyperlinks it finds in the input document to the Table of Contents. This often works well many input documents include a hyperlinked Table of Contents right at the start. The :guilabel:`Number of links` option can be used to control this behavior. If set to zero, no links are added. If set to a number greater than zero, at most that number of links is added."
msgstr ""

#: ../../conversion.rst:466
# 905a2d4168c44eeea01840627cbec33d
msgid "|app| will automatically filter duplicates from the generated Table of Contents. However, if there are some additional undesirable entries, you can filter them using the :guilabel:`TOC Filter` option. This is a regular expression that will match the title of entries in the generated table of contents. Whenever a match is found, it will be removed. For example, to remove all entries titles \"Next\" or \"Previous\" use::"
msgstr ""

#: ../../conversion.rst:473
# 0ba057433c854400b562319fd21f637c
msgid "The :guilabel:`Level 1,2,3 TOC` options allow you to create a sophisticated multi-level Table of Contents. They are XPath expressions that match tags in the intermediate XHTML produced by the conversion pipeline. See the :ref:`conversion-introduction` for how to get access to this XHTML. Also read the :ref:`xpath-tutorial`, to learn how to construct XPath expressions. Next to each option is a button that launches a wizard to help with the creation of basic XPath expressions. The following simple example illustrates how to use these options."
msgstr ""

#: ../../conversion.rst:479
# 6111957d1c94402c9279b4979610a29d
msgid "Suppose you have an input document that results in XHTML that look like this:"
msgstr ""

#: ../../conversion.rst:501
# 2a3926525b014025810c4f3ce4c16833
msgid "Then, we set the options as::"
msgstr ""

#: ../../conversion.rst:506
# d2babd7cad0546459aeb56f9fb6a770b
msgid "This will result in an automatically generated two level Table of Contents that looks like::"
msgstr ""

#: ../../conversion.rst:517
# 62fb5a4b34d74b4ba8c00a0493a0dc8a
msgid "Not all output formats support a multi level Table of Contents. You should first try with EPUB Output. If that works, then try your format of choice."
msgstr ""

#: ../../conversion.rst:521
# f791efd72dfa48cd8505eb05102389d1
msgid "Using images as chapter titles when converting HTML input documents"
msgstr ""

#: ../../conversion.rst:523
# 94ccaeb7f9e24d6fb4a6ff83358f62a7
msgid "Suppose you want to use an image as your chapter title, but still want |app| to be able to automatically generate a Table of Contents for you from the chapter titles. Use the following HTML markup to achieve this"
msgstr ""

#: ../../conversion.rst:537
# 5a28f6028e364bda9efb441d75f87866
msgid "Set the :guilabel:`Level 1 TOC` setting to ``//h:h2``. Then, for chapter two, |app| will take the title from the value of the ``title`` attribute on the ``<h2>`` tag, since the tag has no text."
msgstr ""

#: ../../conversion.rst:540
# c7fb44a6a49a4de6a4ca6d148e56b6bd
msgid "Using tag attributes to supply the text for entries in the Table of Contents"
msgstr ""

#: ../../conversion.rst:542
# 676ea63ec6814780bb4e67418c6dd3b6
msgid "If you have particularly long chapter titles and want shortened versions in the Table of Contents, you can use the title attribute to achieve this, for example:"
msgstr ""

#: ../../conversion.rst:557
# dcbd2025248642dc9e68f8b3210bf24e
msgid "Set the :guilabel:`Level 1 TOC` setting to ``//h:h2/@title``. Then |app| will take the title from the value of the ``title`` attribute on the ``<h2>`` tags, instead of using the text inside the tag. Note the trailing ``/@title`` on the XPath expression, you can use this form to tell |app| to get the text from any attribute you like."
msgstr ""

#: ../../conversion.rst:564
# 77f03d7823494b41b7817f6d9ff0969d
msgid "How options are set/saved for Conversion"
msgstr ""

#: ../../conversion.rst:566
# a7dc98ef982b4164a1d9faf40ef5ae1f
msgid "There are two places where conversion options can be set in |app|. The first is in Preferences->Conversion. These settings are the defaults for the conversion options. Whenever you try to convert a new book, the settings set here will be used by default."
msgstr ""

#: ../../conversion.rst:571
# 5d03706d47544b869a0bf137bdedba80
msgid "You can also change settings in the conversion dialog for each book conversion. When you convert a book, |app| remembers the settings you used for that book, so that if you convert it again, the saved settings for the individual book will take precedence over the defaults set in Preferences. You can restore the individual settings to defaults by using the Restore to defaults button in the individual book conversion dialog. You can remove the saved settings for a group of books by selecting all the books and then clicking the edit metadata button to bring up the bulk metadata edit dialog, near the bottom of the dialog is an option to remove stored conversion settings."
msgstr ""

#: ../../conversion.rst:581
# d3978fc5896b486ca06a3b3ebc5bdf5f
msgid "When you Bulk Convert a set of books, settings are taken in the following order (last one wins):"
msgstr ""

#: ../../conversion.rst:583
# aaa6fd9485dd4cd0af5f1a1394c41c0d
msgid "From the defaults set in Preferences->Conversion"
msgstr ""

#: ../../conversion.rst:585
# 19285335ed7c449e984abd3d003dd223
msgid "From the saved conversion settings for each book being converted (if any). This can be turned off by the option in the top left corner of the Bulk Conversion dialog."
msgstr ""

#: ../../conversion.rst:589
# b746a092cd014f35b06120b282714caf
msgid "From the settings set in the Bulk conversion dialog"
msgstr ""

#: ../../conversion.rst:591
# c342d0b2672f4414aa4408cb1ab262cd
msgid "Note that the final settings for each book in a Bulk Conversion will be saved and re-used if the book is converted again. Since the highest priority in Bulk Conversion is given to the settings in the Bulk Conversion dialog, these will override any book specific settings. So you should only bulk convert books together that need similar settings. The exceptions are metadata and input format specific settings. Since the Bulk Conversion dialog does not have settings for these two categories, they will be taken from book specific settings (if any) or the defaults."
msgstr ""

#: ../../conversion.rst:602
# f1661e696f30442ea268f73be782a867
msgid "You can see the actual settings used during any conversion by clicking the rotating icon in the lower right corner and then double clicking the individual conversion job. This will bring up a conversion log that will contain the actual settings used, near the top."
msgstr ""

#: ../../conversion.rst:607
# 9bd8d6ac214f4aa68bef253fba4fc27a
msgid "Format specific tips"
msgstr ""

#: ../../conversion.rst:609
# 17397b989d8245a5956bb28475a545a4
msgid "Here you will find tips specific to the conversion of particular formats. Options specific to particular format, whether input or output are available in the conversion dialog under their own section, for example `TXT Input` or `EPUB Output`."
msgstr ""

#: ../../conversion.rst:614
# f5a6b258260847d6ba4783682f976d15
msgid "Convert Microsoft Word documents"
msgstr ""

#: ../../conversion.rst:616
# 1aa1db3c32964f2285b6278ad01a652f
msgid "|app| can automatically convert ``.docx`` files created by Microsoft Word 2007 and newer. Just add the file to |app| and click convert (make sure you are running the latest version of |app| as support for ``.docx`` files is very new)."
msgstr ""

#: ../../conversion.rst:621
# 3daf282b2dfc4130a1e5823c646c872c
msgid "There is a `demo .docx file <http://calibre-ebook.com/downloads/demos/demo.docx>`_ that demonstrates the capabilities of the |app| conversion engine. Just download it and convert it to EPUB or AZW3 to see what |app| can do."
msgstr ""

#: ../../conversion.rst:625
# d12feca957f44b6d865528387c09b55a
msgid "|app| will automatically generate a Table of Contents based on headings if you mark your headings with the ``Heading 1``, ``Heading 2``, etc. styles in Word. Open the output ebook in the calibre viewer and click the Table of Contents button to view the generated Table of Contents."
msgstr ""

#: ../../conversion.rst:631
# 18974893f0e9482b8428e3ed411f7f2c
msgid "Older .doc files"
msgstr ""

#: ../../conversion.rst:633
# 41f81c0a8efb431c886387f16c416a56
msgid "For older .doc files, you can save the document as HTML with Microsoft Word and then convert the resulting HTML file with |app|. When saving as HTML, be sure to use the \"Save as Web Page, Filtered\" option as this will produce clean HTML that will convert well. Note that Word produces really messy HTML, converting it can take a long time, so be patient. If you have a newer version of Word available, you can directly save it as docx as well."
msgstr ""

#: ../../conversion.rst:640
# f480cd0b5bbe4379ba7d76d251fa6b73
msgid "Another alternative is to use the free OpenOffice. Open your .doc file in OpenOffice and save it in OpenOffice's format .odt. |app| can directly convert .odt files."
msgstr ""

#: ../../conversion.rst:645
# 44b6bc397caa41a8b569d7725818f94d
msgid "Convert TXT documents"
msgstr ""

#: ../../conversion.rst:647
# 50dd493d45c74cf28d68b6517d10884e
msgid "TXT documents have no well defined way to specify formatting like bold, italics, etc, or document structure like paragraphs, headings, sections and so on, but there are a variety of conventions commonly used.  By default |app| attempts automatic detection of the correct formatting and markup based on those conventions."
msgstr ""

#: ../../conversion.rst:652
# 6cb7529496c04b6f8850284cfa7a2e46
msgid "TXT input supports a number of options to differentiate how paragraphs are detected."
msgstr ""

#: ../../conversion.rst:656
# 489358cb047745ef8e5f6690c7ec581d
msgid ":guilabel:`Paragraph Style: Auto`"
msgstr ""

#: ../../conversion.rst:655
# 89d5dda22c524391a3c25c66f36fc582
msgid "Analyzes the text file and attempts to automatically determine how paragraphs are defined.  This option will generally work fine, if you achieve undesirable results try one of the manual options."
msgstr ""

#: ../../conversion.rst:664
# 35ee3cc0b8d441fab37f681b4c8fe5e4
msgid ":guilabel:`Paragraph Style: Block`"
msgstr ""

#: ../../conversion.rst:659
# ff0c1987105f45d4ad27335cc3eb4ebc
msgid "Assumes one or more blank lines are a paragraph boundary::"
msgstr ""

#: ../../conversion.rst:671
# d2e70d4aab0f4091a8626f7c05f86481
msgid ":guilabel:`Paragraph Style: Single`"
msgstr ""

#: ../../conversion.rst:667
# f710da490a4b4748bd4cdcbcbe06400e
msgid "Assumes that every line is a paragraph::"
msgstr ""

#: ../../conversion.rst:682
# 4ed431b03ec74b92ba800c227ff64509
msgid ":guilabel:`Paragraph Style: Print`"
msgstr ""

#: ../../conversion.rst:674
# 93ac3c945c2e4481a9145190076d5396
msgid "Assumes that every paragraph starts with an indent (either a tab or 2+ spaces). Paragraphs end when the next line that starts with an indent is reached::"
msgstr ""

#: ../../conversion.rst:686
# 0199da42f64c4e4cba7072c89b6b4eb6
msgid ":guilabel:`Paragraph Style: Unformatted`"
msgstr ""

#: ../../conversion.rst:685
# d77c277b3bee49b4a0d7bbfaa2cab9df
msgid "Assumes that the document has no formatting, but does use hard line breaks.  Punctuation and median line length are used to attempt to re-create paragraphs."
msgstr ""

#: ../../conversion.rst:690
# 94319f8bf2a9455db846b96dfff4e96d
msgid ":guilabel:`Formatting Style: Auto`"
msgstr ""

#: ../../conversion.rst:689
# 89624a29a0864a3f9fa965a220de6278
msgid "Attemtps to detect the type of formatting markup being used.  If no markup is used then heuristic formatting will be applied."
msgstr ""

#: ../../conversion.rst:694
# 6811574349b14b52bae7385f232085c1
msgid ":guilabel:`Formatting Style: Heuristic`"
msgstr ""

#: ../../conversion.rst:693
# 8a16fa4d328c44c79f88884332d4d3bf
msgid "Analyzes the document for common chapter headings, scene breaks, and italicized words and applies the appropriate html markup during conversion."
msgstr ""

#: ../../conversion.rst:701
# a6436d6507ec4755930d3da177db0b75
msgid ":guilabel:`Formatting Style: Markdown`"
msgstr ""

#: ../../conversion.rst:697
# bbc9afb7fc194e59bbb133131e831a50
msgid "|app| also supports running TXT input though a transformation preprocessor known as markdown. Markdown allows for basic formatting to be added to TXT documents, such as bold, italics, section headings, tables, lists, a Table of Contents, etc. Marking chapter headings with a leading # and setting the chapter XPath detection expression to \"//h:h1\" is the easiest way to have a proper table of contents generated from a TXT document. You can learn more about the markdown syntax at `daringfireball <http://daringfireball.net/projects/markdown/syntax>`_."
msgstr ""

#: ../../conversion.rst:704
# a41bbbd346234027aba6cc6036e53d21
msgid ":guilabel:`Formatting Style: None`"
msgstr ""

#: ../../conversion.rst:704
# 2c34c5f748fd4fe7ab2f8ac2704d1e82
msgid "Applies no special formatting to the text, the document is converted to html with no other changes."
msgstr ""

#: ../../conversion.rst:709
# f320489c23644a2996b6dbffc073854a
msgid "Convert PDF documents"
msgstr ""

#: ../../conversion.rst:711
# 88a2269cf1d94082b95226ad1a5ddda0
msgid "PDF documents are one of the worst formats to convert from. They are a fixed page size and text placement format. Meaning, it is very difficult to determine where one paragraph ends and another begins. |app| will try to unwrap paragraphs using a configurable, :guilabel:`Line Un-Wrapping Factor`. This is a scale used to determine the length at which a line should be unwrapped. Valid values are a decimal between 0 and 1. The default is 0.45, just under the median line length. Lower this value to include more text in the unwrapping. Increase to include less. You can adjust this value in the conversion settings under :guilabel:`PDF Input`."
msgstr ""

#: ../../conversion.rst:718
# 31167369c8f74e939b7f10db0c6babe6
msgid "Also, they often have headers and footers as part of the document that will become included with the text. Use the Search and Replace panel to remove headers and footers to mitigate this issue. If the headers and footers are not removed from the text it can throw off the paragraph unwrapping. To learn how to use the header and footer removal options, read :ref:`regexptutorial`."
msgstr ""

#: ../../conversion.rst:723
# 12edbd7ac1794296a64b9d95343b1387
msgid "Some limitations of PDF input are:"
msgstr ""

#: ../../conversion.rst:725
# 8c2350c377524f3c9c2b193847b04ac7
msgid "Complex, multi-column, and image based documents are not supported."
msgstr ""

#: ../../conversion.rst:726
# d3104f6cf70a4f5fba18216b0fb63b8f
msgid "Extraction of vector images and tables from within the document is also not supported."
msgstr ""

#: ../../conversion.rst:727
# 08a810af4e814874a5cf9929bca2d650
msgid "Some PDFs use special glyphs to represent ll or ff or fi, etc. Conversion of these may or may not work depending on just how they are represented internally in the PDF."
msgstr ""

#: ../../conversion.rst:728
# 92855488c38a440ca11b368750712644
msgid "Links and Tables of Contents are not supported"
msgstr ""

#: ../../conversion.rst:729
# ecde35139528459eb55301eeab6d3c87
msgid "PDFs that use embedded non-unicode fonts to represent non-English characters will result in garbled output for those characters"
msgstr ""

#: ../../conversion.rst:730
# 8b34b0c691c547ddbbf2e50dccc8a00b
msgid "Some PDFs are made up of photographs of the page with OCRed text behind them. In such cases |app| uses the OCRed text, which can be very different from what you see when you view the PDF file"
msgstr ""

#: ../../conversion.rst:731
# d3d2a82bc8684fb38a5adb682cc0fb72
msgid "PDFs that are used to display complex text, like right to left languages and math typesetting will not convert correctly"
msgstr ""

#: ../../conversion.rst:733
# 2b968f29f261482e9ef9723e8e8586d9
msgid "To re-iterate **PDF is a really, really bad** format to use as input. If you absolutely must use PDF, then be prepared for an output ranging anywhere from decent to unusable, depending on the input PDF."
msgstr ""

#: ../../conversion.rst:737
# 52e4d01079704bdca573f5d0fd0061aa
msgid "Comic Book Collections"
msgstr ""

#: ../../conversion.rst:739
# 5c01d6cb86284008955ddab55ec934f0
msgid "A comic book collection is a .cbc file. A .cbc file is a zip file that contains other CBZ/CBR files. In addition the .cbc file must contain a simple text file called comics.txt, encoded in UTF-8. The comics.txt file must contain a list of the comics files inside the .cbc file, in the form filename:title, as shown below::"
msgstr ""

#: ../../conversion.rst:747
# 4e802a43fefd4670b27a6e4add6788db
msgid "The .cbc file will then contain::"
msgstr ""

#: ../../conversion.rst:754
# 8adcfb9611ab4eb1ab5e4213c070f742
msgid "|app| will automatically convert this .cbc file into a ebook with a Table of Contents pointing to each entry in comics.txt."
msgstr ""

#: ../../conversion.rst:758
# ccd74b77e5c94eff8410373d81254d6d
msgid "EPUB advanced formatting demo"
msgstr ""

#: ../../conversion.rst:760
# e64b352628044e9c96b2721121c67562
msgid "Various advanced formatting for EPUB files is demonstrated in this `demo file <http://calibre-ebook.com/downloads/demos/demo.epub>`_. The file was created from hand coded HTML using calibre and is meant to be used as a template for your own EPUB creation efforts."
msgstr ""

#: ../../conversion.rst:763
# ed9b026aeb1242299a7f9205caf61c20
msgid "The source HTML it was created from is available `demo.zip <http://calibre-ebook.com/downloads/demos/demo.zip>`_. The settings used to create the EPUB from the ZIP file are::"
msgstr ""

#: ../../conversion.rst:768
# d177c48f18734da292e469db7f7eb60d
msgid "Note that because this file explores the potential of EPUB, most of the advanced formatting is not going to work on readers less capable than |app|'s built-in EPUB viewer."
msgstr ""

#: ../../conversion.rst:772
# b26b83b78f7e475fb7df7010ff9abce2
msgid "Convert ODT documents"
msgstr ""

#: ../../conversion.rst:774
# 66c590f001fe47b385338cce7ca0ed2e
msgid "|app| can directly convert ODT (OpenDocument Text) files. You should use styles to format your document and minimize the use of direct formatting. When inserting images into your document you need to anchor them to the paragraph, images anchored to a page will all end up in the front of the conversion."
msgstr ""

#: ../../conversion.rst:777
# e4f86abaf73e42c7abdcbec5a3431311
msgid "To enable automatic detection of chapters, you need to mark them with the build-in styles called 'Heading 1', 'Heading 2', ..., 'Heading 6' ('Heading 1' equates to the HTML tag <h1>, 'Heading 2' to <h2> etc). When you convert in |app| you can enter which style you used into the 'Detect chapters at' box. Example:"
msgstr ""

#: ../../conversion.rst:779
# 15b7a46b34ed4090a644cdab233039a6
msgid "If you mark Chapters with style 'Heading 2', you have to set the 'Detect chapters at' box to ``//h:h2``"
msgstr ""

#: ../../conversion.rst:780
# a99acca5e24f466a9b19cc811acbb710
msgid "For a nested TOC with Sections marked with 'Heading 2' and the Chapters marked with 'Heading 3' you need to enter ``//h:h2|//h:h3``. On the Convert - TOC page set the 'Level 1 TOC' box to ``//h:h2`` and the 'Level 2 TOC' box to ``//h:h3``."
msgstr ""

#: ../../conversion.rst:782
# 7fc0d854ab6142119535638d5593887d
msgid "Well-known document properties (Title, Keywords, Description, Creator) are recognized and |app| will use the first image (not to small, and with good aspect-ratio) as the cover image."
msgstr ""

#: ../../conversion.rst:784
# 9090f34d5c33431eb7019266c9115344
msgid "There is also an advanced property conversion mode, which is activated by setting the custom property ``opf.metadata`` ('Yes or No' type) to Yes in your ODT document (File->Properties->Custom Properties). If this property is detected by |app|, the following custom properties are recognized (``opf.authors`` overrides document creator)::"
msgstr ""

#: ../../conversion.rst:797
# 4752e9ebe999455d985c0874413051a2
msgid "In addition to this, you can specify the picture to use as the cover by naming it ``opf.cover`` (right click, Picture->Options->Name) in the ODT. If no picture with this name is found, the 'smart' method is used.  As the cover detection might result in double covers in certain output formats, the process will remove the paragraph (only if the only content is the cover!) from the document. But this works only with the named picture!"
msgstr ""

#: ../../conversion.rst:804
# 193a5fe6574a4ffb85dd35728f883a31
msgid "To disable cover detection you can set the custom property ``opf.nocover`` ('Yes or No' type) to Yes in advanced mode."
msgstr ""

#: ../../conversion.rst:807
# 579848eac81941ab8832595d5201081c
msgid "Converting to PDF"
msgstr ""

#: ../../conversion.rst:809
# c0ff282239e74b668fa07cabd28caf79
msgid "The first, most important, setting to decide on when converting to PDF is the page size. By default, |app| uses a page size defined by the current :guilabel:`Output profile`. So if your output profile is set to Kindle, |app| will create a PDF with page size suitable for viewing on the small kindle screen. However, if you view this PDF file on a computer screen, then it will appear to have too large fonts. To create \"normal\" sized PDFs, use the :guilabel:`Override page size` option under :guilabel:`PDF Output` in the conversion dialog."
msgstr ""

#: ../../conversion.rst:818
# 2913dd84573644c6b3e7188896255edd
msgid "Headers and Footers"
msgstr ""

#: ../../conversion.rst:819
# 58acc7008e424a2290ea7bf8116915f8
msgid "You can insert arbitrary headers and footers on each page of the PDF by specifying header and footer templates. Templates are just snippets of HTML code that get rendered in the header and footer locations. For example, to display page numbers centered at the bottom of every page, in green, use the following footer template::"
msgstr ""

#: ../../conversion.rst:827
# 6edaf6582d0b40d28b82757404b92dad
msgid "|app| will automatically replace _PAGENUM_ with the current page number. You can even put different content on even and odd pages, for example the following header template will show the title on odd pages and the author on even pages::"
msgstr ""

#: ../../conversion.rst:833
# 610eb5cc809c4eb2bf33c370130a5231
msgid "|app| will automatically replace _TITLE_ and _AUTHOR_ with the title and author of the document being converted.  You can also display text at the left and right edges and change the font size, as demonstrated with this header template::"
msgstr ""

#: ../../conversion.rst:840
# 4167e01065ce414ca60765aa91d10626
msgid "This will display the title at the left and the author at the right, in a font size smaller than the main text."
msgstr ""

#: ../../conversion.rst:843
# 0651b3d2d92242849ee0f12cf4b00d79
msgid "You can also use the current section in templates, as shown below::"
msgstr ""

#: ../../conversion.rst:847
# 7a909d7575684ed4a6c14e6e1b01abd9
msgid "_SECTION_ is replaced by whatever the name of the current section is. These names are taken from the metadata Table of Contents in the document (the PDF Outline). If the document has no table of contents then it will be replaced by empty text. If a single PDF page has multiple sections, the first section on the page will be used."
msgstr ""

#: ../../conversion.rst:853
# fdf8d429065b45329a7e6383b69cb2a3
msgid "You can even use javascript inside the header and footer templates, for example, the following template will cause page numbers to start at 4 instead of 1::"
msgstr ""

#: ../../conversion.rst:859
# 9a235b67eb824be4aa35b61eecc8bb47
msgid "When adding headers and footers make sure you set the page top and bottom margins to large enough values, under the Page Setup section of the conversion dialog."
msgstr ""

#: ../../conversion.rst:864
# 955d91352d7d4ad49ed5e76b73bd36f7
msgid "Printable Table of Contents"
msgstr ""

#: ../../conversion.rst:866
# 51fab6141c8d4ac2b49306860ec8031b
msgid "You can also insert a printable Table of Contents at the end of the PDF that lists the page numbers for every section. This is very useful if you intend to print out the PDF to paper. If you wish to use the PDF on an electronic device, then the PDF Outline provides this functionality and is generated by default."
msgstr ""

#: ../../conversion.rst:871
# 0f0514361aed45cab850b7bf60601827
msgid "You can customize the look of the the generated Table of contents by using the Extra CSS conversion setting under the Look & Feel part of the conversion dialog. The default css used is listed below, simply copy it and make whatever changes you like."
msgstr ""

