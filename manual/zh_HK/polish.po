# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-01 08:15+0530\n"
"PO-Revision-Date: 2014-08-01 02:48+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Chinese (Hong Kong) (http://www.transifex.com/projects/p/calibre/language/zh_HK/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_HK\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 1baeb80d863247eaad2055c7212581b5
#: ../../polish.rst:7
msgid "API Documentation for the ebook editing tools"
msgstr ""

# 9916d7e0283a431b998df528ab07be3a
#: ../../polish.rst:9
msgid ""
"The ebook editing tools consist of a "
":class:`calibre.ebooks.oeb.polish.container.Container` object that "
"represents a book as a collection of HTML + resource files, and various "
"tools that can be used to perform operations on the container. All the tools"
" are in the form of module level functions in the various "
"``calibre.ebooks.oeb.polish.*`` modules."
msgstr ""

# b95fabaa5c034adaa06e329e3c98a734
#: ../../polish.rst:18
msgid "You obtain a container object for a book at a path like this::"
msgstr ""

# 04f23a9d998c4339b125a62cb6087cc7
#: ../../polish.rst:23
msgid ""
"If you are writing a plugin for the ebook editor, you get the current "
"container for the book being edited like this::"
msgstr ""

# 061337ee6e9f4c27b85e626c94ad5f1b
#: ../../polish.rst:33
msgid "The Container object"
msgstr ""

# 8db209b0dd9e4106b00ccb5b6f389e74
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:1
msgid ""
"A container represents an Open EBook as a directory full of files and an opf"
" file. There are two important concepts:"
msgstr ""

# 39bd1488f6284e3c98881def76b97d75
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:4
msgid ""
"The root directory. This is the base of the ebook. All the ebooks files are "
"inside this directory or in its sub-directories."
msgstr ""

# 13a0b08b25f64b548e4d4b68a7b2f2ab
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:7
msgid ""
"Names: These are paths to the books' files relative to the root directory. "
"They always contain POSIX separators and are unquoted. They can be thought "
"of as canonical identifiers for files in the book. Most methods on the "
"container object work with names. Names are always in the NFC unicode normal"
" form."
msgstr ""

# d380befe9a5b44ed9e60de4928a46d23
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:13
msgid ""
"Clones: the container object supports efficient on-disk cloning, which is "
"used to implement checkpoints in the ebook editor. In order to make this "
"work, you should never access files on the filesystem directly. Instead, use"
" :meth:`raw_data` or :meth:`open` to read/write to component files in the "
"book."
msgstr ""

# d53dc625ac604a0cb224fc2d39f81640
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:18
msgid ""
"When converting between hrefs and names use the methods provided by this "
"class, they assume all hrefs are quoted."
msgstr ""

# f62d13e478814c4ba4bd7e23bbcbac3d
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.abspath_to_name:1
msgid "Convert an absolute path to a canonical name relative to :attr:`root`"
msgstr ""

# 472cadb6e83943108360cd7985f1b7cc
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.abspath_to_name:3
msgid ""
"The base directory. By default the root for this container object is used."
msgstr ""

# 34e6abf415c94927928a0b8a20d21c26
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.add_file:1
msgid ""
"Add a file to this container. Entries for the file are automatically created"
" in the OPF manifest and spine (if the file is a text document)"
msgstr ""

# de2cce29ed444b5e9139124d12aaae64
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.add_name_to_manifest:1
msgid ""
"Add an entry to the manifest for a file with the specified name. Returns the"
" manifest id."
msgstr ""

# 80f0b0dcde1d4419b86174a4965f0e35
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.book_type:1
msgid "The type of book (epub for EPUB files and azw3 for AZW3 files)"
msgstr ""

# 5f30bf38d8314fe6846a4b2c21325b92
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.commit:1
msgid ""
"Commit all dirtied parsed objects to the filesystem and write out the ebook "
"file at outpath. :param output: The path to write the saved ebook file to. "
"If None, the path of the original book file is used. :param keep_parsed: If "
"True the parsed representations of committed items are kept in the cache."
msgstr ""

# 3d2b4b9b39054ee2814b53ee868f8c17
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.commit_item:1
msgid ""
"Commit a parsed object to disk (it is serialized and written to the "
"underlying file). If ``keep_parsed`` is True the parsed representation is "
"retained in the cache. See also: :meth:`parsed`"
msgstr ""

# 8fdc660f0578478297429779f1ca9ae7
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.decode:1
msgid "Automatically decode ``data`` into a ``unicode`` object."
msgstr ""

# c9b3411d8736475fae3925951ad599fe
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.decode:3
msgid ""
"Normalize returned unicode to the NFC normal form as is required by both the"
" EPUB and AZW3 formats."
msgstr ""

# aeee12f54c7f4ad693092c9854ed4fe0
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.dirty:1
msgid ""
"Mark the parsed object corresponding to name as dirty. See also: "
":meth:`parsed`."
msgstr ""

# 97e28a728421481ba3490305d19e56c4
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.exists:1
msgid ""
"True iff a file corresponding to the canonical name exists. Note that this "
"function suffers from the limitations of the underlying OS filesystem, in "
"particular case (in)sensitivity. So on a case insensitive filesystem this "
"will return True even if the case of name is different from the case of the "
"underlying filesystem file. See also :meth:`has_name`"
msgstr ""

# 9541aae44ad24e38ab9ecde6e748f9ab
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.filesize:1
msgid ""
"Return the size in bytes of the file represented by the specified canonical "
"name. Automatically handles dirtied parsed objects. See also: :meth:`parsed`"
msgstr ""

# 524e0e00019448f28b072c32515696aa
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.generate_item:1
msgid ""
"Add an item to the manifest with href derived from the given name. Ensures "
"uniqueness of href and id automatically. Returns generated item."
msgstr ""

# 081ef27a91bb475e85295acfa722c2bd
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.guess_type:1
msgid ""
"Return the expected mimetype for the specified file name based on its "
"extension."
msgstr ""

# 2b063006675c48079c7f11aa5c1a4907
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.guide_type_map:1
msgid "Mapping of guide type to canonical name"
msgstr ""

# f534d82d487f4032bfd2be3422cd9846
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.has_name:1
msgid ""
"Return True iff a file with the same canonical name as that specified "
"exists. Unlike :meth:`exists` this method is always case-sensitive."
msgstr ""

# 9223e2d0e3564d678ca1a33ff15f7b5c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.href_to_name:1
msgid ""
"Convert an href (relative to base) to a name. base must be a name or None, "
"in which case self.root is used."
msgstr ""

# 3dee780241204be6b94f509beab549de
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.insert_into_xml:1
msgid ""
"Insert item into parent (or append if index is None), fixing indentation. "
"Only works with self closing items."
msgstr ""

# 30b43c4146f84662ae78028905884030
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.iterlinks:1
msgid ""
"Iterate over all links in name. If get_line_numbers is True the yields "
"results of the form (link, line_number, offset). Where line_number is the "
"line_number at which the link occurs and offset is the number of characters "
"from the start of the line. Note that offset could actually encompass "
"several lines if not zero."
msgstr ""

# 5a8c2d84b9f648d2ace3c65480683e01
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.manifest_id_map:1
msgid "Mapping of manifest id to canonical names"
msgstr ""

# 8593c789f4a646d88fa5fe09806195a1
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.manifest_type_map:1
msgid ""
"Mapping of manifest media-type to list of canonical names of that media-type"
msgstr ""

# 50233591a18b4ccba15cb3ffa43939e2
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.mi:1
msgid ""
"The metadata of this book as a Metadata object. Note that this object is "
"constructed on the fly every time this property is requested, so use it "
"sparingly."
msgstr ""

# 025bd719b3c140faaca0e91d238e22fb
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.name_to_abspath:1
msgid "Convert a canonical name to an absolute OS dependant path"
msgstr ""

# 6087c0c17c814112b207b923ed47b545
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.name_to_href:1
msgid ""
"Convert a name to a href relative to base, which must be a name or None in "
"which case self.root is used as the base"
msgstr ""

# 5baf1bc78b5c47059589b4de42fd738c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_must_not_be_changed:1
msgid ""
"Set of names that must never be renamed. Depends on the ebook file format."
msgstr ""

# e19f337167bc492d907eab2095e6ddcc
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_must_not_be_removed:1
msgid ""
"Set of names that must never be deleted from the container. Depends on the "
"ebook file format."
msgstr ""

# d270656ce7114d1fbf6d5d91cc676437
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_need_not_be_manifested:1
msgid ""
"Set of names that are allowed to be missing from the manifest. Depends on "
"the ebook file format."
msgstr ""

# 96f0738c4e9747c8895b7c62d1bb9f17
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.open:1
msgid ""
"Open the file pointed to by name for direct read/write. Note that this will "
"commit the file if it is dirtied and remove it from the parse cache. You "
"must finish with this file before accessing the parsed version of it again, "
"or bad things will happen."
msgstr ""

# 803e8ac2d99342bcb531bd2733f989d6
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf:1
msgid "The parsed OPF file"
msgstr ""

# 3bb72e15f1be4ae6bea83f48b65ed220
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_get_or_create:1
msgid ""
"Convenience method to either return the first XML element with the specified"
" name or create it under the opf:package element and then return it, if it "
"does not already exist."
msgstr ""

# bad72e2935224f97b7ed112cff7bc561
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_version:1
msgid "The version set on the OPF's <package> element"
msgstr ""

# bc3cf0f164ed4a9c858ea9ada16ddfb5
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_xpath:1
msgid ""
"Convenience method to evaluate an XPath expression on the OPF file, has the "
"opf: and dc: namespace prefixes pre-defined."
msgstr ""

# 89b13f92a3744373a7d8ca57bb38c9e8
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.parsed:1
msgid ""
"Return a parsed representation of the file specified by name. For HTML and "
"XML files an lxml tree is returned. For CSS files a cssutils stylesheet is "
"returned. Note that parsed objects are cached for performance. If you make "
"any changes to the parsed object, you must call :meth:`dirty` so that the "
"container knows to update the cache. See also :meth:`replace`."
msgstr ""

# 2b0a2737249e467a8461808f51b39f57
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:1
msgid "Return the raw data corresponding to the file specified by name"
msgstr ""

# 4f5b169b2d204d9fa1b9050fe2c10e33
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:3
msgid ""
"If True and the file has a text based mimetype, decode it and return a "
"unicode object instead of raw bytes."
msgstr ""

# 68f298a83ad5486f8f3c512edcf4d962
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:4
msgid ""
"If True the returned unicode object is normalized to the NFC normal form as "
"is required for the EPUB and AZW3 file formats."
msgstr ""

# 07268e2dc30840409502baceb7b0446e
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.relpath:1
msgid ""
"Convert an absolute path (with os separators) to a path relative to base "
"(defaults to self.root). The relative path is *not* a name. Use "
":meth:`abspath_to_name` for that."
msgstr ""

# 387de113ee7a42a482fa2e1e3e7eb81f
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_from_spine:1
msgid ""
"Remove the specified items (by canonical name) from the spine. If "
"``remove_if_no_longer_in_spine`` is True, the items are also deleted from "
"the book, not just from the spine."
msgstr ""

# 3a87661e239042b78379df66cc7cf1d9
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_from_xml:1
msgid ""
"Removes item from parent, fixing indentation (works only with self closing "
"items)"
msgstr ""

# 05fffeff8c904fc1a274036581810131
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_item:1
msgid ""
"Remove the item identified by name from this container. This removes all "
"references to the item in the OPF manifest, guide and spine as well as from "
"any internal caches."
msgstr ""

# dbaebfca1b744cdbb70ffbf2dd16fd54
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.rename:1
msgid ""
"Renames a file from current_name to new_name. It automatically rebases all "
"links inside the file if the directory the file is in changes. Note however,"
" that links are not updated in the other files that could reference this "
"file. This is for performance, such updates should be done once, in bulk."
msgstr ""

# af1937ab9cab462d8659937c45d81f80
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.replace:1
msgid ""
"Replace the parsed object corresponding to name with obj, which must be a "
"similar object, i.e. an lxml tree for HTML/XML or a cssutils stylesheet for "
"a CSS file."
msgstr ""

# e63c3d0ffaac4de5bc86a322652380bb
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.replace_links:1
msgid ""
"Replace all links in name using replace_func, which must be a callable that "
"accepts a URL and returns the replaced URL. It must also have a 'replaced' "
"attribute that is set to True if any actual replacement is done. Convenient "
"ways of creating such callables are using the :class:`LinkReplacer` and "
":class:`LinkRebaser` classes."
msgstr ""

# 7946dfe2f08c4c428f2ce944549b0ff9
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.serialize_item:1
msgid ""
"Convert a parsed object (identified by canonical name) into a bytestring. "
"See :meth:`parsed`."
msgstr ""

# 72771ddcb68146a2bb87ca4466e93d14
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.set_spine:1
msgid ""
"Set the spine to be spine_items where spine_items is an iterable of the form"
" (name, linear). Will raise an error if one of the names is not present in "
"the manifest."
msgstr ""

# be502879b0a44c8893e7653ca4b21acb
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_items:1
msgid ""
"An iterator yielding canonical name for every item in the books' spine. See "
"also: :attr:`spine_iter` and :attr:`spine_items`."
msgstr ""

# ad76bce82daa4c15bea028a4cae54daa
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_iter:1
msgid ""
"An iterator that yields item, name is_linear for every item in the books' "
"spine. item is the lxml element, name is the canonical file name and "
"is_linear is True if the item is linear. See also: :attr:`spine_names` and "
":attr:`spine_items`."
msgstr ""

# 1e5330af08a646e5bcc0d84f61190f0b
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_names:1
msgid ""
"An iterator yielding name and is_linear for every item in the books' spine. "
"See also: :attr:`spine_iter` and :attr:`spine_items`."
msgstr ""

# d6d351bbdd93476bbb0659d4bc59dce4
#: ../../polish.rst:39
msgid "Managing component files in a container"
msgstr ""

# ae5c8ab07eb145318b4e119834829b72
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:1
msgid ""
"Replace links to files in the container. Will iterate over all files in the "
"container and change the specified links in them."
msgstr ""

# ba34120b5c7b447db2e8ac66587b06ae
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:3
msgid ""
"A mapping of old canonical name to new canonical name. For example: "
":code:`{'images/old.png': 'images/new.png'}`"
msgstr ""

# f7f458c2401949819adb996f2680d9b4
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:4
msgid ""
"A callable that takes two arguments ``(name, anchor)`` and returns a new "
"anchor. This is useful if you need to change the anchors in HTML files. By "
"default, it does nothing."
msgstr ""

# a9ca534c613644cabdeb38b2bea0979d
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:7
msgid "If False, links are not replaced in the OPF file."
msgstr ""

# c0351eb57171423f9779923434a618af
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.rename_files:1
msgid ""
"Rename files in the container, automatically updating all links to them."
msgstr ""

# 3cb11865ee9e4e61a854e165e8d78d53
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.rename_files:3
msgid ""
"A mapping of old canonical name to new canonical name, for example: "
":code:`{'text/chapter1.html': 'chapter1.html'}`."
msgstr ""

# 63c12f7484b643e483d54eb4cf726378
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.get_recommended_folders:1
msgid ""
"Return the folders that are recommended for the given filenames. The "
"recommendation is based on where the majority of files of the same type are "
"located in the container. If no files of a particular type are present, the "
"recommended folder is assumed to be the folder containing the OPF file."
msgstr ""

# 13145599f21d48a5a08e96c0b5af8dea
#: ../../polish.rst:50
msgid "Pretty printing and auto fixing parse errors"
msgstr ""

# 76c115e4447b407a866cd2e3eb2bb6b1
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.fix_html:1
msgid ""
"Fix any parsing errors in the HTML represented as a string in raw. Fixing is"
" done using the HTML 5 parsing algorithm."
msgstr ""

# 1c701626619b4ad5a18307529ac7ae6b
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.fix_all_html:1
msgid ""
"Fix any parsing errors in all HTML files in the container. Fixing is done "
"using the HTML 5 parsing algorithm."
msgstr ""

# ba88bea6143f46c281687c3f949f9200
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_html:1
msgid "Pretty print the HTML represented as a string in raw"
msgstr ""

# cbe92bd6b3774b119a64128e3ea6baa1
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_css:1
msgid "Pretty print the CSS represented as a string in raw"
msgstr ""

# a565b6cb6f334ef3ba67867e09ffb1c4
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_xml:1
msgid ""
"Pretty print the XML represented as a string in raw. If ``name`` is the name"
" of the OPF, extra OPF-specific prettying is performed."
msgstr ""

# b1d2438b62cd459b87b59f37f2d5490d
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_all:1
msgid "Pretty print all HTML/CSS/XML files in the container"
msgstr ""

# d8ba8c50a7ac408c8410ed695763848f
#: ../../polish.rst:68
msgid "Managing book jackets"
msgstr ""

# 42e35d3ec8624aa485ccd6052bf166b7
#: ../../../src/calibre/ebooks/oeb/polish/jacket.pydocstring of
#: calibre.ebooks.oeb.polish.jacket.remove_jacket:1
msgid ""
"Remove an existing jacket, if ant. Returns False if no existing jacket was "
"found."
msgstr ""

# 842de2d6a1174f1fb94f170c29c140b5
#: ../../../src/calibre/ebooks/oeb/polish/jacket.pydocstring of
#: calibre.ebooks.oeb.polish.jacket.add_or_replace_jacket:1
msgid ""
"Either create a new jacket from the book's metadata or replace an existing "
"jacket. Returns True if an existing jacket was replaced."
msgstr ""

# 4e394a98b7774ca9b5fde83434e5ed13
#: ../../polish.rst:77
msgid "Splitting and merging of files"
msgstr ""

# 205220a5f4dc44b889f11944b9c7723d
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:1
msgid ""
"Split the file specified by name at the position specified by loc_or_xpath. "
"Splitting automatically migrates all links and references to the affected "
"files."
msgstr ""

# f88aeba7db264d7aa6e1d9098b79780f
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:5
msgid ""
"Should be an XPath expression such as //h:div[@id=\"split_here\"]. Can also "
"be a *loc* which is used internally to implement splitting in the preview "
"panel."
msgstr ""

# 188ac958b79748c283ddc8ca796f360a
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:8
msgid ""
"If True the split occurs before the identified element otherwise after it."
msgstr ""

# 60d86cec571b409bb21805ac4f4826e6
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:9
msgid "Used internally"
msgstr ""

# 15f665bb641a4777acdd5a9420e3b9ef
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.multisplit:1
msgid ""
"Split the specified file at multiple locations (all tags that match the "
"specified XPath expression. See also: :func:`split`. Splitting automatically"
" migrates all links and references to the affected files."
msgstr ""

# 4d55a6d569334b20b80dff7179ddfb14
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.multisplit:5
msgid ""
"If True the splits occur before the identified element otherwise after it."
msgstr ""

# e5daadee37d643929823e30f240217e1
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:1
msgid ""
"Merge the specified files into a single file, automatically migrating all "
"links and references to the affected files. The file must all either be HTML"
" or CSS files."
msgstr ""

# ecf0b5a6f5b84bd085a8fbf1edf7866b
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:4
msgid "Must be either ``'text'`` for HTML files or ``'styles'`` for CSS files"
msgstr ""

# 957f83d451004733b4ff3a9924ecd93b
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:5
msgid "The list of files to be merged"
msgstr ""

# 1855b27de08a42d189da3fae2084a8ad
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:6
msgid ""
"Which of the merged files is the *master* file, that is, the file that will "
"remain after merging."
msgstr ""

# ddd50f59b68b48b89bf85951d98060fa
#: ../../polish.rst:88
msgid "Managing covers"
msgstr ""

# de732db31eae4c36add05368a54177f1
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:1
msgid "Set the cover of the book to the image pointed to by cover_path."
msgstr ""

# 48ea3f3522b84aa0a900aa4e16090e66
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:3
msgid ""
"Either the absolute path to an image file or the canonical name of an image "
"in the book. When using an image int he book, you must also set options, see"
" below."
msgstr ""

# 642d496ee4284af2a8421d71aef6b360
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:6
msgid ""
"An optional callable that takes a single argument. It will be called with "
"information about the tasks being processed."
msgstr ""

# dd2e52ca80394da187ab18c2fd4cda67
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:8
msgid ""
"None or a dictionary that controls how the cover is set. The dictionary can "
"have entries: **keep_aspect**: True or False  (Preserve aspect ratio of "
"covers in EPUB) **no_svg**: True or False  (Use an SVG cover wrapper in the "
"EPUB titlepage) **existing**: True or False  (``cover_path`` refers to an "
"existing image in the book)"
msgstr ""

# 3005b10f117841b4a8fd0343a3e6e104
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_cover:1
msgid "Mark the specified image as the cover image."
msgstr ""

# ee300d1c77394e72a104a77348b44df2
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_titlepage:1
msgid "Mark the specified HTML file as the titlepage of the EPUB."
msgstr ""

# 29bc40af5fc54b4296cb8c39a9ebc46a
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_titlepage:3
msgid "If True the HTML file is moved to the start of the spine"
msgstr ""

# 10ef13f4e9a44fd6a25ec555e1429f72
#: ../../polish.rst:99
msgid "Working with CSS"
msgstr ""

# 91d7ef684c0540ca8d679d8e68b5435b
#: ../../../src/calibre/ebooks/oeb/polish/fonts.pydocstring of
#: calibre.ebooks.oeb.polish.fonts.change_font:1
msgid ""
"Change a font family from old_name to new_name. Changes all occurrences of "
"the font family in stylesheets, style tags and style attributes. If the "
"old_name refers to an embedded font, it is removed. You can set new_name to "
"None to remove the font family instead of changing it."
msgstr ""

# 483043d6b9de492ab3d4240c255095f8
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:1
msgid ""
"Remove all unused CSS rules from the book. An unused CSS rule is one that "
"does not match any actual content."
msgstr ""

# 95ff818c718346418fd6f1714ff29155
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:3
msgid ""
"An optional callable that takes a single argument. It is called with "
"information about the operations being performed."
msgstr ""

# d57f3b1be9494f179ee246e6ea7f4cff
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:4
msgid ""
"If True, class attributes in the HTML that do not match any CSS rules are "
"also removed."
msgstr ""

# cfcb5d318d2e40b29a77c89a3de028ed
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:1
msgid "Remove the specified CSS properties from all CSS rules in the book."
msgstr ""

# a777e1f340f1442682979991c59a8ec7
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:3
msgid ""
"Set of properties to remove. For example: :code:`{'font-family', 'color'}`."
msgstr ""

# 9f69f7ea8666457bae5cdd9cffff685f
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:4
msgid ""
"The files from which to remove the properties. Defaults to all HTML and CSS "
"files in the book."
msgstr ""

# a41da398e8dc4f02ac8dd13ddd944f6e
#: ../../polish.rst:111
msgid "Working with the Table of Contents"
msgstr ""

# d1b3577576b6484e87335a907630ab54
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_xpaths:1
msgid ""
"Generate a Table of Contents from a list of XPath expressions. Each "
"expression in the list corresponds to a level of the generate ToC. For "
"example: :code:`['//h:h1', '//h:h2', '//h:h3']` will generate a three level "
"table of contents from the ``<h1>``, ``<h2>`` and ``<h3>`` tags."
msgstr ""

# 6d8ebfd894684c3c9f9a12e107318ff5
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_links:1
msgid "Generate a Table of Contents from links in the book."
msgstr ""

# 02b782b7b7134aa6afe806c2fce67c91
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_files:1
msgid "Generate a Table of Contents from files in the book."
msgstr ""

# a2cb47c5100243c39c5e471eef322517
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.create_inline_toc:1
msgid ""
"Create an inline (HTML) Table of Contents from an existing NCX table of "
"contents."
msgstr ""

# 1ec278e681644e898f1cc18b9755ec4e
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.create_inline_toc:3
msgid "The title for this table of contents."
msgstr ""

# f5697dcdb4924dffad6356e7957c714d
#: ../../polish.rst:125
msgid "Controlling the editor's user interface"
msgstr ""

# 58aba3c1d94346c1a92b7b909073acea
#: ../../polish.rst:127
msgid ""
"The ebook editor's user interface is controlled by a single global *Boss* "
"object. This has many useful methods that can be used in plugin code to "
"perform common tasks."
msgstr ""

# 6b13e6a255854e3e83416be2bb7a0133
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.add_savepoint:1
msgid "Create a restore checkpoint with the name specified as ``msg``"
msgstr ""

# 7d63a238b3f84941b89260e5e8834cc5
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.apply_container_update_to_gui:1
msgid ""
"Update all the components of the user interface to reflect the latest data "
"in the current book container."
msgstr ""

# 6356c48389154881bc2a483f04593fe2
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.apply_container_update_to_gui:3
msgid ""
"If True, the book will be marked as modified, so the user will be prompted "
"to save it when quitting."
msgstr ""

# c67e68333b3b43638e4e1325366830ba
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.close_editor:1
msgid "Close the editor that is editing the file specified by ``name``"
msgstr ""

# 2ad6a5c928f149c1bebc803c24762e3e
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.commit_all_editors_to_container:1
msgid ""
"Commit any changes that the user has made to files open in editors to the "
"container. You should call this method before performing any actions on the "
"current container"
msgstr ""

# 34f67c7eeadd4448a4d9a68384b0bf61
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.currently_editing:1
msgid ""
"Return the name of the file being edited currently or None if no file is "
"being edited"
msgstr ""

# ec9e79bdeca64ac5ac94a5577bb9fd95
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.edit_file:1
msgid "Open the file specified by name in an editor"
msgstr ""

# 8c328630f5564d5686e8f8b8f55077d0
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.edit_file:3
msgid ""
"The media type of the file, for example, ``'text/html'``. If not specified "
"it is guessed from the file extension."
msgstr ""

# 424fad3708d7419a8edc69763ef73459
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.edit_file:4
msgid "A template to initialize the opened editor with"
msgstr ""

# 9772dc362cb14e7c9a79ae741403fc5d
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.open_book:1
msgid ""
"Open the ebook at ``path`` for editing. Will show an error if the ebook is "
"not in a supported format or the current book has unsaved changes."
msgstr ""

# 1291e35a7eb94857a9cdbf433ce5ea45
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.open_book:3
msgid "The name of a file inside the newly openend book to start editing."
msgstr ""

# d333b2607637490f9bdf0849afa6bb95
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.rewind_savepoint:1
msgid ""
"Undo the previous creation of a restore checkpoint, useful if you create a "
"checkpoint, then abort the operation with no changes"
msgstr ""

# 9d50ea368bcb4e8785e648695061401a
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.save_book:1
msgid "Save the book. Saving is performed in the background"
msgstr ""

# e2152c481fad4d41a3f85193043e5852
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.set_modified:1
msgid "Mark the book as having been modified"
msgstr ""

# fa25c4ed6dae4ac08136a4333231bd9f
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_current_diff:1
msgid "Show the changes to the book from its last checkpointed state"
msgstr ""

# 1f846741d3074883813e33a98eef3ab2
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_current_diff:3
msgid ""
"If True the diff dialog will have a button to allow the user to revert all "
"changes"
msgstr ""

# 1b88cfe5a1ad4e7abc381a73ad6d0d37
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_current_diff:4
msgid ""
"A container object to compare the current container to. If None, the "
"previously checkpointed container is used"
msgstr ""

# d3eff833298246d5b74fbfa437f79a56
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_editor:1
msgid "Show the editor that is editing the file specified by ``name``"
msgstr ""

# 31591919dca54e43aa71767942ce266c
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.sync_live_css_to_editor:1
msgid ""
"Sync the Live CSS panel to the current cursor position in the current editor"
msgstr ""

# 4a2f95d1f2ff4b23a932771bd7b97b8f
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.sync_preview_to_editor:1
msgid ""
"Sync the position of the preview panel to the current cursor position in the"
" current editor"
msgstr ""
