# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.46.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-25 09:34+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../news_recipe.rst:6
# f1443377eb2b47e6ac7805c2a4385cf6
msgid "API Documentation for recipes"
msgstr ""

#: ../../news_recipe.rst:11
# ab3de86c28564e5391f428d6070d9255
msgid "The API for writing recipes is defined by the :class:`BasicNewsRecipe`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe:1
# a18ea6328a764579b54bd9c8b9214bb1
msgid "Base class that contains logic needed in all recipes. By overriding progressively more of the functionality in this class, you can make progressively more customized/powerful recipes. For a tutorial introduction to creating recipes, see :doc:`news`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.abort_recipe_processing:1
# 13f9489388bf484c8bfa5fb6dc2de60f
msgid "Causes the recipe download system to abort the download of this recipe, displaying a simple feedback message to the user."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.add_toc_thumbnail:1
# c8ade5fa8fde46aeb419908272a991f2
msgid "Call this from populate_article_metadata with the src attribute of an <img> tag from the article that is appropriate for use as the thumbnail representing the article in the Table of Contents. Whether the thumbnail is actually used is device dependent (currently only used by the Kindles). Note that the referenced image must be one that was successfully downloaded, otherwise it will be ignored."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.adeify_images:1
# be9aea8637de4e9eb80c7b67400def04
msgid "If your recipe when converted to EPUB has problems with images when viewed in Adobe Digital Editions, call this method from within :meth:`postprocess_html`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.cleanup:1
# 1b21b3ba9e1b4cc5bdba259684e7a537
msgid "Called after all articles have been download. Use it to do any cleanup like logging out of subscription sites, etc."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.clone_browser:1
# cbf0c7b2e4b340ebb082821311dfbc88
msgid "Clone the browser br. Cloned browsers are used for multi-threaded downloads, since mechanize is not thread safe. The default cloning routines should capture most browser customization, but if you do something exotic in your recipe, you should override this method in your recipe and clone manually."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.clone_browser:7
# ef0af77aaa554a788e9b8b963a0584ea
msgid "Cloned browser instances use the same, thread-safe CookieJar by default, unless you have customized cookie handling."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.default_cover:1
# baf01a12b95142dca2a1ab30fa78637e
msgid "Create a generic cover for recipes that dont have a cover"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.download:1
# 43be07c5f90d4e52902808dbc04c46cf
msgid "Download and pre-process all articles from the feeds in this recipe. This method should be called only once on a particular Recipe instance. Calling it more than once will lead to undefined behavior. :return: Path to index.html"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.extract_readable_article:1
# 7f08f5f0f34f48f7939cdce3ea656267
msgid "Extracts main article content from 'html', cleans up and returns as a (article_html, extracted_title) tuple. Based on the original readability algorithm by Arc90."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_article_url:1
# f343ade3505d4085b5630c43c81bf422
msgid "Override in a subclass to customize extraction of the :term:`URL` that points to the content for each article. Return the article URL. It is called with `article`, an object representing a parsed article from a feed. See `feedparser <http://packages.python.org/feedparser/>`_. By default it looks for the original link (for feeds syndicated via a service like feedburner or pheedo) and if found, returns that or else returns `article.link <http://packages.python.org/feedparser/reference-entry-link.html>`_."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_browser:1
# 62c66d9c67f24f418c0440c3561fa77b
msgid "Return a browser instance used to fetch documents from the web. By default it returns a `mechanize <http://wwwsearch.sourceforge.net/mechanize/>`_ browser instance that supports cookies, ignores robots.txt, handles refreshes and has a mozilla firefox user agent."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_browser:6
# e246ab6425934494ba2a79667ceeec08
msgid "If your recipe requires that you login first, override this method in your subclass. For example, the following code is used in the New York Times recipe to login for full access::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_cover_url:1
# e43b916dd1004978ba71d564ba50b3b3
msgid "Return a :term:`URL` to the cover image for this issue or `None`. By default it returns the value of the member `self.cover_url` which is normally `None`. If you want your recipe to download a cover for the e-book override this method in your subclass, or set the member variable `self.cover_url` before this method is called."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_feeds:1
# cca8c1f8d112482a95007d47a1c2a8ae
msgid "Return a list of :term:`RSS` feeds to fetch for this profile. Each element of the list must be a 2-element tuple of the form (title, url). If title is None or an empty string, the title from the feed is used. This method is useful if your recipe needs to do some processing to figure out the list of feeds to download. If so, override in your subclass."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_masthead_title:1
# 7243b65c1f504a4bbfd1fe124bf90dae
msgid "Override in subclass to use something other than the recipe title"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_masthead_url:1
# 4174d2808d6240199008d35942f86fa5
msgid "Return a :term:`URL` to the masthead image for this issue or `None`. By default it returns the value of the member `self.masthead_url` which is normally `None`. If you want your recipe to download a masthead for the e-book override this method in your subclass, or set the member variable `self.masthead_url` before this method is called. Masthead images are used in Kindle MOBI files."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:1
# fb3e179f8b9c4a6f9f8895f5eeffc0bd
msgid "If you set `articles_are_obfuscated` this method is called with every article URL. It should return the path to a file on the filesystem that contains the article HTML. That file is processed by the recursive HTML fetching engine, so it can contain links to pages/images on the web."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:6
# 1b3ae56394be4b5d8686348bd3152b1c
msgid "This method is typically useful for sites that try to make it difficult to access article content automatically."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.image_url_processor:1
# 93f6f2bb81364b0d9cb99764757e7891
msgid "Perform some processing on image urls (perhaps removing size restrictions for dynamically generated images, etc.) and return the precessed URL."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:1
# 21f23e7c435949fc8b22b1fd02123b31
msgid "Convenience method that takes an URL to the index page and returns a `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ of it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:5
# f42c0c717cef48bd968927a1b3b5ed8b
msgid "`url_or_raw`: Either a URL or the downloaded index page as a string"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:1
# 740c15f022be4cec9b5d5e12d31cdf3b
msgid "Return True if the link should be followed or False otherwise. By default, raises NotImplementedError which causes the downloader to ignore it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:5
# 4b757efe586a43418fdaa99ea79e737a
msgid "The URL to be followed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:6
# 9a74b5c480b74c63960b3c36689f21be
msgid "The Tag from which the URL was derived"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:1
# 62f20e80a3d24130a7f791213e3b5970
msgid "This method is used to login to a website that uses javascript for its login form. After the login is complete, the cookies returned from the website are copied to a normal (non-javascript) browser and the download proceeds using those cookies."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:6
# 14735b499521438f90b40abd0a23f8b9
msgid "An example implementation::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:15
# 8fb5e8bd2cd64211bfcfbcb664044a82
msgid "Note that you can also select forms with CSS2 selectors, like this::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_feeds:1
# 8df032c7ee764d7aa5583b46c17c66f2
msgid "Create a list of articles from the list of feeds returned by :meth:`BasicNewsRecipe.get_feeds`. Return a list of :class:`Feed` objects."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:1
# 16ad03b3724442bdab2414d2bb5a5543
msgid "This method should be implemented in recipes that parse a website instead of feeds to generate a list of articles. Typical uses are for news sources that have a \"Print Edition\" webpage that lists all the articles in the current print edition. If this function is implemented, it will be used in preference to :meth:`BasicNewsRecipe.parse_feeds`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:7
# fc59d752dfe442dba5941585475301c5
msgid "It must return a list. Each element of the list must be a 2-element tuple of the form ``('feed title', list of articles)``."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:10
# 3f20b6e1f1be457f86e11f1b1e43532f
msgid "Each list of articles must contain dictionaries of the form::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:23
# 3e1e7ba15c5c4f26bc9ef3cc0b0f3825
msgid "For an example, see the recipe for downloading `The Atlantic`. In addition, you can add 'author' for the author of the article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:26
# eb66aa9c94ee424e86ff57bf0626a3b8
msgid "If you want to abort processing for some reason and have calibre show the user a simple message instead of an error, call :meth:`abort_recipe_processing`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.populate_article_metadata:1
# 48e92b09608e4adaa78c3abe880baa33
msgid "Called when each HTML page belonging to article is downloaded. Intended to be used to get article metadata like author/summary/etc. from the parsed HTML (soup). :param article: A object of class :class:`calibre.web.feeds.Article`. If you change the summary, remember to also change the text_summary :param soup: Parsed HTML belonging to this article :param first: True iff the parsed HTML is the first page of the article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:1
# b2c08b6734bc4fb0894f72885f110761
msgid "Run any needed post processing on the parsed downloaded e-book."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:3
# 437fb69ea2724da4bb5491bf7c3fe2eb
msgid "An OEBBook object"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:4
# e88149265bd64ef2a28d1bacc962df8b
msgid "Conversion options"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:1
# 42b424e810714fae948061707ca22064
msgid "This method is called with the source of each downloaded :term:`HTML` file, after it is parsed for links and images. It can be used to do arbitrarily powerful post-processing on the :term:`HTML`. It should return `soup` after processing it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
# 1338c4f9539941869def5326641fd222
# f1edf96352ab49acbc15d67401c6a251
msgid "A `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_  instance containing the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:7
# d690deb65ace490390b0a4f0a555302b
msgid "True if this is the first page of an article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:1
# fddc359d8c1442328241cced5b99e3a7
msgid "This method is called with the source of each downloaded :term:`HTML` file, before it is parsed for links and images. It is called after the cleanup as specified by remove_tags etc. It can be used to do arbitrarily powerful pre-processing on the :term:`HTML`. It should return `soup` after processing it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:7
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:8
# 18b2099be5f5496e8e475bc57c429836
# e94cbe1bdbcf42b2b32cc236797688bd
msgid "`soup`: A `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ instance containing the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:1
# ca4f4a546171407889dbf3e210be2aec
msgid "This method is called with the source of each downloaded :term:`HTML` file, before it is parsed into an object tree. raw_html is a unicode string representing the raw HTML downloaded from the web. url is the URL from which the HTML was downloaded."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:6
# 0d979411fcf34f85afb7e78090a924f2
msgid "Note that this method acts *before* preprocess_regexps."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:8
# 866f2056c95b4f0fb754bc8d73ec25e5
msgid "This method must return the processed raw_html as a unicode object."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.print_version:1
# 8f1188eb23854ae8917fe716bd8cc860
msgid "Take a `url` pointing to the webpage with article content and return the :term:`URL` pointing to the print version of the article. By default does nothing. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:1
# d3d9fa52d52b444cac76e4ee93892302
msgid "This method is called with the source of each downloaded :term:`HTML` file, before any of the cleanup attributes like remove_tags, keep_only_tags are applied. Note that preprocess_regexps will have already been applied. It is meant to allow the recipe to skip ad pages. If the soup represents an ad page, return the HTML of the real page. Otherwise return None."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:1
# 17823a0134f44a1d981077bd57a2da2b
msgid "Convenience method to sort the titles in `index` according to `weights`. `index` is sorted in place. Returns `index`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:4
# 67d3048dedee4a45a948992d906fb313
msgid "`index`: A list of titles."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:6
# 9a74835ad2d94894bc499b6bb3b74e0e
msgid "`weights`: A dictionary that maps weights to titles. If any titles in index are not in weights, they are assumed to have a weight of 0."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:1
# ace54d4ced3347818d4dc4874379fd70
msgid "Convenience method to take a `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ `Tag` and extract the text from it recursively, including any CDATA sections and alt tag attributes. Return a possibly empty unicode string."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:6
# 13e9cba66c284c058f03fc2173b7f596
msgid "`use_alt`: If `True` try to use the alt attribute for tags that don't have any textual content"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:9
# c5bc47f808ee4c3eb905970e3d669d93
msgid "`tag`: `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ `Tag`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.articles_are_obfuscated:1
# 29652f43b84f4e8d9d8781b105134c41
msgid "Set to True and implement :meth:`get_obfuscated_article` to handle websites that try to make it difficult to scrape content."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup:1
# 4327b268ffcd40e8811cdd8da9a18918
msgid "Automatically extract all the text from downloaded article pages. Uses the algorithms from the readability project. Setting this to True, means that you do not have to worry about cleaning up the downloaded HTML manually (though manual cleanup will always be superior)."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup_keep:1
# 439b5803c74440e1badd0e97cb21ab32
msgid "Specify elements that the auto cleanup algorithm should never remove The syntax is a XPath expression. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.center_navbar:1
# bc4ed96e07724fb896b35244a78b6af5
msgid "If True the navigation bar is center aligned, otherwise it is left aligned"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images:1
# 079bc829577e4a4ca202923115286886
msgid "Set this to False to ignore all scaling and compression parameters and pass images through unmodified. If True and the other compression parameters are left at their default values, jpeg images will be scaled to fit in the screen dimensions set by the output profile and compressed to size at most (w * h)/16 where w x h are the scaled image dimensions."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_auto_size:1
# 03b285d231cc49a9ab9f14006038cbd8
msgid "The factor used when auto compressing jpeg images. If set to None, auto compression is disabled. Otherwise, the images will be reduced in size to (w * h)/compress_news_images_auto_size bytes if possible by reducing the quality level, where w x h are the image dimensions in pixels. The minimum jpeg quality will be 5/100 so it is possible this constraint will not be met.  This parameter can be overridden by the parameter compress_news_images_max_size which provides a fixed maximum size for images. Note that if you enable scale_news_images_to_device then the image will first be scaled and then its quality lowered until its size is less than (w * h)/factor where w and h are now the *scaled* image dimensions. In other words, this compression happens after scaling."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_max_size:1
# 83e8a28c305a43ac982c9c43bce86cbe
msgid "Set jpeg quality so images do not exceed the size given (in KBytes). If set, this parameter overrides auto compression via compress_news_images_auto_size. The minimum jpeg quality will be 5/100 so it is possible this constraint will not be met."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.conversion_options:1
# e4f9a0de6b8042328a9cd236c7e6e0da
msgid "Recipe specific options to control the conversion of the downloaded content into an e-book. These will override any user or plugin specified values, so only use if absolutely necessary. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.cover_margins:1
# 842cceef801e419a94a2682b44aea5b1
msgid "By default, the cover image returned by get_cover_url() will be used as the cover for the periodical.  Overriding this in your recipe instructs calibre to render the downloaded cover into a frame whose width and height are expressed as a percentage of the downloaded cover. cover_margins = (10, 15, '#ffffff') pads the cover with a white margin 10px on the left and right, 15px on the top and bottom. Color names defined at http://www.imagemagick.org/script/color.php Note that for some reason, white does not always work on windows. Use #ffffff instead"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.delay:1
# 02ce2d9502bf4abd978de7cc292581b0
msgid "Delay between consecutive downloads in seconds. The argument may be a floating point number to indicate a more precise time."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.description:1
# 98c6accf3bee4b2db80b86e41e563fce
msgid "A couple of lines that describe the content this recipe downloads. This will be used primarily in a GUI that presents a list of recipes."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.encoding:1
# f53a497eb2cb45e6bb3d88a8563f3d4f
msgid "Specify an override encoding for sites that have an incorrect charset specification. The most common being specifying ``latin1`` and using ``cp1252``. If None, try to detect the encoding. If it is a callable, the callable is called with two arguments: The recipe object and the source to be decoded. It must return the decoded source."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.extra_css:1
# 1cdea157030c47ebb335f04cf619f08f
msgid "Specify any extra :term:`CSS` that should be added to downloaded :term:`HTML` files It will be inserted into `<style>` tags, just before the closing `</head>` tag thereby overriding all :term:`CSS` except that which is declared using the style attribute on individual :term:`HTML` tags. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.feeds:1
# 0b0a9c22661f47d29f0ec337296fe6ae
msgid "List of feeds to download Can be either ``[url1, url2, ...]`` or ``[('title1', url1), ('title2', url2),...]``"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:1
# 7fe0a829587c47a198ed1e87bb097795
msgid "List of regular expressions that determines which links to ignore If empty it is ignored. Used only if is_link_wanted is not implemented. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:7
# bc9e9fef63524c06ab44b969309fe11d
msgid "will remove all URLs that have `ads.doubleclick.net` in them."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:9
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:9
# b6975656c0cf4cbcaa04d9d9c4b748e6
# 34bd646347f84820a3be016285f0f278
msgid "Only one of :attr:`BasicNewsRecipe.match_regexps` or :attr:`BasicNewsRecipe.filter_regexps` should be defined."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:1
# 6d21774d4fc34f9d9922a7032eef4b91
msgid "Ignore duplicates of articles that are present in more than one section. A duplicate article is an article that has the same title and/or URL. To ignore articles with the same title, set this to: ignore_duplicate_articles = {'title'} To use URLs instead, set it to: ignore_duplicate_articles = {'url'} To match on title or URL, set it to: ignore_duplicate_articles = {'title', 'url'}"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:1
# 1eb6a461594a47f9b2abb4fe0728bb09
msgid "Keep only the specified tags and their children. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. If this list is not empty, then the `<body>` tag will be emptied and re-filled with the tags that match the entries in this list. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:8
# 19fef8f96c7d4aa1a6b54df34f8f4301
msgid "will keep only tags that have an `id` attribute of `\"content\"` or `\"heading\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.language:1
# 148ef8770ce947ac8df58d2fc6e8b302
msgid "The language that the news is in. Must be an ISO-639 code either two or three characters long"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.masthead_url:1
# f905dac4601e419bb8d8eb98f53b1d7a
msgid "By default, calibre will use a default image for the masthead (Kindle only). Override this in your recipe to provide a url to use as a masthead."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:1
# 6088821bd8544b57933c4fe8265f6d83
msgid "List of regular expressions that determines which links to follow If empty, it is ignored. Used only if is_link_wanted is not implemented. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:7
# 14fb40b7cf05440aa749d88f213fa9e0
msgid "will match all URLs that have `page=some number` in them."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.max_articles_per_feed:1
# 3750c5e52c88487491055a0352251630
msgid "Maximum number of articles to download from each feed. This is primarily useful for feeds that don't have article dates. For most feeds, you should use :attr:`BasicNewsRecipe.oldest_article`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.needs_subscription:1
# dd3889cb3e444284861cbf07d55f35e5
msgid "If True the GUI will ask the user for a username and password to use while downloading If set to \"optional\" the use of a username and password becomes optional"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.no_stylesheets:1
# db149ac4463244e69a07db19b428e7ad
msgid "Convenient flag to disable loading of stylesheets for websites that have overly complex stylesheets unsuitable for conversion to ebooks formats If True stylesheets are not downloaded and processed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.oldest_article:1
# 3b440ddebf6d40d394ddbedd9ddc90ae
msgid "Oldest article to download from this news source. In days."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:1
# d5cadd5795a04ad2a4435e6b64cdbe3e
msgid "List of :term:`regexp` substitution rules to run on the downloaded :term:`HTML`. Each element of the list should be a two element tuple. The first element of the tuple should be a compiled regular expression and the second a callable that takes a single match object and returns a string to replace the match. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:12
# 88f8463f706640a0b6632f9acb0c2386
msgid "will remove everythong from `<!--Article ends here-->` to `</body>`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.publication_type:1
# 41581f033501400280ac6e2db1edbd86
msgid "Publication type Set to newspaper, magazine or blog. If set to None, no publication type metadata will be written to the opf file."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.recipe_disabled:1
# 0df80ec07daa406a92552af8a6921b49
msgid "Set to a non empty string to disable this recipe The string will be used as the disabled message"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.recursions:1
# 377856836c2d4904a0ee5ac7db3394c7
msgid "Number of levels of links to follow on article webpages"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_attributes:1
# 1a53d34a27ff4500b60444685824e807
msgid "List of attributes to remove from all tags For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_empty_feeds:1
# 6df2c4fc26f349bc998d56f11e3ec6b2
msgid "If True empty feeds are removed from the output. This option has no effect if parse_index is overridden in the sub class. It is meant only for recipes that return a list of feeds using `feeds` or :meth:`get_feeds`. It is also used if you use the ignore_duplicate_articles option."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_javascript:1
# f8a9aec8727c48b1b6f66b0bb37aef73
msgid "Convenient flag to strip all javascript tags from the downloaded HTML"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:1
# 15f1bb009c5d4efb93e13e8a4801fef6
msgid "List of tags to be removed. Specified tags are removed from downloaded HTML. A tag is specified as a dictionary of the form::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:9
# 635e69777e7e4e558562d88436b8294a
msgid "All keys are optional. For a full explanation of the search criteria, see `Beautiful Soup <http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html#Searching%20the%20Parse%20Tree>`_ A common example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:15
# db4b37edb00f45b880809390424cafd8
msgid "This will remove all `<div class=\"advert\">` tags and all their children from the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:1
# c730ef6f45d3478c9284c3fec20d9103
msgid "Remove all tags that occur after the specified tag. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:7
# 59370b9e403e4684a2a6253e26a56713
msgid "will remove all tags after the first element with `id=\"content\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:1
# bd980f9e5fb44cb896a8353c84606f0e
msgid "Remove all tags that occur before the specified tag. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:7
# 31d6f982cb614c85a8bdb8407ca6c0c4
msgid "will remove all tags before the first element with `id=\"content\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.requires_version:1
# 7749f27c07b040deb751662e059d1778
msgid "Minimum calibre version needed to use this recipe"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.reverse_article_order:1
# f74afe5b011d46979a5bc3b7101f005b
msgid "Reverse the order of articles in each feed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.scale_news_images:1
# 11fd2bdfac6b4473ba9dc95af87d3f8f
msgid "Maximum dimensions (w,h) to scale images to. If scale_news_images_to_device is True this is set to the device screen dimensions set by the output profile unless there is no profile set, in which case it is left at whatever value it has been assigned (default None)."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.scale_news_images_to_device:1
# 4ff205b7fc78482dac1bd2c480e9c3af
msgid "Rescale images to fit in the device screen dimensions set by the output profile. Ignored if no output profile is set."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.simultaneous_downloads:1
# 2f602f8721444155b07a5b0e76663293
msgid "Number of simultaneous downloads. Set to 1 if the server is picky. Automatically reduced to 1 if :attr:`BasicNewsRecipe.delay` > 0"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.summary_length:1
# 03b71fe1e3b94c5eaac34ec98a8346fd
msgid "Max number of characters in the short description"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.template_css:1
# 38bb3afe420d4de2ba40320a853e5297
msgid "The CSS that is used to style the templates, i.e., the navigation bars and the Tables of Contents. Rather than overriding this variable, you should use `extra_css` in your recipe to customize look and feel."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.timefmt:1
# 8e54f3bbdaab4fc7b7b31c34f71f7a3f
msgid "The format string for the date shown on the first page. By default: Day_Name, Day_Number Month_Name Year"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.timeout:1
# ff17b66a7f164c068c50ea65f23ce3c5
msgid "Timeout for fetching files from server in seconds"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.title:1
# ae469b690a2a4b3c8fdfcb969c3c485a
msgid "The title to use for the ebook"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.use_embedded_content:1
# 6fdb49b9ff924d5d9f722f26a1f49c3c
msgid "Normally we try to guess if a feed has full articles embedded in it based on the length of the embedded content. If `None`, then the default guessing is used. If `True` then the we always assume the feeds has embedded content and if `False` we always assume the feed does not have embedded content."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.use_javascript_to_login:1
# f734eb633067465dba2e059061235fb7
msgid "If you set this True, then calibre will use javascript to login to the website. This is needed for some websites that require the use of javascript to login. If you set this to True you must implement the :meth:`javascript_login` method, to do the actual logging in."
msgstr ""

