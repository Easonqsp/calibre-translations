# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.47.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-01 08:15+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../news_recipe.rst:6
# f9deb27a8b56411d8608ae4c29f751a0
msgid "API Documentation for recipes"
msgstr ""

#: ../../news_recipe.rst:11
# 997fc98eb5044de3b93596573ae3f773
msgid "The API for writing recipes is defined by the :class:`BasicNewsRecipe`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe:1
# ee52bf459b634ad0abf93d8c65673983
msgid "Base class that contains logic needed in all recipes. By overriding progressively more of the functionality in this class, you can make progressively more customized/powerful recipes. For a tutorial introduction to creating recipes, see :doc:`news`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.abort_recipe_processing:1
# b4277653a7cb469189994a7df3d68ff3
msgid "Causes the recipe download system to abort the download of this recipe, displaying a simple feedback message to the user."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.add_toc_thumbnail:1
# 61e3b6044faf47d5b3e124993596f515
msgid "Call this from populate_article_metadata with the src attribute of an <img> tag from the article that is appropriate for use as the thumbnail representing the article in the Table of Contents. Whether the thumbnail is actually used is device dependent (currently only used by the Kindles). Note that the referenced image must be one that was successfully downloaded, otherwise it will be ignored."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.adeify_images:1
# 3bd5a63ec93f45a2abfbde3482d9428b
msgid "If your recipe when converted to EPUB has problems with images when viewed in Adobe Digital Editions, call this method from within :meth:`postprocess_html`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.cleanup:1
# fa0fcbe8783a4565a3e6ae8769131773
msgid "Called after all articles have been download. Use it to do any cleanup like logging out of subscription sites, etc."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.clone_browser:1
# b101fcf949204e2a9f70d9c51dac38ed
msgid "Clone the browser br. Cloned browsers are used for multi-threaded downloads, since mechanize is not thread safe. The default cloning routines should capture most browser customization, but if you do something exotic in your recipe, you should override this method in your recipe and clone manually."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.clone_browser:7
# e704636d6e1a4d68a9dedd20350051de
msgid "Cloned browser instances use the same, thread-safe CookieJar by default, unless you have customized cookie handling."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.default_cover:1
# 1ee3a7de0f834473a5944182c3652eca
msgid "Create a generic cover for recipes that dont have a cover"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.download:1
# 5f73203901324ed0b44f5789e36a37d9
msgid "Download and pre-process all articles from the feeds in this recipe. This method should be called only once on a particular Recipe instance. Calling it more than once will lead to undefined behavior. :return: Path to index.html"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.extract_readable_article:1
# ee2ab95b907446e4930e5e8bed273a3f
msgid "Extracts main article content from 'html', cleans up and returns as a (article_html, extracted_title) tuple. Based on the original readability algorithm by Arc90."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_article_url:1
# e81797bc9d8643bc8c8d51587bb327bf
msgid "Override in a subclass to customize extraction of the :term:`URL` that points to the content for each article. Return the article URL. It is called with `article`, an object representing a parsed article from a feed. See `feedparser <http://packages.python.org/feedparser/>`_. By default it looks for the original link (for feeds syndicated via a service like feedburner or pheedo) and if found, returns that or else returns `article.link <http://packages.python.org/feedparser/reference-entry-link.html>`_."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_browser:1
# a0843d05673e4d2c9f949bd8eddc2db7
msgid "Return a browser instance used to fetch documents from the web. By default it returns a `mechanize <http://wwwsearch.sourceforge.net/mechanize/>`_ browser instance that supports cookies, ignores robots.txt, handles refreshes and has a mozilla firefox user agent."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_browser:6
# 7d94d74553aa4e94aec14b63b4bcb2b9
msgid "If your recipe requires that you login first, override this method in your subclass. For example, the following code is used in the New York Times recipe to login for full access::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_cover_url:1
# f9d0ae878b3343ffa44ca057b7c03629
msgid "Return a :term:`URL` to the cover image for this issue or `None`. By default it returns the value of the member `self.cover_url` which is normally `None`. If you want your recipe to download a cover for the e-book override this method in your subclass, or set the member variable `self.cover_url` before this method is called."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_feeds:1
# 910b204d66b3488ca8d02411f71c1652
msgid "Return a list of :term:`RSS` feeds to fetch for this profile. Each element of the list must be a 2-element tuple of the form (title, url). If title is None or an empty string, the title from the feed is used. This method is useful if your recipe needs to do some processing to figure out the list of feeds to download. If so, override in your subclass."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_masthead_title:1
# 788569b7e4af40de9d16625d9cc94261
msgid "Override in subclass to use something other than the recipe title"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_masthead_url:1
# de6138ccc00048de9e1a7e53f25b919f
msgid "Return a :term:`URL` to the masthead image for this issue or `None`. By default it returns the value of the member `self.masthead_url` which is normally `None`. If you want your recipe to download a masthead for the e-book override this method in your subclass, or set the member variable `self.masthead_url` before this method is called. Masthead images are used in Kindle MOBI files."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:1
# e2f0d287de964e9d8df76588774b97fa
msgid "If you set `articles_are_obfuscated` this method is called with every article URL. It should return the path to a file on the filesystem that contains the article HTML. That file is processed by the recursive HTML fetching engine, so it can contain links to pages/images on the web."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:6
# f523768481064cacb8c0ee302f22572c
msgid "This method is typically useful for sites that try to make it difficult to access article content automatically."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.image_url_processor:1
# 3faf3ea5726641c59be13ab44842d4ba
msgid "Perform some processing on image urls (perhaps removing size restrictions for dynamically generated images, etc.) and return the precessed URL."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:1
# f6b2f80eed474e3c86330a7f456ceb0c
msgid "Convenience method that takes an URL to the index page and returns a `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ of it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:5
# 39741c1ffb0944c3a3d462a561af2aad
msgid "`url_or_raw`: Either a URL or the downloaded index page as a string"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:1
# 3437002c1f3b4a0884fcc4f8aa7e5611
msgid "Return True if the link should be followed or False otherwise. By default, raises NotImplementedError which causes the downloader to ignore it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:5
# 009d47a62e3b4818a3ecf6644e40e9d3
msgid "The URL to be followed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:6
# 41f524e1b1a0428e8d7cd4719d6d77ad
msgid "The Tag from which the URL was derived"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:1
# d9b46d5c18d8471bb12ec22c2afdcae9
msgid "This method is used to login to a website that uses javascript for its login form. After the login is complete, the cookies returned from the website are copied to a normal (non-javascript) browser and the download proceeds using those cookies."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:6
# 5463b0c9ebba4f50870311973bcc536c
msgid "An example implementation::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:15
# 16e6361672bf4b17bd5897ffc4fcee4d
msgid "Note that you can also select forms with CSS2 selectors, like this::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_feeds:1
# a5ff5755b68e4877a85642cd443cf203
msgid "Create a list of articles from the list of feeds returned by :meth:`BasicNewsRecipe.get_feeds`. Return a list of :class:`Feed` objects."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:1
# 9173378ec2ad4d71914764567f13bbcf
msgid "This method should be implemented in recipes that parse a website instead of feeds to generate a list of articles. Typical uses are for news sources that have a \"Print Edition\" webpage that lists all the articles in the current print edition. If this function is implemented, it will be used in preference to :meth:`BasicNewsRecipe.parse_feeds`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:7
# c6074445569a4aa28c4a3c93f099fa9f
msgid "It must return a list. Each element of the list must be a 2-element tuple of the form ``('feed title', list of articles)``."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:10
# 3cdffbe45ea543548487ba3d7e1244be
msgid "Each list of articles must contain dictionaries of the form::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:23
# f078b5a49749479daea282d5c8ac2fb9
msgid "For an example, see the recipe for downloading `The Atlantic`. In addition, you can add 'author' for the author of the article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:26
# c029d468b8854999a7e9c9351f417624
msgid "If you want to abort processing for some reason and have calibre show the user a simple message instead of an error, call :meth:`abort_recipe_processing`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.populate_article_metadata:1
# 50ff908f07a04740bedc3c13d973692f
msgid "Called when each HTML page belonging to article is downloaded. Intended to be used to get article metadata like author/summary/etc. from the parsed HTML (soup). :param article: A object of class :class:`calibre.web.feeds.Article`. If you change the summary, remember to also change the text_summary :param soup: Parsed HTML belonging to this article :param first: True iff the parsed HTML is the first page of the article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:1
# 9f7dc09d999d45209d94bbc4b9d4c2c8
msgid "Run any needed post processing on the parsed downloaded e-book."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:3
# 49b1a032dd0f4280877d02e984c7fc36
msgid "An OEBBook object"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:4
# b90e9263bc27448f950ad74d3737ac72
msgid "Conversion options"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:1
# 70a2dcde6563419a8418fa8c446db251
msgid "This method is called with the source of each downloaded :term:`HTML` file, after it is parsed for links and images. It can be used to do arbitrarily powerful post-processing on the :term:`HTML`. It should return `soup` after processing it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
# dfd33b2f800a49639195d3b4ac4ec67b
# 42b5db51f35647e389ca9e72560fc888
msgid "A `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_  instance containing the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:7
# 71db30644fb54c8ca1db36d5ce643441
msgid "True if this is the first page of an article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:1
# 4ede13deed4f405f84590d3b098cb9ff
msgid "This method is called with the source of each downloaded :term:`HTML` file, before it is parsed for links and images. It is called after the cleanup as specified by remove_tags etc. It can be used to do arbitrarily powerful pre-processing on the :term:`HTML`. It should return `soup` after processing it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:7
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:8
# fd0a6fb700c9431681d5443ed61bc0a0
# 67796f9302ac47c18757ad081ef95d2a
msgid "`soup`: A `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ instance containing the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:1
# f5bb9095dfd547eeadc10021aad621e9
msgid "This method is called with the source of each downloaded :term:`HTML` file, before it is parsed into an object tree. raw_html is a unicode string representing the raw HTML downloaded from the web. url is the URL from which the HTML was downloaded."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:6
# c186fb6647ea417b8a1ac6f531294b3c
msgid "Note that this method acts *before* preprocess_regexps."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:8
# 3ca94786b617406ca2767cd4000796ce
msgid "This method must return the processed raw_html as a unicode object."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.print_version:1
# 8e46bf13d8874d92b7e212468e1b1db5
msgid "Take a `url` pointing to the webpage with article content and return the :term:`URL` pointing to the print version of the article. By default does nothing. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:1
# 031a322d0e624722ab869922706d2ed1
msgid "This method is called with the source of each downloaded :term:`HTML` file, before any of the cleanup attributes like remove_tags, keep_only_tags are applied. Note that preprocess_regexps will have already been applied. It is meant to allow the recipe to skip ad pages. If the soup represents an ad page, return the HTML of the real page. Otherwise return None."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:1
# db3426fdc53a46048a711d5c856eac07
msgid "Convenience method to sort the titles in `index` according to `weights`. `index` is sorted in place. Returns `index`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:4
# 1feb190b037c4d7aa3c720c5ca46ce70
msgid "`index`: A list of titles."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:6
# b96f9bf2d89d421ebca3c91c35176638
msgid "`weights`: A dictionary that maps weights to titles. If any titles in index are not in weights, they are assumed to have a weight of 0."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:1
# dd3fa38f4c9747aa83752e3fa88c089e
msgid "Convenience method to take a `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ `Tag` and extract the text from it recursively, including any CDATA sections and alt tag attributes. Return a possibly empty unicode string."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:6
# 91bbd5a15ec6430185ce2c005b9d5dc8
msgid "`use_alt`: If `True` try to use the alt attribute for tags that don't have any textual content"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:9
# ab497848323145cbb93f69558b26d129
msgid "`tag`: `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ `Tag`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.articles_are_obfuscated:1
# b701de7fc1df4b2382aa66cd83f13a8b
msgid "Set to True and implement :meth:`get_obfuscated_article` to handle websites that try to make it difficult to scrape content."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup:1
# 0c5698e04c934853a600730439f33008
msgid "Automatically extract all the text from downloaded article pages. Uses the algorithms from the readability project. Setting this to True, means that you do not have to worry about cleaning up the downloaded HTML manually (though manual cleanup will always be superior)."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup_keep:1
# 10a62a91e1dd4650b0108aa3cf4676ae
msgid "Specify elements that the auto cleanup algorithm should never remove The syntax is a XPath expression. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.center_navbar:1
# d2a081f64517427a8ea659a854af4197
msgid "If True the navigation bar is center aligned, otherwise it is left aligned"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images:1
# 36970642c9b74d8faf1668b10c9c110f
msgid "Set this to False to ignore all scaling and compression parameters and pass images through unmodified. If True and the other compression parameters are left at their default values, jpeg images will be scaled to fit in the screen dimensions set by the output profile and compressed to size at most (w * h)/16 where w x h are the scaled image dimensions."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_auto_size:1
# d336dcdccb904252bd86c05f1f5f6521
msgid "The factor used when auto compressing jpeg images. If set to None, auto compression is disabled. Otherwise, the images will be reduced in size to (w * h)/compress_news_images_auto_size bytes if possible by reducing the quality level, where w x h are the image dimensions in pixels. The minimum jpeg quality will be 5/100 so it is possible this constraint will not be met.  This parameter can be overridden by the parameter compress_news_images_max_size which provides a fixed maximum size for images. Note that if you enable scale_news_images_to_device then the image will first be scaled and then its quality lowered until its size is less than (w * h)/factor where w and h are now the *scaled* image dimensions. In other words, this compression happens after scaling."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_max_size:1
# 2fc0151211c9405a86d91cc8fce23a9e
msgid "Set jpeg quality so images do not exceed the size given (in KBytes). If set, this parameter overrides auto compression via compress_news_images_auto_size. The minimum jpeg quality will be 5/100 so it is possible this constraint will not be met."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.conversion_options:1
# f1a6dc56149a4ceab3f8c1371a7b35bd
msgid "Recipe specific options to control the conversion of the downloaded content into an e-book. These will override any user or plugin specified values, so only use if absolutely necessary. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.cover_margins:1
# 4e2ed1d54a9a496a9d7dba77caa48d52
msgid "By default, the cover image returned by get_cover_url() will be used as the cover for the periodical.  Overriding this in your recipe instructs calibre to render the downloaded cover into a frame whose width and height are expressed as a percentage of the downloaded cover. cover_margins = (10, 15, '#ffffff') pads the cover with a white margin 10px on the left and right, 15px on the top and bottom. Color names defined at http://www.imagemagick.org/script/color.php Note that for some reason, white does not always work on windows. Use #ffffff instead"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.delay:1
# 003d7c19de2e41bd9c035519eb47ec8f
msgid "Delay between consecutive downloads in seconds. The argument may be a floating point number to indicate a more precise time."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.description:1
# 332a06b6e3764be3b468b829f4b45f6e
msgid "A couple of lines that describe the content this recipe downloads. This will be used primarily in a GUI that presents a list of recipes."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.encoding:1
# c38c332183b4458aa86f38d82ed583f9
msgid "Specify an override encoding for sites that have an incorrect charset specification. The most common being specifying ``latin1`` and using ``cp1252``. If None, try to detect the encoding. If it is a callable, the callable is called with two arguments: The recipe object and the source to be decoded. It must return the decoded source."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.extra_css:1
# 05b015098d484bc3bf6a2f351d64d811
msgid "Specify any extra :term:`CSS` that should be added to downloaded :term:`HTML` files It will be inserted into `<style>` tags, just before the closing `</head>` tag thereby overriding all :term:`CSS` except that which is declared using the style attribute on individual :term:`HTML` tags. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.feeds:1
# 0bac37df5550471fa8d7144fd1d827e7
msgid "List of feeds to download Can be either ``[url1, url2, ...]`` or ``[('title1', url1), ('title2', url2),...]``"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:1
# 19a4649306a042b2a000fa052eec65c2
msgid "List of regular expressions that determines which links to ignore If empty it is ignored. Used only if is_link_wanted is not implemented. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:7
# 12d593760af641aba4b167d39f5afbf8
msgid "will remove all URLs that have `ads.doubleclick.net` in them."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:9
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:9
# ee199372140f48bb8ce3e9c5b37666da
# aec9e43d30724d86907e8e945b5bc53c
msgid "Only one of :attr:`BasicNewsRecipe.match_regexps` or :attr:`BasicNewsRecipe.filter_regexps` should be defined."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:1
# 17b14a5bcb6847d6af3890fe3c034608
msgid "Ignore duplicates of articles that are present in more than one section. A duplicate article is an article that has the same title and/or URL. To ignore articles with the same title, set this to: ignore_duplicate_articles = {'title'} To use URLs instead, set it to: ignore_duplicate_articles = {'url'} To match on title or URL, set it to: ignore_duplicate_articles = {'title', 'url'}"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:1
# 81577849f3a24ed9905aeaf7d432d0e1
msgid "Keep only the specified tags and their children. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. If this list is not empty, then the `<body>` tag will be emptied and re-filled with the tags that match the entries in this list. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:8
# daf01b0dedcf4a749227e6e3566015bb
msgid "will keep only tags that have an `id` attribute of `\"content\"` or `\"heading\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.language:1
# 70d65e5e37864281a87dbf96454f630d
msgid "The language that the news is in. Must be an ISO-639 code either two or three characters long"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.masthead_url:1
# ee4af869e1dd457da61c0f706b16e8b2
msgid "By default, calibre will use a default image for the masthead (Kindle only). Override this in your recipe to provide a url to use as a masthead."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:1
# b3c31dab45984edbbbbce46f8c41c27a
msgid "List of regular expressions that determines which links to follow If empty, it is ignored. Used only if is_link_wanted is not implemented. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:7
# 1c2be84bce61409a986786704cd95b45
msgid "will match all URLs that have `page=some number` in them."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.max_articles_per_feed:1
# 9edda67ff3ce4f369d911d5c539d2574
msgid "Maximum number of articles to download from each feed. This is primarily useful for feeds that don't have article dates. For most feeds, you should use :attr:`BasicNewsRecipe.oldest_article`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.needs_subscription:1
# d74d96d9494a4564a707f95234e6236f
msgid "If True the GUI will ask the user for a username and password to use while downloading If set to \"optional\" the use of a username and password becomes optional"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.no_stylesheets:1
# 2264c2b20add45f8a83befed09ca8894
msgid "Convenient flag to disable loading of stylesheets for websites that have overly complex stylesheets unsuitable for conversion to ebooks formats If True stylesheets are not downloaded and processed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.oldest_article:1
# 65de3695e9124712a0470a641e0ad546
msgid "Oldest article to download from this news source. In days."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:1
# 155792d8ac6947f69c76186ca9190577
msgid "List of :term:`regexp` substitution rules to run on the downloaded :term:`HTML`. Each element of the list should be a two element tuple. The first element of the tuple should be a compiled regular expression and the second a callable that takes a single match object and returns a string to replace the match. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:12
# cb885d45ba724992bb20e885524296fa
msgid "will remove everythong from `<!--Article ends here-->` to `</body>`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.publication_type:1
# 0665c6f6b18e4bf099c6b8e23d483081
msgid "Publication type Set to newspaper, magazine or blog. If set to None, no publication type metadata will be written to the opf file."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.recipe_disabled:1
# 153e09a991cd4db8a04c25806621f1e3
msgid "Set to a non empty string to disable this recipe The string will be used as the disabled message"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.recursions:1
# d0da98a52c7249fda65eea3b4494a2c0
msgid "Number of levels of links to follow on article webpages"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_attributes:1
# c991e8ec05aa44559f7010681351ab11
msgid "List of attributes to remove from all tags For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_empty_feeds:1
# 029955f532c040b8a1c8ee1e5efc1685
msgid "If True empty feeds are removed from the output. This option has no effect if parse_index is overridden in the sub class. It is meant only for recipes that return a list of feeds using `feeds` or :meth:`get_feeds`. It is also used if you use the ignore_duplicate_articles option."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_javascript:1
# 9c5dcea6ac3b482f89d0baa7d6195ad6
msgid "Convenient flag to strip all javascript tags from the downloaded HTML"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:1
# 08ef8c1799164e0c9485e3c99e824716
msgid "List of tags to be removed. Specified tags are removed from downloaded HTML. A tag is specified as a dictionary of the form::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:9
# ba7e9b010f9944c4b3bbf6ecc7a34e6a
msgid "All keys are optional. For a full explanation of the search criteria, see `Beautiful Soup <http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html#Searching%20the%20Parse%20Tree>`_ A common example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:15
# 8d710c35da364a02bcfc84a62d6be576
msgid "This will remove all `<div class=\"advert\">` tags and all their children from the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:1
# 209dca23bd3c49da8f396cce49920274
msgid "Remove all tags that occur after the specified tag. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:7
# fb5f5668e6d84c0ba7ed90f678cce8bd
msgid "will remove all tags after the first element with `id=\"content\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:1
# 2ea1e98e47a448aba5a530acf6236f6a
msgid "Remove all tags that occur before the specified tag. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:7
# ce748d2af79a417dbc70620b88fce286
msgid "will remove all tags before the first element with `id=\"content\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.requires_version:1
# 11c6eaad1e8c48a4a51c39c38ce636b8
msgid "Minimum calibre version needed to use this recipe"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.reverse_article_order:1
# 6834c245e87e4f7eb1e85f35649d578d
msgid "Reverse the order of articles in each feed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.scale_news_images:1
# c322074c14f34445972a67eccafb5134
msgid "Maximum dimensions (w,h) to scale images to. If scale_news_images_to_device is True this is set to the device screen dimensions set by the output profile unless there is no profile set, in which case it is left at whatever value it has been assigned (default None)."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.scale_news_images_to_device:1
# ca86eb0ca2cb47c1a2e0b5402e1e58af
msgid "Rescale images to fit in the device screen dimensions set by the output profile. Ignored if no output profile is set."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.simultaneous_downloads:1
# 831f4cd9fa654a978e47684524178dc0
msgid "Number of simultaneous downloads. Set to 1 if the server is picky. Automatically reduced to 1 if :attr:`BasicNewsRecipe.delay` > 0"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.summary_length:1
# 1be7e85e72294758afa29aaa05d07706
msgid "Max number of characters in the short description"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.template_css:1
# 5a2ad8ae25664b8e9fd575c86caaa677
msgid "The CSS that is used to style the templates, i.e., the navigation bars and the Tables of Contents. Rather than overriding this variable, you should use `extra_css` in your recipe to customize look and feel."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.timefmt:1
# fdac97e150ab4517b8fc30d40bc5f8d5
msgid "The format string for the date shown on the first page. By default: Day_Name, Day_Number Month_Name Year"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.timeout:1
# 20a0a457f69343b38fea4480768dde57
msgid "Timeout for fetching files from server in seconds"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.title:1
# c73203b76ffc4a81a53a768a1b1576a9
msgid "The title to use for the ebook"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.use_embedded_content:1
# beb55f98ea1a4c8098ab101f5372035c
msgid "Normally we try to guess if a feed has full articles embedded in it based on the length of the embedded content. If `None`, then the default guessing is used. If `True` then the we always assume the feeds has embedded content and if `False` we always assume the feed does not have embedded content."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.use_javascript_to_login:1
# e93d0cb902ae4d7986c0c4ad2e20e661
msgid "If you set this True, then calibre will use javascript to login to the website. This is needed for some websites that require the use of javascript to login. If you set this to True you must implement the :meth:`javascript_login` method, to do the actual logging in."
msgstr ""

