# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.48.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-08 08:53+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../news_recipe.rst:6
# 4e876c7df34343db9496d0888af71205
msgid "API Documentation for recipes"
msgstr ""

#: ../../news_recipe.rst:11
# 332fca0c13c74b64be7c43d3ddb1622b
msgid "The API for writing recipes is defined by the :class:`BasicNewsRecipe`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe:1
# bb266ee0942c4101ba76cbd1f677d590
msgid "Base class that contains logic needed in all recipes. By overriding progressively more of the functionality in this class, you can make progressively more customized/powerful recipes. For a tutorial introduction to creating recipes, see :doc:`news`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.abort_recipe_processing:1
# 9213139b01774aadab1038c7c2caed1b
msgid "Causes the recipe download system to abort the download of this recipe, displaying a simple feedback message to the user."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.add_toc_thumbnail:1
# e4ad23bf1a5841b9b827a5f3c1687675
msgid "Call this from populate_article_metadata with the src attribute of an <img> tag from the article that is appropriate for use as the thumbnail representing the article in the Table of Contents. Whether the thumbnail is actually used is device dependent (currently only used by the Kindles). Note that the referenced image must be one that was successfully downloaded, otherwise it will be ignored."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.adeify_images:1
# 6fbcb79db5664fa2b93e9415672823cb
msgid "If your recipe when converted to EPUB has problems with images when viewed in Adobe Digital Editions, call this method from within :meth:`postprocess_html`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.cleanup:1
# 4cbb9b41602446bf83f1bd8ed1536bdc
msgid "Called after all articles have been download. Use it to do any cleanup like logging out of subscription sites, etc."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.clone_browser:1
# 48fba5713ebe41fa940d284d933e15f8
msgid "Clone the browser br. Cloned browsers are used for multi-threaded downloads, since mechanize is not thread safe. The default cloning routines should capture most browser customization, but if you do something exotic in your recipe, you should override this method in your recipe and clone manually."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.clone_browser:7
# 185014c065cb412292ab0c3cfaeda361
msgid "Cloned browser instances use the same, thread-safe CookieJar by default, unless you have customized cookie handling."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.default_cover:1
# 6e0282378a104d539a75f51f35842d28
msgid "Create a generic cover for recipes that dont have a cover"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.download:1
# a51708f42c6b4548bcb7cf687bfc5e2b
msgid "Download and pre-process all articles from the feeds in this recipe. This method should be called only once on a particular Recipe instance. Calling it more than once will lead to undefined behavior. :return: Path to index.html"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.extract_readable_article:1
# 3d1cbcfc8bb14bdea1f4c986d3ec4072
msgid "Extracts main article content from 'html', cleans up and returns as a (article_html, extracted_title) tuple. Based on the original readability algorithm by Arc90."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_article_url:1
# e7bcf72ed9844f78971368674206f45f
msgid "Override in a subclass to customize extraction of the :term:`URL` that points to the content for each article. Return the article URL. It is called with `article`, an object representing a parsed article from a feed. See `feedparser <http://packages.python.org/feedparser/>`_. By default it looks for the original link (for feeds syndicated via a service like feedburner or pheedo) and if found, returns that or else returns `article.link <http://packages.python.org/feedparser/reference-entry-link.html>`_."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_browser:1
# 1b6a995ec55547bc9e3bb5f9c28ae5e7
msgid "Return a browser instance used to fetch documents from the web. By default it returns a `mechanize <http://wwwsearch.sourceforge.net/mechanize/>`_ browser instance that supports cookies, ignores robots.txt, handles refreshes and has a mozilla firefox user agent."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_browser:6
# 601c7e1f077a46899e3b2e51660f5781
msgid "If your recipe requires that you login first, override this method in your subclass. For example, the following code is used in the New York Times recipe to login for full access::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_cover_url:1
# a9821c9a078c4526b2938668eddb9d1e
msgid "Return a :term:`URL` to the cover image for this issue or `None`. By default it returns the value of the member `self.cover_url` which is normally `None`. If you want your recipe to download a cover for the e-book override this method in your subclass, or set the member variable `self.cover_url` before this method is called."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_feeds:1
# 595843d8874f43539b755314f29f52d0
msgid "Return a list of :term:`RSS` feeds to fetch for this profile. Each element of the list must be a 2-element tuple of the form (title, url). If title is None or an empty string, the title from the feed is used. This method is useful if your recipe needs to do some processing to figure out the list of feeds to download. If so, override in your subclass."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_masthead_title:1
# 08ee4f11ce7b495cba606253422b469a
msgid "Override in subclass to use something other than the recipe title"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_masthead_url:1
# 450c0cb527ca44c99cf75f843c40cc95
msgid "Return a :term:`URL` to the masthead image for this issue or `None`. By default it returns the value of the member `self.masthead_url` which is normally `None`. If you want your recipe to download a masthead for the e-book override this method in your subclass, or set the member variable `self.masthead_url` before this method is called. Masthead images are used in Kindle MOBI files."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:1
# 6bcb3d5622e0461d96fed3c540f7e137
msgid "If you set `articles_are_obfuscated` this method is called with every article URL. It should return the path to a file on the filesystem that contains the article HTML. That file is processed by the recursive HTML fetching engine, so it can contain links to pages/images on the web."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:6
# c63e1015a59240a88bdece567fe90108
msgid "This method is typically useful for sites that try to make it difficult to access article content automatically."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.image_url_processor:1
# 21cdb5b61abe47f883218ad4b5e6ed9a
msgid "Perform some processing on image urls (perhaps removing size restrictions for dynamically generated images, etc.) and return the precessed URL."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:1
# 40d2623e18c7404da3756ee3c3df5e13
msgid "Convenience method that takes an URL to the index page and returns a `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ of it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:5
# 8c88251c01a24ad097e25cda345cb1c8
msgid "`url_or_raw`: Either a URL or the downloaded index page as a string"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:1
# f50c711738eb4b7caffdfdfbf9ff094c
msgid "Return True if the link should be followed or False otherwise. By default, raises NotImplementedError which causes the downloader to ignore it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:5
# 86d4e288374f44f78238e2df21ca22da
msgid "The URL to be followed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:6
# c94a1c5db0d94fb7a0fa89d458d52cdc
msgid "The Tag from which the URL was derived"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:1
# 7746687546e64e48a659e0cf7492d376
msgid "This method is used to login to a website that uses javascript for its login form. After the login is complete, the cookies returned from the website are copied to a normal (non-javascript) browser and the download proceeds using those cookies."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:6
# 829bd82d11074f9085607e822f717fd3
msgid "An example implementation::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:15
# 81b2a57f69ab41a8a48df947a37cf124
msgid "Note that you can also select forms with CSS2 selectors, like this::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_feeds:1
# 03ada0cd16d14adfad47c6c3e06c664b
msgid "Create a list of articles from the list of feeds returned by :meth:`BasicNewsRecipe.get_feeds`. Return a list of :class:`Feed` objects."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:1
# 7ea0f02096ad424887230a10ab43f613
msgid "This method should be implemented in recipes that parse a website instead of feeds to generate a list of articles. Typical uses are for news sources that have a \"Print Edition\" webpage that lists all the articles in the current print edition. If this function is implemented, it will be used in preference to :meth:`BasicNewsRecipe.parse_feeds`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:7
# 530d0172231641acafb9f062f18eff1a
msgid "It must return a list. Each element of the list must be a 2-element tuple of the form ``('feed title', list of articles)``."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:10
# 26a826f7d0b847fa953b2ff20f0de777
msgid "Each list of articles must contain dictionaries of the form::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:23
# 592b91a88b0f40358e5d8e17ec93d8ec
msgid "For an example, see the recipe for downloading `The Atlantic`. In addition, you can add 'author' for the author of the article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:26
# 301ac98d33964cc5bb4be33003605485
msgid "If you want to abort processing for some reason and have calibre show the user a simple message instead of an error, call :meth:`abort_recipe_processing`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.populate_article_metadata:1
# e01cf24a19d646e9afc25a790c2d5c66
msgid "Called when each HTML page belonging to article is downloaded. Intended to be used to get article metadata like author/summary/etc. from the parsed HTML (soup). :param article: A object of class :class:`calibre.web.feeds.Article`. If you change the summary, remember to also change the text_summary :param soup: Parsed HTML belonging to this article :param first: True iff the parsed HTML is the first page of the article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:1
# 5034d58bded04b70a601f640a38c0be9
msgid "Run any needed post processing on the parsed downloaded e-book."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:3
# b5c68569efc646b0bf833bf6c8494f27
msgid "An OEBBook object"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:4
# c94e9b449f184583b0ef2f7d507070ae
msgid "Conversion options"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:1
# eb2c5403771e45fdad1af269db816f4b
msgid "This method is called with the source of each downloaded :term:`HTML` file, after it is parsed for links and images. It can be used to do arbitrarily powerful post-processing on the :term:`HTML`. It should return `soup` after processing it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
# 38e98907b4714cddb86727923fb41b8b
# 6db9fce9a7204d0c94ec57abecc2830d
msgid "A `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_  instance containing the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:7
# 2307fe02310e40c291e7c6232262c91f
msgid "True if this is the first page of an article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:1
# 9ce59f732b3b460b9a360a23ca13bf9c
msgid "This method is called with the source of each downloaded :term:`HTML` file, before it is parsed for links and images. It is called after the cleanup as specified by remove_tags etc. It can be used to do arbitrarily powerful pre-processing on the :term:`HTML`. It should return `soup` after processing it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:7
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:8
# a0f6366e42e948898fbdbfc2f5fe6872
# 2cb6c67677ca446ca86172aee0ef5993
msgid "`soup`: A `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ instance containing the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:1
# fed4f2de6e494f029a9040e6d216d346
msgid "This method is called with the source of each downloaded :term:`HTML` file, before it is parsed into an object tree. raw_html is a unicode string representing the raw HTML downloaded from the web. url is the URL from which the HTML was downloaded."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:6
# 324a79e6e13643f4b601d2b41eba4821
msgid "Note that this method acts *before* preprocess_regexps."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:8
# 46e84e1f505743d49f2c3af174ed23fb
msgid "This method must return the processed raw_html as a unicode object."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.print_version:1
# eaf4ae8e0dc14a9ab0563d10aa6eb7a3
msgid "Take a `url` pointing to the webpage with article content and return the :term:`URL` pointing to the print version of the article. By default does nothing. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:1
# 117c9e3b262045e88cb447f598dacc29
msgid "This method is called with the source of each downloaded :term:`HTML` file, before any of the cleanup attributes like remove_tags, keep_only_tags are applied. Note that preprocess_regexps will have already been applied. It is meant to allow the recipe to skip ad pages. If the soup represents an ad page, return the HTML of the real page. Otherwise return None."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:1
# d6a953ebcde24a7584efd7c4dc1a5e5a
msgid "Convenience method to sort the titles in `index` according to `weights`. `index` is sorted in place. Returns `index`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:4
# 2341670d00f64fb697f35567178e7959
msgid "`index`: A list of titles."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:6
# c27304938baf41eeae5d6008bd8b3c6a
msgid "`weights`: A dictionary that maps weights to titles. If any titles in index are not in weights, they are assumed to have a weight of 0."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:1
# da71420556584c87b3d56d5153d8f080
msgid "Convenience method to take a `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ `Tag` and extract the text from it recursively, including any CDATA sections and alt tag attributes. Return a possibly empty unicode string."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:6
# a810d80a56554c5181fe47a5ee5ee8c6
msgid "`use_alt`: If `True` try to use the alt attribute for tags that don't have any textual content"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:9
# ea057696e3fe4fb69f78b4088f4d449f
msgid "`tag`: `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ `Tag`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.articles_are_obfuscated:1
# 278d5303797145a28568ff9d762093cf
msgid "Set to True and implement :meth:`get_obfuscated_article` to handle websites that try to make it difficult to scrape content."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup:1
# 54af8111d40b4b26a033a95849c13785
msgid "Automatically extract all the text from downloaded article pages. Uses the algorithms from the readability project. Setting this to True, means that you do not have to worry about cleaning up the downloaded HTML manually (though manual cleanup will always be superior)."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup_keep:1
# 105fcbc808a842dfb107e1eb4dcca159
msgid "Specify elements that the auto cleanup algorithm should never remove The syntax is a XPath expression. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.center_navbar:1
# 7ff22bb9c64845ceb6bdeec9026ac91f
msgid "If True the navigation bar is center aligned, otherwise it is left aligned"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images:1
# 9832bf352f9a4a87a10eed1e706adc03
msgid "Set this to False to ignore all scaling and compression parameters and pass images through unmodified. If True and the other compression parameters are left at their default values, jpeg images will be scaled to fit in the screen dimensions set by the output profile and compressed to size at most (w * h)/16 where w x h are the scaled image dimensions."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_auto_size:1
# 9848d497d1134659bb4813393f40e1be
msgid "The factor used when auto compressing jpeg images. If set to None, auto compression is disabled. Otherwise, the images will be reduced in size to (w * h)/compress_news_images_auto_size bytes if possible by reducing the quality level, where w x h are the image dimensions in pixels. The minimum jpeg quality will be 5/100 so it is possible this constraint will not be met.  This parameter can be overridden by the parameter compress_news_images_max_size which provides a fixed maximum size for images. Note that if you enable scale_news_images_to_device then the image will first be scaled and then its quality lowered until its size is less than (w * h)/factor where w and h are now the *scaled* image dimensions. In other words, this compression happens after scaling."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_max_size:1
# 408182bf6d264eb4afc85fba71704c4a
msgid "Set jpeg quality so images do not exceed the size given (in KBytes). If set, this parameter overrides auto compression via compress_news_images_auto_size. The minimum jpeg quality will be 5/100 so it is possible this constraint will not be met."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.conversion_options:1
# b01cb072c2cb4c14b3ca8d6c2db9c83d
msgid "Recipe specific options to control the conversion of the downloaded content into an e-book. These will override any user or plugin specified values, so only use if absolutely necessary. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.cover_margins:1
# e7083e620b9041b1be99ff65e352d06a
msgid "By default, the cover image returned by get_cover_url() will be used as the cover for the periodical.  Overriding this in your recipe instructs calibre to render the downloaded cover into a frame whose width and height are expressed as a percentage of the downloaded cover. cover_margins = (10, 15, '#ffffff') pads the cover with a white margin 10px on the left and right, 15px on the top and bottom. Color names defined at http://www.imagemagick.org/script/color.php Note that for some reason, white does not always work on windows. Use #ffffff instead"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.delay:1
# 5c18213d88cf403ea7d991c5925b0613
msgid "Delay between consecutive downloads in seconds. The argument may be a floating point number to indicate a more precise time."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.description:1
# 2c068f75cf7f4c5caa3281a235c27503
msgid "A couple of lines that describe the content this recipe downloads. This will be used primarily in a GUI that presents a list of recipes."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.encoding:1
# acfcec913138427aa944575306d56c33
msgid "Specify an override encoding for sites that have an incorrect charset specification. The most common being specifying ``latin1`` and using ``cp1252``. If None, try to detect the encoding. If it is a callable, the callable is called with two arguments: The recipe object and the source to be decoded. It must return the decoded source."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.extra_css:1
# 077f36940bb646f8939a5c85dcf598e4
msgid "Specify any extra :term:`CSS` that should be added to downloaded :term:`HTML` files It will be inserted into `<style>` tags, just before the closing `</head>` tag thereby overriding all :term:`CSS` except that which is declared using the style attribute on individual :term:`HTML` tags. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.feeds:1
# b5130f709acf49a1949d57fa2299499b
msgid "List of feeds to download Can be either ``[url1, url2, ...]`` or ``[('title1', url1), ('title2', url2),...]``"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:1
# 2ba2280dfe954354b6559e636edfaf71
msgid "List of regular expressions that determines which links to ignore If empty it is ignored. Used only if is_link_wanted is not implemented. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:7
# a14ad2743d834367b045469666621780
msgid "will remove all URLs that have `ads.doubleclick.net` in them."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:9
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:9
# 0663c74783ca4d43b5b784a40889c868
# 24ebddfd441d4f4eae0aed39f370dab3
msgid "Only one of :attr:`BasicNewsRecipe.match_regexps` or :attr:`BasicNewsRecipe.filter_regexps` should be defined."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:1
# e717a9fe017946ac8a507600e9f5d6cc
msgid "Ignore duplicates of articles that are present in more than one section. A duplicate article is an article that has the same title and/or URL. To ignore articles with the same title, set this to: ignore_duplicate_articles = {'title'} To use URLs instead, set it to: ignore_duplicate_articles = {'url'} To match on title or URL, set it to: ignore_duplicate_articles = {'title', 'url'}"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:1
# 9a8ba29e13d34ca3a9fbc164c9c58891
msgid "Keep only the specified tags and their children. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. If this list is not empty, then the `<body>` tag will be emptied and re-filled with the tags that match the entries in this list. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:8
# 25e0667ac67740b28533bba6e59de03e
msgid "will keep only tags that have an `id` attribute of `\"content\"` or `\"heading\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.language:1
# 67871fef3c784c0f99c34ad732491dc9
msgid "The language that the news is in. Must be an ISO-639 code either two or three characters long"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.masthead_url:1
# 3b12a520f93e4e5892312fecbf8b8e01
msgid "By default, calibre will use a default image for the masthead (Kindle only). Override this in your recipe to provide a url to use as a masthead."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:1
# a72115c015a540a9ad4f0c7a01ddeaa5
msgid "List of regular expressions that determines which links to follow If empty, it is ignored. Used only if is_link_wanted is not implemented. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:7
# d537c61945684e4fba696ec5de7ef5e1
msgid "will match all URLs that have `page=some number` in them."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.max_articles_per_feed:1
# 004bb4bfc5c8421e9c71a17b95d0f9ae
msgid "Maximum number of articles to download from each feed. This is primarily useful for feeds that don't have article dates. For most feeds, you should use :attr:`BasicNewsRecipe.oldest_article`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.needs_subscription:1
# 77999aa11f9e43b699df976e1a0314cb
msgid "If True the GUI will ask the user for a username and password to use while downloading If set to \"optional\" the use of a username and password becomes optional"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.no_stylesheets:1
# 26ae9e4cfbf64168abda59a18134b7c4
msgid "Convenient flag to disable loading of stylesheets for websites that have overly complex stylesheets unsuitable for conversion to ebooks formats If True stylesheets are not downloaded and processed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.oldest_article:1
# 6d6eb4d2e39f43d1beac1b4a81cce4bb
msgid "Oldest article to download from this news source. In days."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:1
# 7e8fe3a7d5854a35b0213ca7375ec897
msgid "List of :term:`regexp` substitution rules to run on the downloaded :term:`HTML`. Each element of the list should be a two element tuple. The first element of the tuple should be a compiled regular expression and the second a callable that takes a single match object and returns a string to replace the match. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:12
# 2b7711be750242ce8495c52fcedace12
msgid "will remove everythong from `<!--Article ends here-->` to `</body>`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.publication_type:1
# a567b2eeb5e74eafa6c70e98f8b78b59
msgid "Publication type Set to newspaper, magazine or blog. If set to None, no publication type metadata will be written to the opf file."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.recipe_disabled:1
# ea74b6ea06454e9ebb56c1c0fe8d7e96
msgid "Set to a non empty string to disable this recipe The string will be used as the disabled message"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.recursions:1
# 2117a494ab8644a093c33a246228626f
msgid "Number of levels of links to follow on article webpages"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_attributes:1
# f0010495c6184aa681839daf829879bd
msgid "List of attributes to remove from all tags For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_empty_feeds:1
# 14439f78985b4b6fb0a6b7fe9549be1a
msgid "If True empty feeds are removed from the output. This option has no effect if parse_index is overridden in the sub class. It is meant only for recipes that return a list of feeds using `feeds` or :meth:`get_feeds`. It is also used if you use the ignore_duplicate_articles option."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_javascript:1
# 55ecf2f168dc4f3cad601f163c68fb7e
msgid "Convenient flag to strip all javascript tags from the downloaded HTML"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:1
# dfde9ad6f7734c08a15ac586730291f6
msgid "List of tags to be removed. Specified tags are removed from downloaded HTML. A tag is specified as a dictionary of the form::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:9
# f261ce9296e64a1986b3baf1b662b7d3
msgid "All keys are optional. For a full explanation of the search criteria, see `Beautiful Soup <http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html#Searching%20the%20Parse%20Tree>`_ A common example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:15
# 992a714113074f2e9932fca4eac5f83a
msgid "This will remove all `<div class=\"advert\">` tags and all their children from the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:1
# 9243b0f0230447f1a86bb52f687a0fd6
msgid "Remove all tags that occur after the specified tag. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:7
# 44699cc9334647daa3f66bb172231261
msgid "will remove all tags after the first element with `id=\"content\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:1
# cfdb60df7e434516bba46cc15190bd21
msgid "Remove all tags that occur before the specified tag. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:7
# 5b777ee4e02d45a78d3aa795fc25d359
msgid "will remove all tags before the first element with `id=\"content\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.requires_version:1
# 279115eacb6547f7b66b1b47d41ed8d9
msgid "Minimum calibre version needed to use this recipe"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.reverse_article_order:1
# 0e48b845eba24f358aa1370e52051892
msgid "Reverse the order of articles in each feed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.scale_news_images:1
# db48217d880a4155adb2fb84357e422e
msgid "Maximum dimensions (w,h) to scale images to. If scale_news_images_to_device is True this is set to the device screen dimensions set by the output profile unless there is no profile set, in which case it is left at whatever value it has been assigned (default None)."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.scale_news_images_to_device:1
# e64551a3f4204b84b0f92859a8e8fba4
msgid "Rescale images to fit in the device screen dimensions set by the output profile. Ignored if no output profile is set."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.simultaneous_downloads:1
# 198cb5e48df14929a4ecfe88b8184e79
msgid "Number of simultaneous downloads. Set to 1 if the server is picky. Automatically reduced to 1 if :attr:`BasicNewsRecipe.delay` > 0"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.summary_length:1
# 0d42fd45c2754efc8a5552f0c1b0551f
msgid "Max number of characters in the short description"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.template_css:1
# 63011e058fd54024b7bb911e7c2da994
msgid "The CSS that is used to style the templates, i.e., the navigation bars and the Tables of Contents. Rather than overriding this variable, you should use `extra_css` in your recipe to customize look and feel."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.timefmt:1
# c30ded42b2524fbe9e2592af51ceb42e
msgid "The format string for the date shown on the first page. By default: Day_Name, Day_Number Month_Name Year"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.timeout:1
# a04de9c5283f4ab2bf9b3b3ee00fc3c7
msgid "Timeout for fetching files from server in seconds"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.title:1
# 3967cba13e004e9bbf3f960ac585490e
msgid "The title to use for the ebook"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.use_embedded_content:1
# f1f45a41b8c346f6ac518b568e2d40ab
msgid "Normally we try to guess if a feed has full articles embedded in it based on the length of the embedded content. If `None`, then the default guessing is used. If `True` then the we always assume the feeds has embedded content and if `False` we always assume the feed does not have embedded content."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.use_javascript_to_login:1
# f76e9b7c9dee4c6d8887a57de563cbc4
msgid "If you set this True, then calibre will use javascript to login to the website. This is needed for some websites that require the use of javascript to login. If you set this to True you must implement the :meth:`javascript_login` method, to do the actual logging in."
msgstr ""

