# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.43.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-05 22:19+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../news_recipe.rst:6
# cc57d79077f6449cb7eb7b1aeec2afe5
msgid "API Documentation for recipes"
msgstr ""

#: ../../news_recipe.rst:11
# 6ba0a6cf66554098b5b3f7b2cc998ef8
msgid "The API for writing recipes is defined by the :class:`BasicNewsRecipe`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe:1
# 53deda336de44fa2aef95eb8c6eb9715
msgid "Base class that contains logic needed in all recipes. By overriding progressively more of the functionality in this class, you can make progressively more customized/powerful recipes. For a tutorial introduction to creating recipes, see :doc:`news`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.abort_recipe_processing:1
# f677263532d8411d9bc5f1d5b14437de
msgid "Causes the recipe download system to abort the download of this recipe, displaying a simple feedback message to the user."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.add_toc_thumbnail:1
# 27e3b3b516fb4e6f85931d957ec8025a
msgid "Call this from populate_article_metadata with the src attribute of an <img> tag from the article that is appropriate for use as the thumbnail representing the article in the Table of Contents. Whether the thumbnail is actually used is device dependent (currently only used by the Kindles). Note that the referenced image must be one that was successfully downloaded, otherwise it will be ignored."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.adeify_images:1
# df64d471d1ef4ca19786241f51f8d505
msgid "If your recipe when converted to EPUB has problems with images when viewed in Adobe Digital Editions, call this method from within :meth:`postprocess_html`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.cleanup:1
# 95123a111f174bfabe1878dd84f5b6ae
msgid "Called after all articles have been download. Use it to do any cleanup like logging out of subscription sites, etc."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.clone_browser:1
# ba2b658ead6a42c4838f6103a08296d2
msgid "Clone the browser br. Cloned browsers are used for multi-threaded downloads, since mechanize is not thread safe. The default cloning routines should capture most browser customization, but if you do something exotic in your recipe, you should override this method in your recipe and clone manually."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.clone_browser:7
# 1781f38c9390487bb60eddab83323046
msgid "Cloned browser instances use the same, thread-safe CookieJar by default, unless you have customized cookie handling."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.default_cover:1
# 66dc0e71ae9d4efb9162101573720a3f
msgid "Create a generic cover for recipes that dont have a cover"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.download:1
# 58abe324995a476fae3c0a1c6acae82b
msgid "Download and pre-process all articles from the feeds in this recipe. This method should be called only once on a particular Recipe instance. Calling it more than once will lead to undefined behavior. :return: Path to index.html"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.extract_readable_article:1
# f4f195f11faf45669787c15152680d1d
msgid "Extracts main article content from 'html', cleans up and returns as a (article_html, extracted_title) tuple. Based on the original readability algorithm by Arc90."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_article_url:1
# 722ae34523d54b358ef02dea8386f29a
msgid "Override in a subclass to customize extraction of the :term:`URL` that points to the content for each article. Return the article URL. It is called with `article`, an object representing a parsed article from a feed. See `feedparser <http://packages.python.org/feedparser/>`_. By default it looks for the original link (for feeds syndicated via a service like feedburner or pheedo) and if found, returns that or else returns `article.link <http://packages.python.org/feedparser/reference-entry-link.html>`_."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_browser:1
# 8ca43e12ef3f4ded93795b78505d35a8
msgid "Return a browser instance used to fetch documents from the web. By default it returns a `mechanize <http://wwwsearch.sourceforge.net/mechanize/>`_ browser instance that supports cookies, ignores robots.txt, handles refreshes and has a mozilla firefox user agent."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_browser:6
# 93b4eb1df1d74c37aedb0b72af66502e
msgid "If your recipe requires that you login first, override this method in your subclass. For example, the following code is used in the New York Times recipe to login for full access::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_cover_url:1
# 2febeb71b7b24a499820b1619703161f
msgid "Return a :term:`URL` to the cover image for this issue or `None`. By default it returns the value of the member `self.cover_url` which is normally `None`. If you want your recipe to download a cover for the e-book override this method in your subclass, or set the member variable `self.cover_url` before this method is called."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_feeds:1
# e013036c531f48a4a4429ee4432e11f0
msgid "Return a list of :term:`RSS` feeds to fetch for this profile. Each element of the list must be a 2-element tuple of the form (title, url). If title is None or an empty string, the title from the feed is used. This method is useful if your recipe needs to do some processing to figure out the list of feeds to download. If so, override in your subclass."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_masthead_title:1
# 6f5e9c8f48bd4c808de19b8d402b36da
msgid "Override in subclass to use something other than the recipe title"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_masthead_url:1
# c4c66b8a897542a0a2d6246c25543848
msgid "Return a :term:`URL` to the masthead image for this issue or `None`. By default it returns the value of the member `self.masthead_url` which is normally `None`. If you want your recipe to download a masthead for the e-book override this method in your subclass, or set the member variable `self.masthead_url` before this method is called. Masthead images are used in Kindle MOBI files."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:1
# 42c6761524284333b1b72f5c49a58f42
msgid "If you set `articles_are_obfuscated` this method is called with every article URL. It should return the path to a file on the filesystem that contains the article HTML. That file is processed by the recursive HTML fetching engine, so it can contain links to pages/images on the web."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:6
# 07f77ea6e63a4c6dae7b65ad31e61b0e
msgid "This method is typically useful for sites that try to make it difficult to access article content automatically."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.image_url_processor:1
# 12ab24ea7ebb4dc0979053c98335a957
msgid "Perform some processing on image urls (perhaps removing size restrictions for dynamically generated images, etc.) and return the precessed URL."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:1
# f7dd292c63b74664a248048fed9e4f46
msgid "Convenience method that takes an URL to the index page and returns a `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ of it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:5
# ff2438c9a8a14b9d90e478f1dd7e7bd3
msgid "`url_or_raw`: Either a URL or the downloaded index page as a string"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:1
# 95eba050d049435fa160fcf16dcd8835
msgid "Return True if the link should be followed or False otherwise. By default, raises NotImplementedError which causes the downloader to ignore it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:5
# d089660a21aa4b7387acf5f7cbf2b4cf
msgid "The URL to be followed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:6
# 3eab4c227a6546f5bea37259c2a3887c
msgid "The Tag from which the URL was derived"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:1
# 02105ec5b6f24743aa2f0a7bd1a185c4
msgid "This method is used to login to a website that uses javascript for its login form. After the login is complete, the cookies returned from the website are copied to a normal (non-javascript) browser and the download proceeds using those cookies."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:6
# d802c883e7be4dc08038f94e79d7d8cc
msgid "An example implementation::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.javascript_login:15
# de0a21e1955e444984ddce0bd8c15854
msgid "Note that you can also select forms with CSS2 selectors, like this::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_feeds:1
# 8ac8a480787045308d50975c753bbf5c
msgid "Create a list of articles from the list of feeds returned by :meth:`BasicNewsRecipe.get_feeds`. Return a list of :class:`Feed` objects."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:1
# 37015c6a4c78423f962608868625c2ce
msgid "This method should be implemented in recipes that parse a website instead of feeds to generate a list of articles. Typical uses are for news sources that have a \"Print Edition\" webpage that lists all the articles in the current print edition. If this function is implemented, it will be used in preference to :meth:`BasicNewsRecipe.parse_feeds`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:7
# b3ed39fb46e04d75a30b8df941049b58
msgid "It must return a list. Each element of the list must be a 2-element tuple of the form ``('feed title', list of articles)``."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:10
# 29eaa7352661489aa4fc29f3312c9280
msgid "Each list of articles must contain dictionaries of the form::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:23
# ef62e1312dbd4b6bab0c9d019d4c35ac
msgid "For an example, see the recipe for downloading `The Atlantic`. In addition, you can add 'author' for the author of the article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.parse_index:26
# e21107230bb44071b9e96849c1ec075b
msgid "If you want to abort processing for some reason and have calibre show the user a simple message instead of an error, call :meth:`abort_recipe_processing`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.populate_article_metadata:1
# f756d199865c46e9a0950c10dfec9840
msgid "Called when each HTML page belonging to article is downloaded. Intended to be used to get article metadata like author/summary/etc. from the parsed HTML (soup). :param article: A object of class :class:`calibre.web.feeds.Article`. If you change the summary, remember to also change the text_summary :param soup: Parsed HTML belonging to this article :param first: True iff the parsed HTML is the first page of the article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:1
# 21a60c23eca04df9b853ade72258f4d7
msgid "Run any needed post processing on the parsed downloaded e-book."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:3
# 4b6768c9d8e24d56912c3032373b5953
msgid "An OEBBook object"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:4
# 0a8eb4bc4ee94a8bb75f50f8390c2f14
msgid "Conversion options"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:1
# 1b462d6df2a14562aff301552f367203
msgid "This method is called with the source of each downloaded :term:`HTML` file, after it is parsed for links and images. It can be used to do arbitrarily powerful post-processing on the :term:`HTML`. It should return `soup` after processing it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
# 3c1dd7bf4ded46bdad517c45ea5605b8
# b76d4bacee324a9589e5b6a56e273c2e
msgid "A `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_  instance containing the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:7
# 6bc9f5d2794345b89b93618c4eff108a
msgid "True if this is the first page of an article."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:1
# 721df122fe0740d999190243369b5aab
msgid "This method is called with the source of each downloaded :term:`HTML` file, before it is parsed for links and images. It is called after the cleanup as specified by remove_tags etc. It can be used to do arbitrarily powerful pre-processing on the :term:`HTML`. It should return `soup` after processing it."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:7
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:8
# 21a6efe3cf9f4dccb54e56901d383127
# 893b4848b1224fd58eff947745aeb6a4
msgid "`soup`: A `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ instance containing the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:1
# 5108e41ee7fa42cfaa0b0ecfb0e21d6a
msgid "This method is called with the source of each downloaded :term:`HTML` file, before it is parsed into an object tree. raw_html is a unicode string representing the raw HTML downloaded from the web. url is the URL from which the HTML was downloaded."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:6
# 61c0103a58c2405b9c0a90c13e334902
msgid "Note that this method acts *before* preprocess_regexps."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:8
# 5cc1683e07004947bbcb3bb312c557a2
msgid "This method must return the processed raw_html as a unicode object."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.print_version:1
# b72709f1e4e744da8b5f06fa87250f80
msgid "Take a `url` pointing to the webpage with article content and return the :term:`URL` pointing to the print version of the article. By default does nothing. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:1
# 734687ad09704e548522bdfbb71f34d1
msgid "This method is called with the source of each downloaded :term:`HTML` file, before any of the cleanup attributes like remove_tags, keep_only_tags are applied. Note that preprocess_regexps will have already been applied. It is meant to allow the recipe to skip ad pages. If the soup represents an ad page, return the HTML of the real page. Otherwise return None."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:1
# 8d368979450341cd87e3b435fdcdcaca
msgid "Convenience method to sort the titles in `index` according to `weights`. `index` is sorted in place. Returns `index`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:4
# 877b3a9bdb4f40dba029f4989e358740
msgid "`index`: A list of titles."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:6
# 038c0a11853c4cfbb8cfbd3f978664ea
msgid "`weights`: A dictionary that maps weights to titles. If any titles in index are not in weights, they are assumed to have a weight of 0."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:1
# d51e2fe3b8c647099e4bf598144cea6e
msgid "Convenience method to take a `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ `Tag` and extract the text from it recursively, including any CDATA sections and alt tag attributes. Return a possibly empty unicode string."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:6
# a0eff27cb91447c59f44be5a00454332
msgid "`use_alt`: If `True` try to use the alt attribute for tags that don't have any textual content"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:9
# 6c1c568b84cb4790bb297d9858d5ee55
msgid "`tag`: `BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ `Tag`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.articles_are_obfuscated:1
# 2cbc1717e83e4c4a954016df87c47116
msgid "Set to True and implement :meth:`get_obfuscated_article` to handle websites that try to make it difficult to scrape content."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup:1
# af547faeb55a451e894082af01ec3d34
msgid "Automatically extract all the text from downloaded article pages. Uses the algorithms from the readability project. Setting this to True, means that you do not have to worry about cleaning up the downloaded HTML manually (though manual cleanup will always be superior)."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup_keep:1
# 27cf13c7a92b44a8bb7beabb89439de7
msgid "Specify elements that the auto cleanup algorithm should never remove The syntax is a XPath expression. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.center_navbar:1
# 395d8bfb1b3148c086ee5dc02595e520
msgid "If True the navigation bar is center aligned, otherwise it is left aligned"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images:1
# 97e85f6a2870409e998a3eb41686a919
msgid "Set this to False to ignore all scaling and compression parameters and pass images through unmodified. If True and the other compression parameters are left at their default values, jpeg images will be scaled to fit in the screen dimensions set by the output profile and compressed to size at most (w * h)/16 where w x h are the scaled image dimensions."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_auto_size:1
# ef22fa727489455fab68a078eb26b051
msgid "The factor used when auto compressing jpeg images. If set to None, auto compression is disabled. Otherwise, the images will be reduced in size to (w * h)/compress_news_images_auto_size bytes if possible by reducing the quality level, where w x h are the image dimensions in pixels. The minimum jpeg quality will be 5/100 so it is possible this constraint will not be met.  This parameter can be overridden by the parameter compress_news_images_max_size which provides a fixed maximum size for images. Note that if you enable scale_news_images_to_device then the image will first be scaled and then its quality lowered until its size is less than (w * h)/factor where w and h are now the *scaled* image dimensions. In other words, this compression happens after scaling."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_max_size:1
# c5ac000294214897a33d4b4fde7a0b3a
msgid "Set jpeg quality so images do not exceed the size given (in KBytes). If set, this parameter overrides auto compression via compress_news_images_auto_size. The minimum jpeg quality will be 5/100 so it is possible this constraint will not be met."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.conversion_options:1
# b7074ccdad00461c930c0cbf0158afb0
msgid "Recipe specific options to control the conversion of the downloaded content into an e-book. These will override any user or plugin specified values, so only use if absolutely necessary. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.cover_margins:1
# da87adeb16524bd1af18c380a9924bfe
msgid "By default, the cover image returned by get_cover_url() will be used as the cover for the periodical.  Overriding this in your recipe instructs calibre to render the downloaded cover into a frame whose width and height are expressed as a percentage of the downloaded cover. cover_margins = (10, 15, '#ffffff') pads the cover with a white margin 10px on the left and right, 15px on the top and bottom. Color names defined at http://www.imagemagick.org/script/color.php Note that for some reason, white does not always work on windows. Use #ffffff instead"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.delay:1
# 557087bf1e914dc5bea3078ac75252a3
msgid "Delay between consecutive downloads in seconds. The argument may be a floating point number to indicate a more precise time."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.description:1
# 088e9138f8ec40e295cfdb8bcc71784b
msgid "A couple of lines that describe the content this recipe downloads. This will be used primarily in a GUI that presents a list of recipes."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.encoding:1
# 210db69ed042461e9ae813953b7e886a
msgid "Specify an override encoding for sites that have an incorrect charset specification. The most common being specifying ``latin1`` and using ``cp1252``. If None, try to detect the encoding. If it is a callable, the callable is called with two arguments: The recipe object and the source to be decoded. It must return the decoded source."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.extra_css:1
# 8b34d92bc3ed4d379888dbf4057d7e1c
msgid "Specify any extra :term:`CSS` that should be added to downloaded :term:`HTML` files It will be inserted into `<style>` tags, just before the closing `</head>` tag thereby overriding all :term:`CSS` except that which is declared using the style attribute on individual :term:`HTML` tags. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.feeds:1
# 31b1f093e18a40e1ae7df9d190901cbe
msgid "List of feeds to download Can be either ``[url1, url2, ...]`` or ``[('title1', url1), ('title2', url2),...]``"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:1
# 99286f73f85d4ddca4ba798bf7fc320e
msgid "List of regular expressions that determines which links to ignore If empty it is ignored. Used only if is_link_wanted is not implemented. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:7
# da32a8d1400d46fdb0098da5622477f6
msgid "will remove all URLs that have `ads.doubleclick.net` in them."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:9
#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:9
# 58ee0aec62744037b4d6d71b87ea40da
# 0b94fa2168c845a9a344db6b3d22fc06
msgid "Only one of :attr:`BasicNewsRecipe.match_regexps` or :attr:`BasicNewsRecipe.filter_regexps` should be defined."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:1
# bff00e606fa04e0c95372136198479c2
msgid "Ignore duplicates of articles that are present in more than one section. A duplicate article is an article that has the same title and/or URL. To ignore articles with the same title, set this to: ignore_duplicate_articles = {'title'} To use URLs instead, set it to: ignore_duplicate_articles = {'url'} To match on title or URL, set it to: ignore_duplicate_articles = {'title', 'url'}"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:1
# 76f87f3ff39741c2a5c58aef9b5082e0
msgid "Keep only the specified tags and their children. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. If this list is not empty, then the `<body>` tag will be emptied and re-filled with the tags that match the entries in this list. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:8
# cc9ca660acf14d869aefcea2cb25e2c6
msgid "will keep only tags that have an `id` attribute of `\"content\"` or `\"heading\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.language:1
# fd480ad642724615bf0736218b2fce64
msgid "The language that the news is in. Must be an ISO-639 code either two or three characters long"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.masthead_url:1
# c6a5320eb0304c9397dafc931fccc31a
msgid "By default, calibre will use a default image for the masthead (Kindle only). Override this in your recipe to provide a url to use as a masthead."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:1
# 564fed46c64b4abb9319c8e68661d929
msgid "List of regular expressions that determines which links to follow If empty, it is ignored. Used only if is_link_wanted is not implemented. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.match_regexps:7
# 4f843224d93245c78ea6ecab0532bd5f
msgid "will match all URLs that have `page=some number` in them."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.max_articles_per_feed:1
# 34b4c5cbc4f84d42a80c0dce3b256386
msgid "Maximum number of articles to download from each feed. This is primarily useful for feeds that don't have article dates. For most feeds, you should use :attr:`BasicNewsRecipe.oldest_article`"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.needs_subscription:1
# 1987342985dc4775a43953e97a014b1c
msgid "If True the GUI will ask the user for a username and password to use while downloading If set to \"optional\" the use of a username and password becomes optional"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.no_stylesheets:1
# aea56eb9bb0f48b18cda9e539d32fc38
msgid "Convenient flag to disable loading of stylesheets for websites that have overly complex stylesheets unsuitable for conversion to ebooks formats If True stylesheets are not downloaded and processed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.oldest_article:1
# 2252b963f2bc42d2a8df62ae4439841e
msgid "Oldest article to download from this news source. In days."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:1
# 364973a8e5e54b20b1b343d5ced4f3d6
msgid "List of :term:`regexp` substitution rules to run on the downloaded :term:`HTML`. Each element of the list should be a two element tuple. The first element of the tuple should be a compiled regular expression and the second a callable that takes a single match object and returns a string to replace the match. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:12
# d8cafef8f40f41809105cd96b0582562
msgid "will remove everythong from `<!--Article ends here-->` to `</body>`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.publication_type:1
# 87c5be5e52e74dde854931188e750e69
msgid "Publication type Set to newspaper, magazine or blog. If set to None, no publication type metadata will be written to the opf file."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.recipe_disabled:1
# 871881a8c26d4ff19dab7e6daf3280ad
msgid "Set to a non empty string to disable this recipe The string will be used as the disabled message"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.recursions:1
# b292270b7329411ca48ced2d4dcd946e
msgid "Number of levels of links to follow on article webpages"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_attributes:1
# ebbb75d7531d41be98cb7cade3fa6499
msgid "List of attributes to remove from all tags For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_empty_feeds:1
# ae5f190588e34f20b959b08f12cea77f
msgid "If True empty feeds are removed from the output. This option has no effect if parse_index is overridden in the sub class. It is meant only for recipes that return a list of feeds using `feeds` or :meth:`get_feeds`. It is also used if you use the ignore_duplicate_articles option."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_javascript:1
# 4af453ff534f40bb93180e2b8840370c
msgid "Convenient flag to strip all javascript tags from the downloaded HTML"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:1
# eaeeb481e8f94425a6c97ee108584431
msgid "List of tags to be removed. Specified tags are removed from downloaded HTML. A tag is specified as a dictionary of the form::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:9
# 0899f77f33b44b079d05f1bdcbbb4a4d
msgid "All keys are optional. For a full explanation of the search criteria, see `Beautiful Soup <http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html#Searching%20the%20Parse%20Tree>`_ A common example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags:15
# 8c39b3f89f2042ebb018b3d4d1d13941
msgid "This will remove all `<div class=\"advert\">` tags and all their children from the downloaded :term:`HTML`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:1
# 72b0e0cd839641c4ac8f24b5e1eb590a
msgid "Remove all tags that occur after the specified tag. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:7
# 850c1fcbe6784076b2b401f175d4b253
msgid "will remove all tags after the first element with `id=\"content\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:1
# bd1dfdcf14744ac69c438f2772e88bb5
msgid "Remove all tags that occur before the specified tag. For the format for specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:7
# 773afdc68c874a648450ff9373c70818
msgid "will remove all tags before the first element with `id=\"content\"`."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.requires_version:1
# a1f34aa0c243489f8f19f62c10960c70
msgid "Minimum calibre version needed to use this recipe"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.reverse_article_order:1
# 368faf6d0c3643329f224bcac4328010
msgid "Reverse the order of articles in each feed"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.scale_news_images:1
# 3d54c7b4896b4b2e974c52c0e514c79d
msgid "Maximum dimensions (w,h) to scale images to. If scale_news_images_to_device is True this is set to the device screen dimensions set by the output profile unless there is no profile set, in which case it is left at whatever value it has been assigned (default None)."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.scale_news_images_to_device:1
# 3686cdd530de4638af8f5c947b934971
msgid "Rescale images to fit in the device screen dimensions set by the output profile. Ignored if no output profile is set."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.simultaneous_downloads:1
# acfee841149f406e87ea57fd76220571
msgid "Number of simultaneous downloads. Set to 1 if the server is picky. Automatically reduced to 1 if :attr:`BasicNewsRecipe.delay` > 0"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.summary_length:1
# d9c4e3f430484a208ec0ee0d617e6d11
msgid "Max number of characters in the short description"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.template_css:1
# f53b8e8d341440b390a022caecbee11f
msgid "The CSS that is used to style the templates, i.e., the navigation bars and the Tables of Contents. Rather than overriding this variable, you should use `extra_css` in your recipe to customize look and feel."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.timefmt:1
# d3c950238d4046f6bfbf4bb25b6e33da
msgid "The format string for the date shown on the first page. By default: Day_Name, Day_Number Month_Name Year"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.timeout:1
# fcebff0b7adf4ef698689d6a3de40bd7
msgid "Timeout for fetching files from server in seconds"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.title:1
# bb73814b3dff460394e3578c295fffae
msgid "The title to use for the ebook"
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.use_embedded_content:1
# 796cb8f09b80401eb91df19aaebcfb42
msgid "Normally we try to guess if a feed has full articles embedded in it based on the length of the embedded content. If `None`, then the default guessing is used. If `True` then the we always assume the feeds has embedded content and if `False` we always assume the feed does not have embedded content."
msgstr ""

#: ../../../src/calibre/web/feeds/news.py:docstring of calibre.web.feeds.news.BasicNewsRecipe.use_javascript_to_login:1
# 0fb75b421ffb425fbc911db673a613a3
msgid "If you set this True, then calibre will use javascript to login to the website. This is needed for some websites that require the use of javascript to login. If you set this to True you must implement the :meth:`javascript_login` method, to do the actual logging in."
msgstr ""

