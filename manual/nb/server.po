# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-26 10:21+0530\n"
"PO-Revision-Date: 2014-09-28 09:21+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Norwegian BokmÃ¥l (http://www.transifex.com/projects/p/calibre/language/nb/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: nb\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# f151c463742741ed890f25f3183eb1e6
#: ../../home/kovid/work/calibre/manual/server.rst:5
msgid "Integrating the |app| content server into other servers"
msgstr ""

# ab9c0f85868f423e8b5e01985f865696
#: ../../home/kovid/work/calibre/manual/server.rst:7
msgid ""
"Here, we will show you how to integrate the |app| content server into "
"another server. The most common reason for this is to make use of SSL or "
"more sophisticated authentication. There are two main techniques: Running "
"the |app| content server as a standalone process and using a reverse proxy "
"to connect it with your main server or running the content server in process"
" in your main server with WSGI. The examples below are all for Apache 2.x on"
" linux, but should be easily adaptable to other platforms."
msgstr ""

# 677760c88c894b59bb62cdd575356b5f
#: ../../home/kovid/work/calibre/manual/server.rst:0
msgid "Contents"
msgstr "Innhold"

# 8f7e56f3a87b448ab3d656070c9fe342
#: ../../home/kovid/work/calibre/manual/server.rst:13
msgid "This only applies to calibre releases >= 0.7.25"
msgstr ""

# 3c382b4877334c1e9996b612c079641a
#: ../../home/kovid/work/calibre/manual/server.rst:16
msgid "Using a reverse proxy"
msgstr ""

# edcf374ba73c4f2ea752dd4c4decc126
#: ../../home/kovid/work/calibre/manual/server.rst:18
msgid ""
"A reverse proxy is when your normal server accepts incoming requests and "
"passes them onto the calibre server. It then reads the response from the "
"calibre server and forwards it to the client. This means that you can simply"
" run the calibre server as normal without trying to integrate it closely "
"with your main server, and you can take advantage of whatever authentication"
" systems you main server has in place. This is the simplest approach as it "
"allows you to use the binary calibre install with no external "
"dependencies/system integration requirements. Below, is an example of how to"
" achieve this with Apache as your main server, but it will work with any "
"server that supports Reverse Proxies."
msgstr ""

# 277207f30cc547568cf7e16bdcca71f7
#: ../../home/kovid/work/calibre/manual/server.rst:20
msgid "First start the |app| content server as shown below::"
msgstr ""

# a2ba4ebc914540149c8eddfd40a1bc8a
#: ../../home/kovid/work/calibre/manual/server.rst:24
msgid ""
"The key parameter here is ``--url-prefix /calibre``. This causes the content"
" server to serve all URLs prefixed by calibre. To see this in action, visit "
"``http://localhost:8080/calibre`` in your browser. You should see the normal"
" content server website, but now it will run under /calibre."
msgstr ""

# 630b7a20e43848058c766efbc919653b
#: ../../home/kovid/work/calibre/manual/server.rst:26
msgid ""
"Now suppose you are using Apache as your main server. First enable the proxy"
" modules in apache, by adding the following to :file:`httpd.conf`::"
msgstr ""

# 1cc14b149fff40ebb74e928ad7c09a5d
#: ../../home/kovid/work/calibre/manual/server.rst:31
msgid ""
"The exact technique for enabling the proxy modules will vary depending on "
"your Apache installation. Once you have the proxy modules enabled, add the "
"following rules to httpd.conf (or if you are using virtual hosts to the conf"
" file for the virtual host in question::"
msgstr ""

# 5a91a0a8c9c84f6181d585e720c4240f
#: ../../home/kovid/work/calibre/manual/server.rst:39
msgid ""
"That's all, you will now be able to access the |app| Content Server under "
"the /calibre URL in your apache server. The above rules pass all requests "
"under /calibre to the calibre server running on port 8080 and thanks to the "
"--url-prefix option above, the calibre server handles them transparently."
msgstr ""

# e2bec9d56da24c0e8ff1725de06634b5
#: ../../home/kovid/work/calibre/manual/server.rst:41
msgid ""
"If you are willing to devote an entire VirtualHost to the content server, "
"then there is no need to use --url-prefix and RewriteRule, instead just use "
"the ProxyPass directive."
msgstr ""

# 7c6998f63774462dad6501901c5b9ada
#: ../../home/kovid/work/calibre/manual/server.rst:43
msgid ""
"The server engine calibre uses, CherryPy, can have trouble with proxying and"
" KeepAlive requests, so turn them off in Apache, with the SetEnv directives "
"shown above."
msgstr ""

# 811f05137a3449568c541ecf82690062
#: ../../home/kovid/work/calibre/manual/server.rst:46
msgid "In process"
msgstr ""

# ac283c5ef82f4f4886fa25d64bdcbc8c
#: ../../home/kovid/work/calibre/manual/server.rst:48
msgid ""
"The calibre content server can be run directly, in process, inside a host "
"server like Apache using the WSGI framework."
msgstr ""

# 02620e54d5af4e3c9e3028b6b9fe169e
#: ../../home/kovid/work/calibre/manual/server.rst:50
msgid ""
"For this to work, all the dependencies needed by calibre must be installed "
"on your system. Doing so is highly non-trivial and you are encouraged not to"
" use in process servers. You will not get any assistance with debugging in "
"process server problems."
msgstr ""

# 9cc37b928131487293715d4a83222c5b
#: ../../home/kovid/work/calibre/manual/server.rst:52
msgid ""
"First, we have to create a WSGI *adapter* for the calibre content server. "
"Here is a template you can use for the purpose. Replace the paths as "
"directed in the comments"
msgstr ""

# 2f671c4e20e64c2a801ff91c2b8eaa07
#: ../../home/kovid/work/calibre/manual/server.rst:102
msgid ""
"Save this adapter as :file:`calibre-wsgi-adpater.py` somewhere your server "
"will have access to it."
msgstr ""

# 998c94fd1cd8496c870b5b1a36d29d90
#: ../../home/kovid/work/calibre/manual/server.rst:104
msgid ""
"Let's suppose that we want to use WSGI in Apache. First enable WSGI in "
"Apache by adding the following to :file:`httpd.conf`::"
msgstr ""

# 850ad13d2539401c976abefb4ca41205
#: ../../home/kovid/work/calibre/manual/server.rst:108
msgid ""
"The exact technique for enabling the wsgi module will vary depending on your"
" Apache installation. Once you have the proxy modules enabled, add the "
"following rules to httpd.conf (or if you are using virtual hosts to the conf"
" file for the virtual host in question::"
msgstr ""

# d706aea3761f4402ad7de7e0f0343d23
#: ../../home/kovid/work/calibre/manual/server.rst:112
msgid ""
"Change the path to :file:`calibre-wsgi-adapter.py` to wherever you saved it "
"previously (make sure Apache has access to it)."
msgstr ""

# 5f0f903d9c684bbc922fb7242e206e89
#: ../../home/kovid/work/calibre/manual/server.rst:114
msgid ""
"That's all, you will now be able to access the |app| Content Server under "
"the /calibre URL in your apache server."
msgstr ""

# 9e78cb7dbdcf44db9e133bc0ff7b8b43
#: ../../home/kovid/work/calibre/manual/server.rst:116
msgid ""
"For more help with using mod_wsgi in Apache, see `mod_wsgi "
"<http://code.google.com/p/modwsgi/wiki/WhereToGetHelp>`_."
msgstr ""
