# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-29 09:29+0530\n"
"PO-Revision-Date: 2014-08-29 04:00+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Vietnamese (http://www.transifex.com/projects/p/calibre/language/vi/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: vi\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 60290debd3ed469bac13690bd9d7410e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:5
msgid "Writing your own plugins to extend |app|'s functionality"
msgstr ""

# 9ff7d1df84c44344a359a7666b08cdb4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:7
msgid ""
"|app| has a very modular design. Almost all functionality in |app| comes in "
"the form of plugins. Plugins are used for conversion, for downloading news "
"(though these are called recipes), for various components of the user "
"interface, to connect to different devices, to process files when adding "
"them to |app| and so on. You can get a complete list of all the built-in "
"plugins in |app| by going to :guilabel:`Preferences->Plugins`."
msgstr ""

# 4b44ed13c4bd4562bf7710a200e41c88
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:9
msgid ""
"Here, we will teach you how to create your own plugins to add new features "
"to |app|."
msgstr ""

# ed38ae104bd147dfb7f842b83816aa04
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:0
msgid "Contents"
msgstr ""

# 5722856196df47a0a088f03280d9fcb4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:16
msgid "This only applies to calibre releases >= 0.8.60"
msgstr ""

# 99d0313b1df14af5b76ac16e0235137e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:19
msgid "Anatomy of a |app| plugin"
msgstr ""

# 67e2fc40666647009902ee9c2e3f36bf
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:21
msgid ""
"A |app| plugin is very simple, it's just a zip file that contains some "
"python code and any other resources like image files needed by the plugin. "
"Without further ado, let's see a basic example."
msgstr ""

# 46a31b899d24489796f96af6dae5666c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:25
msgid ""
"Suppose you have an installation of |app| that you are using to self publish"
" various e-documents in EPUB and MOBI formats. You would like all files "
"generated by |app| to have their publisher set as \"Hello world\", here's "
"how to do it. Create a file named :file:`__init__.py` (this is a special "
"name and must always be used for the main file of your plugin) and enter the"
" following Python code into it:"
msgstr ""

# 738864ad62bc4b83b6706023c8e77e7f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:33
msgid ""
"That's all. To add this code to |app| as a plugin, simply run the following "
"in the directory in which you created :file:`__init__.py`::"
msgstr ""

# d617b2a6a0fb40f6b992580d016f9b65
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:39
msgid ""
"On OS X, the command line tools are inside the |app| bundle, for example, if"
" you installed calibre in :file:`/Applications` the command line tools are "
"in :file:`/Applications/calibre.app/Contents/console.app/Contents/MacOS/`."
msgstr ""

# 945e043d6dc84ad0b146d6670e96f8a6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:43
msgid ""
"You can download the Hello World plugin from `helloworld_plugin.zip  <http"
"://calibre-ebook.com/downloads/helloworld_plugin.zip>`_."
msgstr ""

# 930048306bfc40d1acac1354aaa6e3cd
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:46
msgid ""
"Every time you use calibre to convert a book, the plugin's :meth:`run` "
"method will be called and the converted book will have its publisher set to "
"\"Hello World\". This is a trivial plugin, lets move on to a more complex "
"example that actually adds a component to the user interface."
msgstr ""

# 85bfb3683bdf4f02b86c94b6a3e2ae45
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:51
msgid "A User Interface plugin"
msgstr ""

# 09414c73415941ccb898083bbbda33ec
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:53
msgid ""
"This plugin will be spread over a few files (to keep the code clean). It "
"will show you how to get resources (images or data files) from the plugin "
"zip file, allow users to configure your plugin, how to create elements in "
"the |app| user interface and how to access and query the books database in "
"|app|."
msgstr ""

# bfca89c937de46e4b986c0e47bcde749
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:58
msgid ""
"You can download this plugin from `interface_demo_plugin.zip <http"
"://calibre-ebook.com/downloads/interface_demo_plugin.zip>`_"
msgstr ""

# 8135efa852f54daa9c2149e561c42d1d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:62
msgid ""
"The first thing to note is that this zip file has a lot more files in it, "
"explained below, pay particular attention to ``plugin-import-name-"
"interface_demo.txt``."
msgstr ""

# 26cf208ca5cb416f86fa490a28c4be6f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:78
msgid "**plugin-import-name-interface_demo.txt**"
msgstr ""

# 35929734d1c84f5bacddcab07331b11d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:66
msgid ""
"An empty text file used to enable the multi-file plugin magic. This file "
"must be present in all plugins that use more than one .py file. It should be"
" empty and its filename must be of the form: plugin-import-"
"name-**some_name**.txt The presence of this file allows you to import code "
"from the .py files present inside the zip file, using a statement like::"
msgstr ""

# 087cea56ab554ad7bfde1ed1281271fb
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:72
msgid ""
"The prefix ``calibre_plugins`` must always be present. ``some_name`` comes "
"from the filename of the empty text file. ``some_module`` refers to  "
":file:`some_module.py` file inside the zip file. Note that this importing is"
" just as powerful as regular python imports. You can create packages and "
"subpackages of .py modules inside the zip file, just like you would normally"
" (by defining __init__.py in each sub directory), and everything should Just"
" Work."
msgstr ""

# ef64a059f1d24db483b498ba674f667e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:77
msgid ""
"The name you use for ``some_name`` enters a global namespace shared by all "
"plugins, **so make it as unique as possible**. But remember that it must be "
"a valid python identifier (only alphabets, numbers and the underscore)."
msgstr ""

# c9e310f76408499380f45d6743f8f97f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:81
msgid "**__init__.py**"
msgstr ""

# 72aaf9aa173c481d9e89ff6cbb19a00f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:81
msgid "As before, the file that defines the plugin class"
msgstr ""

# 63f24f4bd230488e8cc29d6834ca223b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:84
msgid "**main.py**"
msgstr ""

# 09e704136fd7404aa36a44a0c61a10b2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:84
msgid "This file contains the actual code that does something useful"
msgstr ""

# 5ca6f7a94d324392ab4bc617a57beaa6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:87
msgid "**ui.py**"
msgstr ""

# b6005292e2f648c5a9091dae4b161162
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:87
msgid "This file defines the interface part of the plugin"
msgstr ""

# d07fab2b3d5d4805835050d670f78e7c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:90
msgid "**images/icon.png**"
msgstr ""

# dd1aa6c698c64b50b79977c2e8e890d8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:90
msgid "The icon for this plugin"
msgstr ""

# ed0ef61746f6429e84edbd47fe72c7d1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:93
msgid "**about.txt**"
msgstr ""

# c97fada5c52443b6ac77642622e5f3a8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:93
msgid "A text file with information about the plugin"
msgstr ""

# 04777c9b4f2a41e0b38afe8ce63cec97
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:98
msgid "**translations**"
msgstr ""

# 262f058b7dd64551a162e502b3eb5373
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:96
msgid ""
"A folder containing .mo files with the translations of the user interface of"
" your plugin into different languages. See below for details."
msgstr ""

# d1e90ecc434c42b2b74ef00e9c7ff2b2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:100
msgid "Now let's look at the code."
msgstr ""

# 5ba3abe5da24408a88162a2416b67c11
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:103
msgid "__init__.py"
msgstr ""

# 38dc3b0f9e9c401fa30ffd1ad8edc60e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:105
msgid "First, the obligatory ``__init__.py`` to define the plugin metadata:"
msgstr ""

# c8fc6663dadd4b42b7a1cd56413696c4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:110
msgid ""
"The only noteworthy feature is the field :attr:`actual_plugin`. Since |app| "
"has both command line and GUI interfaces, GUI plugins like this one should "
"not load any GUI libraries in __init__.py. The actual_plugin field does this"
" for you, by telling |app| that the actual plugin is to be found in another "
"file inside your zip archive, which will only be loaded in a GUI context."
msgstr ""

# df857c01eb49482ab301df28ec056d27
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:115
msgid ""
"Remember that for this to work, you must have a plugin-import-name-"
"some_name.txt file in your plugin zip file, as discussed above."
msgstr ""

# fee0b338eb75488581f27095d1420cc1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:118
msgid ""
"Also there are a couple of methods for enabling user configuration of the "
"plugin. These are discussed below."
msgstr ""

# 52597ca696ec4c5a9142b44a8fbeafa6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:121
msgid "ui.py"
msgstr ""

# 02ed46804cf140a6b3e3528eb53d3baa
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:123
msgid ""
"Now let's look at ui.py which defines the actual GUI plugin. The source code"
" is heavily commented and should be self explanatory:"
msgstr ""

# 83520833d8604a0cbacbb2e6896b593e
# 8299275c83e94d199098ca9f6f706371
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:129
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:213
msgid "main.py"
msgstr ""

# 4522a44aabe14b51920c44407a558c44
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:131
msgid "The actual logic to implement the Interface Plugin Demo dialog."
msgstr ""

# fc73d8ac3a1849309e7420be130e265c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:137
msgid "Getting resources from the plugin zip file"
msgstr ""

# 63ed587846dc4f04a83e14b4d1363fc4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:139
msgid ""
"|app|'s plugin loading system defines a couple of built-in functions that "
"allow you to conveniently get files from the plugin zip file."
msgstr ""

# fcdcf13eaea34c6380050f4d032212e5
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:146
msgid "**get_resources(name_or_list_of_names)**"
msgstr ""

# 6f6aa358fee940c9907f57fe3ee05478
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:142
msgid ""
"This function should be called with a list of paths to files inside the zip "
"file. For example to access the file icon.png in the directory images in the"
" zip file, you would use: ``images/icon.png``. Always use a forward slash as"
" the path separator, even on windows. When you pass in a single name, the "
"function will return the raw bytes of that file or None if the name was not "
"found in the zip file. If you pass in more than one name then it returns a "
"dict mapping the names to bytes. If a name is not found, it will not be "
"present in the returned dict."
msgstr ""

# c7a9b48177f348ef8e38ac788e9b0058
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:150
msgid "**get_icons(name_or_list_of_names)**"
msgstr ""

# b46a267f31cc4f1e97d8de2179f50e5b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:149
msgid ""
"A convenience wrapper for get_resources() that creates QIcon objects from "
"the raw bytes returned by get_resources. If a name is not found in the zip "
"file the corresponding QIcon will be null."
msgstr ""

# fe1ae1d764414082986ef53b7b63a4ef
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:153
msgid "Enabling user configuration of your plugin"
msgstr ""

# 3117b76f06a14cb98fa0f1b632b217e9
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:155
msgid ""
"To allow users to configure your plugin, you must define three methods in "
"your base plugin class, '**is_customizable**, **config_widget** and "
"**save_settings** as shown below:"
msgstr ""

# a397f066a1d4428cb92a0651ba9c4658
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:166
msgid ""
"|app| has many different ways to store configuration data (a legacy of its "
"long history). The recommended way is to use the **JSONConfig** class, which"
" stores your configuration information in a .json file."
msgstr ""

# 361a411818b74e60b09debf28aa0f688
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:168
msgid ""
"The code to manage configuration data in the demo plugin is in config.py:"
msgstr ""

# 6b220c65521148bf9c79ee3bb9096eac
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:173
msgid ""
"The ``prefs`` object is now available throughout the plugin code by a "
"simple::"
msgstr ""

# 85eb18b395db4bab8334b78bff2eec24
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:178
msgid "You can see the ``prefs`` object being used in main.py:"
msgstr ""

# 08f56ebbb9de4cc1b36b39f50f5bd322
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:185
msgid "Edit Book plugins"
msgstr ""

# dbe0221f63e4491786175378a374ae7a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:187
msgid ""
"Now let's change gears for a bit and look at creating a plugin to add tools "
"to the |app| book editor. The plugin is available here: "
"`editor_demo_plugin.zip  <http://calibre-"
"ebook.com/downloads/editor_demo_plugin.zip>`_."
msgstr ""

# 8ea71cf6657542fda61db89166e7a1af
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:191
msgid ""
"The first step, as for all plugins is to create the import name empty txt "
"file, as described :ref:`above <import_name_txt>`. We shall name the file "
"``plugin-import-name-editor_plugin_demo.txt``."
msgstr ""

# 64b47d1c1fd84a7184dbb16ebf420507
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:195
msgid ""
"Now we create the mandatory ``__init__.py`` file that contains metadata "
"about the plugin -- its name, author, version, etc."
msgstr ""

# 50d5450128bf42f585c147cea8d481a7
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:201
msgid ""
"A single editor plugin can provide multiple tools each tool corresponds to a"
" single button in the toolbar and entry in the :guilabel:`Plugins` menu in "
"the editor. These can have sub-menus in case the tool has multiple related "
"actions."
msgstr ""

# 152d05825074449fb85341a2c6963e28
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:205
msgid ""
"The tools must all be defined in the file ``main.py`` in your plugin. Every "
"tool is a class that inherits from the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class. Let's look at "
"``main.py`` from the demo plugin, the source code is heavily commented and "
"should be self-explanatory. Read the API documents of the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class for more details."
msgstr ""

# 038741ddf2b94769987191a6680814b4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:215
msgid ""
"Here we will see the definition of a single tool that will multiply all font"
" sizes in the book by a number provided by the user. This tool demonstrates "
"various important concepts that you will need in developing your own "
"plugins, so you should read the (heavily commented) source code carefully."
msgstr ""

# bbfc1243f30f49a9a32db81b43cf147b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:223
msgid ""
"Let's break down ``main.py``. We see that it defines a single tool, named "
"*Magnify fonts*. This tool will ask the user for a number and multiply all "
"font sizes in the book by that number."
msgstr ""

# 3b6f0f8c19fb49319c5d3cf0bd9ecc63
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:227
msgid ""
"The first important thing is the tool name which you must set to some "
"relatively unique string as it will be used as the key for this tool."
msgstr ""

# b1548bced2834b0693958438eb8b9ac2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:230
msgid ""
"The next important entry point is the "
":meth:`calibre.gui2.tweak_book.plugin.Tool.create_action`. This method "
"creates the QAction objects that appear in the plugins toolbar and plugin "
"menu. It also, optionally, assigns a keyboard shortcut that the user can "
"customize. The triggered signal from the QAction is connected to the "
"ask_user() method that asks the user for the font size multiplier, and then "
"runs the magnification code."
msgstr ""

# d57c7898f302496c81a9f94d2f7618fa
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:238
msgid ""
"The magnification code is well commented and fairly simple. The main things "
"to note are that you get a reference to the editor window as ``self.gui`` "
"and the editor *Boss* as ``self.boss``. The *Boss* is the object that "
"controls the editor user interface. It has many useful methods, that are "
"documented in the :class:`calibre.gui2.tweak_book.boss.Boss` class."
msgstr ""

# fb8a1a1bbf6448c9b603c44152c2f8c0
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:244
msgid ""
"Finally, there is ``self.current_container`` which is a reference to the "
"book being edited as a "
":class:`calibre.ebooks.oeb.polish.container.Container` object. This "
"represents the book as a collection of its constituent HTML/CSS/image files "
"and has convenience methods for doing many useful things. The container "
"object and various useful utility functions that can be reused in your "
"plugin code are documented in :ref:`polish_api`."
msgstr ""

# 614bb08dab4e48d787aadf1efb2dadb2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:253
msgid "Adding translations to your plugin"
msgstr ""

# 646535a87330465eb1bd13686d9ca098
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:255
msgid ""
"You can have all the user interface strings in your plugin translated and "
"displayed in whatever language is set for the main calibre user interface."
msgstr ""

# 04e6abab323b41839eef2976d609f5f2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:258
msgid ""
"The first step is to go through your plugin's source code and mark all user "
"visible strings as translatable, by surrounding them in _(). For example::"
msgstr ""

# 24d8e78ef9334f2fbc7fcab71dcd8639
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:263
msgid ""
"Then use some program to generate .po files from your plugin source code. "
"There should be one .po file for every language you want to translate into. "
"For example: de.po for German, fr.po for French and so on. You can use the "
"`poedit <http://www.poedit.net/>`_ program for this."
msgstr ""

# fd8c20a05cee49e6981a0b2847808223
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:268
msgid ""
"Send these .po files to your translators. Once you get them back, compile "
"them into .mo files. You can again use poedit for that, or just do::"
msgstr ""

# a04588ff9a77425ab84772f8115b2789
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:273
msgid "Put the .mo files into the ``translations`` folder in your plugin."
msgstr ""

# 30a7d69ec84f4b61a4b7c49255e7ee36
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:275
msgid ""
"The last step is to simply call the function `load_translations()` at the "
"top of your plugin's .py files. For performance reasons you should only call"
" this function in those .py files that actually have translatable strings. "
"So in a typical User Interface plugin you would call it at the top of "
"``ui.py`` but not ``__init__.py``."
msgstr ""

# 2e2686386f4d4d99a16d549dadecc901
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:281
msgid ""
"You can test the translations of your plugins by changing the user interface"
" language in calibre under Preferences->Look & Feel or by running calibre "
"like this::"
msgstr ""

# 98a9c8ac1e2b439fb644d2305451fa67
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:287
msgid ""
"Replace ``de`` with the language code of the language you want to test."
msgstr ""

# 5085523f226e4012805df5bd7d6fc45c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:290
msgid "The plugin API"
msgstr ""

# 3b9de50b78b54d6b955ee9b2ae4dd3a1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:292
msgid ""
"As you may have noticed above, a plugin in |app| is a class. There are "
"different classes for the different types of plugins in |app|. Details on "
"each class, including the base class of all plugins can be found in "
":ref:`plugins`."
msgstr ""

# fd345750985747ae9c369d0dd09d99c3
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:295
msgid ""
"Your plugin is almost certainly going to use code from |app|. To learn how "
"to find various bits of functionality in the |app| code base, read the "
"section on the |app| :ref:`code_layout`."
msgstr ""

# 7585141d58674bf2adf873da02bdb7b5
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:300
msgid "Debugging plugins"
msgstr ""

# 1d0a9af714474a6e8f3aba389d53ea75
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:302
msgid ""
"The first, most important step is to run |app| in debug mode. You can do "
"this from the command line with::"
msgstr ""

# 52e69efec5834eeebb0f0683b3d686af
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:306
msgid ""
"Or from within calibre by right-clicking the preferences button or using the"
" `Ctrl+Shift+R` keyboard shortcut."
msgstr ""

# 7e7cd43b796348b0adb92e49a2198c84
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:308
msgid ""
"When running from the command line, debug output will be printed to the "
"console, when running from within |app| the output will go to a txt file."
msgstr ""

# 36ee553b48a9402eb04075d6a6e2c1ec
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:310
msgid ""
"You can insert print statements anywhere in your plugin code, they will be "
"output in debug mode. Remember, this is python, you really shouldn't need "
"anything more than print statements to debug ;) I developed all of |app| "
"using just this debugging technique."
msgstr ""

# 7a02ad96204e4752a1cad17d29635de0
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:312
msgid ""
"You can quickly test changes to your plugin by using the following command "
"line::"
msgstr ""

# 9529d18566324868a948ce84230e0d65
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:317
msgid ""
"This will shutdown a running calibre, wait for the shutdown to complete, "
"then update your plugin in |app| and relaunch |app|."
msgstr ""

# 9a2afae2cd784807b49482c83a95cc84
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:320
msgid "More plugin examples"
msgstr ""

# d20cc43af6b84bd5a347e890d94047af
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:322
msgid ""
"You can find a list of many, sophisticated |app| plugins `here "
"<http://www.mobileread.com/forums/showthread.php?t=118764>`_."
msgstr ""

# 4c9a97f9c3cf48b4ab259faec72148f7
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:325
msgid "Sharing your plugins with others"
msgstr ""

# 0b2771d68f6641ad9c246e8915a4f1fc
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:327
msgid ""
"If you would like to share the plugins you have created with other users of "
"|app|, post your plugin in a new thread in the `calibre plugins forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=237>`_."
msgstr ""
