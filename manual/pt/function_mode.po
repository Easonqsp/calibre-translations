# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-19 08:34+0530\n"
"PO-Revision-Date: 2014-12-19 03:05+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Portuguese (http://www.transifex.com/projects/p/calibre/language/pt/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 9768fd8acfe442048d0e33ff29608cf8
#: ../../home/kovid/work/calibre/manual/function_mode.rst:2
msgid "Function Mode for Search & Replace in the Editor"
msgstr ""

# 43a9fd09ab6a43539f1c0e11ffef0489
#: ../../home/kovid/work/calibre/manual/function_mode.rst:4
msgid ""
"The Search & Replace tool in the editor support a *function mode*. In this "
"mode, you can combine regular expressions (see :doc:`regexp`) with "
"arbitrarily powerful python functions to do all sorts of advanced text "
"processing."
msgstr ""

# 91760f9a5c5b48ceba9ea6cc6ba4aa23
#: ../../home/kovid/work/calibre/manual/function_mode.rst:9
msgid ""
"In the standard *regexp* mode for search and replace, you specify both a "
"regular expression to search for as well as a template that is used to "
"replace all found matches. In function mode, instead of using a fixed "
"template, you specify an arbitrary function, in the `python programming "
"language <https://docs.python.org/2.7/>`_. This allows you to do lots of "
"things that are not possible with simple templates."
msgstr ""

# a137f3ff2fe340b28caa459c26a417f0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:16
msgid ""
"Techniques for using function mode and the syntax will be described by means"
" of examples, showing you how to create functions to perform progressively "
"more complex tasks."
msgstr ""

# 8fd5dbcaab9e4f918d0ca9629bc9553b
#: ../../home/kovid/work/calibre/manual/function_mode.rst:26
msgid "Automatically fixing the case of headings in the document"
msgstr ""

# 2b82517e4b1b4e46b87bcca61013c38a
#: ../../home/kovid/work/calibre/manual/function_mode.rst:28
msgid ""
"Here, we will leverage one of the builtin functions in the editor to "
"automatically change the case of all text inside heading tags to title "
"case::"
msgstr ""

# 2ee7e11778fc43d788db432ebbca7dbb
#: ../../home/kovid/work/calibre/manual/function_mode.rst:33
msgid ""
"For the function, simply choose the :guilabel:`Title-case text` builtin "
"function. The will change titles that look like: ``<h1>some TITLE</h1>`` to "
"``<h1>Some Title</h1>``."
msgstr ""

# cf8c9646b1f04abda877913e25a955c3
#: ../../home/kovid/work/calibre/manual/function_mode.rst:39
msgid "Your first custom function - smartening hyphens"
msgstr ""

# 20a710f2e1f043969799c447bfca88dd
#: ../../home/kovid/work/calibre/manual/function_mode.rst:41
msgid ""
"The real power of function mode comes from being able to create your own "
"functions to process text in arbitrary ways. The Smarten Punctuation tool in"
" the editor leaves individual hyphens alone, so you can use the this "
"function to replace them with em-dashes."
msgstr ""

# 071682e40b82456b807ed3aae7969673
#: ../../home/kovid/work/calibre/manual/function_mode.rst:46
msgid ""
"To create a new function, simply click the Create/Edit button to create a "
"new function and copy the python code from below."
msgstr ""

# 6b655852f12540449943ddaf6ad868fc
#: ../../home/kovid/work/calibre/manual/function_mode.rst:54
msgid ""
"Every Search & Replace custom function must have a unique name and consist "
"of a python function named replace, that accepts all the arguments shown "
"above. For the moment, we wont worry about all the different arguments to "
"``replace()`` function. Just focus on the ``match`` argument. It represents "
"a match when running a search and replace. Its full documentation in "
"available `here <https://docs.python.org/2.7/library/re.html#match-"
"objects>`_. ``match.group()`` simply returns all the matched text and all we"
" do is replace hyphens in that text with em-dashes, first replacing double "
"hyphens and then single hyphens."
msgstr ""

# 98a7056664054dd9a9e5baefb9416908
#: ../../home/kovid/work/calibre/manual/function_mode.rst:64
msgid "Use this function with the find regular expression::"
msgstr ""

# 74252d4fd1724844afd34a9f39af8db6
#: ../../home/kovid/work/calibre/manual/function_mode.rst:68
msgid ""
"And it will replace all hyphens with em-dashes, but only in actual text and "
"not inside HTML tag definitions."
msgstr ""

# 84865a2287a84e3ab8c9edea9f5ee277
#: ../../home/kovid/work/calibre/manual/function_mode.rst:73
msgid ""
"The power of function mode - using a spelling dictionary to fix mis-"
"hyphenated words"
msgstr ""

# 663b4d3f1dfc491a805a4cd2b0c87129
#: ../../home/kovid/work/calibre/manual/function_mode.rst:75
msgid ""
"Often, ebooks created from scans of printed books contain mis-hyphenated "
"words -- words that were split at the end of the line on the printed page. "
"We will write a simple function to automatically find and fix such words."
msgstr ""

# fbc399f56bc24af09f151a761cb29073
#: ../../home/kovid/work/calibre/manual/function_mode.rst:100
msgid "Use this function with the same find expression as before, namely::"
msgstr ""

# f8d00c5c75fa49f185286cc957f5e7a7
#: ../../home/kovid/work/calibre/manual/function_mode.rst:104
msgid ""
"And it will magically fix all mis-hyphenated words in the text of the book. "
"The main trick is to use one of the useful extra arguments to the replace "
"function, ``dictionaries``.  This refers to the dictionaries the editor "
"itself uses to spell check text in the book. What this function does is look"
" for words separated by a hyphen, remove the hyphen and check if the "
"dictionary recognizes the composite word, if it does, the original words are"
" replaced by the hyphen free composite word."
msgstr ""

# 0b2a576af961483e85589acf26193ea0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:112
msgid ""
"Note that one limitation of this technique is it will only work for mono-"
"lingual books, because, by default, ``dictionaries.recognized()`` uses the "
"main language of the book."
msgstr ""

# 903d4541fb4c437384f783809499b985
#: ../../home/kovid/work/calibre/manual/function_mode.rst:118
msgid "Auto numbering sections"
msgstr ""

# 9b58735e45f54226b475cf9281b0a89e
#: ../../home/kovid/work/calibre/manual/function_mode.rst:120
msgid ""
"Now we will see something a little different. Suppose your HTML file has "
"many sections, each with a heading in an :code:`<h2>` tag that looks like "
":code:`<h2>Some text</h2>`. You can create a custom function that will "
"automatically number these headings with consecutive section numbers, so "
"that they look like :code:`<h2>1. Some text</h2>`."
msgstr ""

# c2463616f36d44609e22d2a8cb44de5e
#: ../../home/kovid/work/calibre/manual/function_mode.rst:136
msgid "Use it with the find expression::"
msgstr ""

# 364b5f3aa90f452e81ddb54afd14b071
#: ../../home/kovid/work/calibre/manual/function_mode.rst:140
msgid ""
"Place the cursor at the top of the file and click :guilabel:`Replace all`."
msgstr ""

# e8873e7797264441af1af0dd9038358f
#: ../../home/kovid/work/calibre/manual/function_mode.rst:142
msgid ""
"This function uses another of the useful extra arguments to ``replace()``: "
"the ``number`` argument. When doing a :guilabel:`Replace All` number is "
"automatically incremented for every successive match."
msgstr ""

# 19c5798e24004cd7a1fbd6adbbd96097
#: ../../home/kovid/work/calibre/manual/function_mode.rst:146
msgid ""
"Another new feature is the use of ``replace.file_order`` -- setting that to "
"``'spine'`` means that if this search is run on multiple HTML files, the "
"files are processed in the order in which they appear in the book. See "
":ref:`file_order_replace_all` for details."
msgstr ""

# 8b27876e353c469fa1929a6ec5f6c730
#: ../../home/kovid/work/calibre/manual/function_mode.rst:153
msgid "Auto create a Table of Contents"
msgstr ""

# e9d9d057f0d94ed88575ae53b00a46cc
#: ../../home/kovid/work/calibre/manual/function_mode.rst:155
msgid ""
"Finally, lets try something a little more ambitious. Suppose your book has "
"headings in ``h1`` and ``h2`` tags that look like ``<h1 id=\"someid\">Some "
"Text</h1>``. We will auto-generate an HTML Table of Contents based on these "
"headings. Create the custom function below:"
msgstr ""

# 06a9bd94f0364e18a5622bfc0239b478
#: ../../home/kovid/work/calibre/manual/function_mode.rst:198
msgid "And use it with the find expression::"
msgstr ""

# bd910e11be644f2a890b3eaefa382962
#: ../../home/kovid/work/calibre/manual/function_mode.rst:202
msgid ""
"Run the search on :guilabel:`All text files` and at the end of the search, a"
" window will popup with \"Debug Output from your function\" which will have "
"the HTML Table of Contents, ready to be pasted into :file:`toc.html`."
msgstr ""

# a715fde3fd28415c836d7a35afdbc48b
#: ../../home/kovid/work/calibre/manual/function_mode.rst:206
msgid ""
"The function above is heavily commented, so it should be easy to follow. The"
" key new feature is the use of another useful extra argument to the "
"``replace()`` function, the ``data`` object. The ``data`` object is a python"
" *dict* that persists between all successive invocations of ``replace()`` "
"during a single :guilabel:`Replace All` operation."
msgstr ""

# 5721ef331bcd404d86aec03f178149df
#: ../../home/kovid/work/calibre/manual/function_mode.rst:212
msgid ""
"Another new feature is the use of ``call_after_last_match`` -- setting that "
"to ``True`` on the ``replace()`` function means that the editor will call "
"``replace()`` one extra time after all matches have been found. For this "
"extra call, the match object will be ``None``."
msgstr ""

# af37b858e797450586c82a832e434595
#: ../../home/kovid/work/calibre/manual/function_mode.rst:217
msgid ""
"This was just a demonstration to show you the power of function mode, if you"
" really needed to generate a Table of Contents from headings in your book, "
"you would be better off using the dedicated Table of Contents tool in "
":guilabel:`Tools->Table of Contents`."
msgstr ""

# ee53b7ff77784d33a4cf5e2eea2b8d34
#: ../../home/kovid/work/calibre/manual/function_mode.rst:223
msgid "The API for the function mode"
msgstr ""

# 73fc3fd13888429cbbfbf05f1d6e36fa
#: ../../home/kovid/work/calibre/manual/function_mode.rst:225
msgid ""
"All function mode functions must be python functions named replace, with the"
" following signature::"
msgstr ""

# a282c16f0c1f4d3d804469b9822b8c84
#: ../../home/kovid/work/calibre/manual/function_mode.rst:231
msgid ""
"When a find/replace is run, for every match that is found, the ``replace()``"
" function will be called, it must return the replacement string for that "
"match. If no replacements are to be done, it should return ``match.group()``"
" which is the original string. The various arguments to the ``replace()`` "
"function are documented below."
msgstr ""

# c421abef8beb4a99bcf058c4757e6b8b
#: ../../home/kovid/work/calibre/manual/function_mode.rst:238
msgid "The ``match`` argument"
msgstr ""

# 0cbf3bdeb1424fe0bc152f996c916ea0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:240
msgid ""
"The ``match`` argument represents the currently found match. It is a `python"
" Match object <https://docs.python.org/2.7/library/re.html#match-objects>`_."
" It's most useful method is ``group()`` which can be used to get the matched"
" text corresponding to individual capture groups in the search regular "
"expression."
msgstr ""

# 4467dfef4df54f6ca4e0e4a5f5c0b16e
#: ../../home/kovid/work/calibre/manual/function_mode.rst:247
msgid "The ``number`` argument"
msgstr ""

# 86fb3a6334234d2abcaffab0fda74325
#: ../../home/kovid/work/calibre/manual/function_mode.rst:249
msgid ""
"The ``number`` argument is the number of the current match. When you run "
":guilabel:`Replace All`, every successive match will cause ``replace()`` to "
"be called with an increasing number. The first match has number 1."
msgstr ""

# 1abe37587c924fa5a29db2d9006e0c72
#: ../../home/kovid/work/calibre/manual/function_mode.rst:254
msgid "The ``file_name`` argument"
msgstr ""

# f361338ae9d04f2abef9fc67e3a0e5f7
#: ../../home/kovid/work/calibre/manual/function_mode.rst:256
msgid ""
"This is the filename of the file in which the current match was found. When "
"searching inside marked text, the ``file_name`` is empty. The ``file_name`` "
"is in canonical form, a path relative to the root of the book, using ``/`` "
"as the path separator."
msgstr ""

# 56531e88651e4c8aa991d34c23c19996
#: ../../home/kovid/work/calibre/manual/function_mode.rst:262
msgid "The ``metadata`` argument"
msgstr ""

# f870c796300b4034b726f7e7f45a32a5
#: ../../home/kovid/work/calibre/manual/function_mode.rst:264
msgid ""
"This represents the metadata of the current book, such as title, authors, "
"language, etc. It is an object of class "
":class:`calibre.ebooks.metadata.book.base.Metadata`. Useful attributes "
"include, ``title``, ``authors`` (a list of authors) and ``language`` (the "
"language code)."
msgstr ""

# ea26a26f51d045f694663c54ebbd7be0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:270
msgid "The ``dictionaries`` argument"
msgstr ""

# 5cf1b70fa5ac4379adb2e919131b63d9
#: ../../home/kovid/work/calibre/manual/function_mode.rst:272
msgid ""
"This represents the collection of dictionaries used for spell checking the "
"current book. It's most useful method is ``dictionaries.recognized(word)`` "
"which will return ``True`` if the passed in word is recognized by the "
"dictionary for the current book's language."
msgstr ""

# 8c5cdd292f5f496fa7000e6280637ea9
#: ../../home/kovid/work/calibre/manual/function_mode.rst:278
msgid "The ``data`` argument"
msgstr ""

# 01acfd6a106a42d3a4a3f87df3f47319
#: ../../home/kovid/work/calibre/manual/function_mode.rst:280
msgid ""
"This a simple python ``dict``. When you run :guilabel:`Replace All`, every "
"successive match will cause ``replace()`` to be called with the same "
"``dict`` as data. You can thus use it to store arbitrary data between "
"invocations of ``replace()`` during a :guilabel:`Replace All` operation."
msgstr ""

# e83373a802a149ba9d4c5d892779f5c5
#: ../../home/kovid/work/calibre/manual/function_mode.rst:287
msgid "The ``functions`` argument"
msgstr ""

# fcad2e6bdaaa42e9b15d3162d2b8c292
#: ../../home/kovid/work/calibre/manual/function_mode.rst:289
msgid ""
"The ``functions`` argument gives you access to all other user defined "
"functions. This is useful for code re-use. You can define utility functions "
"in one place and re-use them in all your other functions. For example, "
"suppose you create a function name ``My Function`` like this:"
msgstr ""

# 523faa56b4a649f4a1b71126baf60d2a
#: ../../home/kovid/work/calibre/manual/function_mode.rst:302
msgid ""
"Then, in another function, you can access the ``utility()`` function like "
"this:"
msgstr ""

# fcb3ee4b228444c3b9b019ed49a1861f
#: ../../home/kovid/work/calibre/manual/function_mode.rst:310
msgid ""
"You can also use the functions object to store persistent data, that can be "
"re-used by other functions. For example, you could have one function that "
"when run with :guilabel:`Replace All` collects some data and another "
"function that uses it when it is run afterwards. Consider the following two "
"functions:"
msgstr ""

# 34002c06f7b94affa6dde42b105dca05
#: ../../home/kovid/work/calibre/manual/function_mode.rst:330
msgid "Debugging your functions"
msgstr ""

# 4037d365b2994f6fb184ade3182ce818
#: ../../home/kovid/work/calibre/manual/function_mode.rst:332
msgid ""
"You can debug the functions you create by using the standard ``print()`` "
"function from python. The output of print will be displayed in a popup "
"window after the Find/replace has completed. You saw an example of using "
"``print()`` to output an entire table of contents above."
msgstr ""

# 9cde3af078ed40c88f6130275aa58030
#: ../../home/kovid/work/calibre/manual/function_mode.rst:340
msgid "Choose file order when running on multiple HTML files"
msgstr ""

# 44b3197bbb254330b5a735751e92db03
#: ../../home/kovid/work/calibre/manual/function_mode.rst:342
msgid ""
"When you run a :guilabel:`Replace All` on multiple HTML files, the order in "
"which the files are processes depends on what files you have open for "
"editing. You can force the search to process files in the order in which the"
" appear by setting the ``file_order`` attribute on your function, like this:"
msgstr ""

# 9af4765bfa444295a935aa7b4c17568b
#: ../../home/kovid/work/calibre/manual/function_mode.rst:354
msgid ""
"``file_order`` accepts two values, ``spine`` and ``spine-reverse`` which "
"cause the search to process multiple files in the order they appear in the "
"book, either forwards or backwards, respectively."
msgstr ""

# b4deaf8da9c5400cad3c2e5693150c08
#: ../../home/kovid/work/calibre/manual/function_mode.rst:359
msgid ""
"Having your function called an extra time after the last match is found"
msgstr ""

# 79091989faf949aeb64b0909319cf6d5
#: ../../home/kovid/work/calibre/manual/function_mode.rst:361
msgid ""
"Sometimes, as in the auto generate table of contents example above, it is "
"useful to have your function called an extra time after the last match is "
"found. You can do this by setting the ``call_after_last_match`` attribute on"
" your function, like this:"
msgstr ""
