# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-08 08:53+0530\n"
"PO-Revision-Date: 2014-08-08 03:24+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Korean (http://www.transifex.com/projects/p/calibre/language/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# da62b32ff9924202ae62dd60c836014a
#: ../../polish.rst:7
msgid "API Documentation for the ebook editing tools"
msgstr ""

# da1860ceb081400b858db1254e9281c3
#: ../../polish.rst:9
msgid ""
"The ebook editing tools consist of a "
":class:`calibre.ebooks.oeb.polish.container.Container` object that "
"represents a book as a collection of HTML + resource files, and various "
"tools that can be used to perform operations on the container. All the tools"
" are in the form of module level functions in the various "
"``calibre.ebooks.oeb.polish.*`` modules."
msgstr ""

# b04b99a64f6b4291b3713a45ea1561e8
#: ../../polish.rst:18
msgid "You obtain a container object for a book at a path like this::"
msgstr ""

# 3c16f9196596447bbbc82b55fe25c582
#: ../../polish.rst:23
msgid ""
"If you are writing a plugin for the ebook editor, you get the current "
"container for the book being edited like this::"
msgstr ""

# 32a0297c313144d69c32864033ab65cd
#: ../../polish.rst:33
msgid "The Container object"
msgstr ""

# 12ae9632d76843dab4a003f0b075529c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:1
msgid ""
"A container represents an Open EBook as a directory full of files and an opf"
" file. There are two important concepts:"
msgstr ""

# 7335d99a41f049c7ac3a343e446dd943
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:4
msgid ""
"The root directory. This is the base of the ebook. All the ebooks files are "
"inside this directory or in its sub-directories."
msgstr ""

# 9a84d3ba50ed494a9d64a8c65f991459
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:7
msgid ""
"Names: These are paths to the books' files relative to the root directory. "
"They always contain POSIX separators and are unquoted. They can be thought "
"of as canonical identifiers for files in the book. Most methods on the "
"container object work with names. Names are always in the NFC unicode normal"
" form."
msgstr ""

# d1366baa148b45f1ae80a6af82764c59
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:13
msgid ""
"Clones: the container object supports efficient on-disk cloning, which is "
"used to implement checkpoints in the ebook editor. In order to make this "
"work, you should never access files on the filesystem directly. Instead, use"
" :meth:`raw_data` or :meth:`open` to read/write to component files in the "
"book."
msgstr ""

# 24018967350844268828c05684e3a689
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:18
msgid ""
"When converting between hrefs and names use the methods provided by this "
"class, they assume all hrefs are quoted."
msgstr ""

# 5ef2060d300e4809805bf16852e53e1c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.abspath_to_name:1
msgid "Convert an absolute path to a canonical name relative to :attr:`root`"
msgstr ""

# 68166b6becf04497b095012e6d1362ce
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.abspath_to_name:3
msgid ""
"The base directory. By default the root for this container object is used."
msgstr ""

# 9fae60492bd945a5bf36a9d1d40b3e0c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.add_file:1
msgid ""
"Add a file to this container. Entries for the file are automatically created"
" in the OPF manifest and spine (if the file is a text document)"
msgstr ""

# 4c7f34a760cc48d79a8c3690d14c2c5c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.add_name_to_manifest:1
msgid ""
"Add an entry to the manifest for a file with the specified name. Returns the"
" manifest id."
msgstr ""

# 6e6d7bf840934a02966ee5570f4cd347
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.book_type:1
msgid "The type of book (epub for EPUB files and azw3 for AZW3 files)"
msgstr ""

# 0379663d94174120bd254fa42f3b1f96
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.commit:1
msgid ""
"Commit all dirtied parsed objects to the filesystem and write out the ebook "
"file at outpath. :param output: The path to write the saved ebook file to. "
"If None, the path of the original book file is used. :param keep_parsed: If "
"True the parsed representations of committed items are kept in the cache."
msgstr ""

# bcf05a2e832a4e36903974ebc2552444
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.commit_item:1
msgid ""
"Commit a parsed object to disk (it is serialized and written to the "
"underlying file). If ``keep_parsed`` is True the parsed representation is "
"retained in the cache. See also: :meth:`parsed`"
msgstr ""

# c5209571456c4ea18fe134aa70785e9e
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.decode:1
msgid "Automatically decode ``data`` into a ``unicode`` object."
msgstr ""

# bf37bcafe5c146a39f9b387c73c9a22a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.decode:3
msgid ""
"Normalize returned unicode to the NFC normal form as is required by both the"
" EPUB and AZW3 formats."
msgstr ""

# a959b3677106429c89ed6f2858101011
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.dirty:1
msgid ""
"Mark the parsed object corresponding to name as dirty. See also: "
":meth:`parsed`."
msgstr ""

# 1548f4027d9a459ebdbf09cc62550cfc
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.exists:1
msgid ""
"True iff a file corresponding to the canonical name exists. Note that this "
"function suffers from the limitations of the underlying OS filesystem, in "
"particular case (in)sensitivity. So on a case insensitive filesystem this "
"will return True even if the case of name is different from the case of the "
"underlying filesystem file. See also :meth:`has_name`"
msgstr ""

# 43e3951876fa4b2d971e049044a99899
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.filesize:1
msgid ""
"Return the size in bytes of the file represented by the specified canonical "
"name. Automatically handles dirtied parsed objects. See also: :meth:`parsed`"
msgstr ""

# 79d5bb010ed2419db61f2497785f7498
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.generate_item:1
msgid ""
"Add an item to the manifest with href derived from the given name. Ensures "
"uniqueness of href and id automatically. Returns generated item."
msgstr ""

# 1c7e12cf09514fdebd8c0a59ba582536
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.guess_type:1
msgid ""
"Return the expected mimetype for the specified file name based on its "
"extension."
msgstr ""

# 32b0698a8167443094269534f635cfea
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.guide_type_map:1
msgid "Mapping of guide type to canonical name"
msgstr ""

# d4b1916d757041e493ac9ea9d6a85eeb
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.has_name:1
msgid ""
"Return True iff a file with the same canonical name as that specified "
"exists. Unlike :meth:`exists` this method is always case-sensitive."
msgstr ""

# cf0e719d67184adda345fcff7ecc5628
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.href_to_name:1
msgid ""
"Convert an href (relative to base) to a name. base must be a name or None, "
"in which case self.root is used."
msgstr ""

# d7dd425673c5417889c7b02f6ef7424c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.insert_into_xml:1
msgid ""
"Insert item into parent (or append if index is None), fixing indentation. "
"Only works with self closing items."
msgstr ""

# 06de06476bc6407787d19133e1d1f0ec
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.iterlinks:1
msgid ""
"Iterate over all links in name. If get_line_numbers is True the yields "
"results of the form (link, line_number, offset). Where line_number is the "
"line_number at which the link occurs and offset is the number of characters "
"from the start of the line. Note that offset could actually encompass "
"several lines if not zero."
msgstr ""

# a064332dc74f4d138eeb4e1c2c652a26
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.manifest_id_map:1
msgid "Mapping of manifest id to canonical names"
msgstr ""

# 9831173e8bfc455791be7c862b9437be
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.manifest_type_map:1
msgid ""
"Mapping of manifest media-type to list of canonical names of that media-type"
msgstr ""

# 7a9f11b645f04551998fb16814563df8
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.mi:1
msgid ""
"The metadata of this book as a Metadata object. Note that this object is "
"constructed on the fly every time this property is requested, so use it "
"sparingly."
msgstr ""

# 849f086da3214de8ab1ae7f9b9b0a14a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.name_to_abspath:1
msgid "Convert a canonical name to an absolute OS dependant path"
msgstr ""

# 57d98e38415d468a8edcdc96b1f61655
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.name_to_href:1
msgid ""
"Convert a name to a href relative to base, which must be a name or None in "
"which case self.root is used as the base"
msgstr ""

# 56809019890940c380a3153c3a27f931
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_must_not_be_changed:1
msgid ""
"Set of names that must never be renamed. Depends on the ebook file format."
msgstr ""

# f999d69918b7448ab9e4f917205ab176
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_must_not_be_removed:1
msgid ""
"Set of names that must never be deleted from the container. Depends on the "
"ebook file format."
msgstr ""

# ee539dc4856345f89958717f76e1a1d9
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_need_not_be_manifested:1
msgid ""
"Set of names that are allowed to be missing from the manifest. Depends on "
"the ebook file format."
msgstr ""

# 7e2861efeca043779691161bce1cc4fb
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.open:1
msgid ""
"Open the file pointed to by name for direct read/write. Note that this will "
"commit the file if it is dirtied and remove it from the parse cache. You "
"must finish with this file before accessing the parsed version of it again, "
"or bad things will happen."
msgstr ""

# 3a47c9c596f441148d9043441fc35d80
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf:1
msgid "The parsed OPF file"
msgstr ""

# 645e318c4a62479b8c027528d8fbe1bf
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_get_or_create:1
msgid ""
"Convenience method to either return the first XML element with the specified"
" name or create it under the opf:package element and then return it, if it "
"does not already exist."
msgstr ""

# b1317d29f1e64d2aa3e6c021f8505e92
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_version:1
msgid "The version set on the OPF's <package> element"
msgstr ""

# 66e36a64f9db4ade8a22ebc49b479968
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_xpath:1
msgid ""
"Convenience method to evaluate an XPath expression on the OPF file, has the "
"opf: and dc: namespace prefixes pre-defined."
msgstr ""

# 7c15e437077341dd989c35f6b735d833
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.parsed:1
msgid ""
"Return a parsed representation of the file specified by name. For HTML and "
"XML files an lxml tree is returned. For CSS files a cssutils stylesheet is "
"returned. Note that parsed objects are cached for performance. If you make "
"any changes to the parsed object, you must call :meth:`dirty` so that the "
"container knows to update the cache. See also :meth:`replace`."
msgstr ""

# 9b72affc72b64962be2df1a44997e13b
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:1
msgid "Return the raw data corresponding to the file specified by name"
msgstr ""

# 821bd93fdf1f4d22858e27e049c2be5e
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:3
msgid ""
"If True and the file has a text based mimetype, decode it and return a "
"unicode object instead of raw bytes."
msgstr ""

# 11ab554bb782416384fbcea9dbb5b61d
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:4
msgid ""
"If True the returned unicode object is normalized to the NFC normal form as "
"is required for the EPUB and AZW3 file formats."
msgstr ""

# 790c6700cf7847d9a3455b1930a6a1b4
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.relpath:1
msgid ""
"Convert an absolute path (with os separators) to a path relative to base "
"(defaults to self.root). The relative path is *not* a name. Use "
":meth:`abspath_to_name` for that."
msgstr ""

# 3e1fc97e140d4d488dea68593d9757c7
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_from_spine:1
msgid ""
"Remove the specified items (by canonical name) from the spine. If "
"``remove_if_no_longer_in_spine`` is True, the items are also deleted from "
"the book, not just from the spine."
msgstr ""

# b0d8baa70f2c4e14bde352b07eec1052
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_from_xml:1
msgid ""
"Removes item from parent, fixing indentation (works only with self closing "
"items)"
msgstr ""

# 3bccb818a1164f8cb21e0ad92160860a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_item:1
msgid ""
"Remove the item identified by name from this container. This removes all "
"references to the item in the OPF manifest, guide and spine as well as from "
"any internal caches."
msgstr ""

# 1db929ff7029498e918242c57ec9cdd2
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.rename:1
msgid ""
"Renames a file from current_name to new_name. It automatically rebases all "
"links inside the file if the directory the file is in changes. Note however,"
" that links are not updated in the other files that could reference this "
"file. This is for performance, such updates should be done once, in bulk."
msgstr ""

# 09ff10911ac74990b77910e7becd9357
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.replace:1
msgid ""
"Replace the parsed object corresponding to name with obj, which must be a "
"similar object, i.e. an lxml tree for HTML/XML or a cssutils stylesheet for "
"a CSS file."
msgstr ""

# 13ac4197534a448cb015e39019004764
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.replace_links:1
msgid ""
"Replace all links in name using replace_func, which must be a callable that "
"accepts a URL and returns the replaced URL. It must also have a 'replaced' "
"attribute that is set to True if any actual replacement is done. Convenient "
"ways of creating such callables are using the :class:`LinkReplacer` and "
":class:`LinkRebaser` classes."
msgstr ""

# dda8ac44c56846c2bf67b351e3b76832
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.serialize_item:1
msgid ""
"Convert a parsed object (identified by canonical name) into a bytestring. "
"See :meth:`parsed`."
msgstr ""

# b1d7f5c04aca461ba07eca899f125420
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.set_spine:1
msgid ""
"Set the spine to be spine_items where spine_items is an iterable of the form"
" (name, linear). Will raise an error if one of the names is not present in "
"the manifest."
msgstr ""

# cd6668399ce54880a296d3283b804287
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_items:1
msgid ""
"An iterator yielding canonical name for every item in the books' spine. See "
"also: :attr:`spine_iter` and :attr:`spine_items`."
msgstr ""

# bf71eec45dbd42358cdd69f536b1a0b2
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_iter:1
msgid ""
"An iterator that yields item, name is_linear for every item in the books' "
"spine. item is the lxml element, name is the canonical file name and "
"is_linear is True if the item is linear. See also: :attr:`spine_names` and "
":attr:`spine_items`."
msgstr ""

# 1744134a17054243a101332825e7a0b6
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_names:1
msgid ""
"An iterator yielding name and is_linear for every item in the books' spine. "
"See also: :attr:`spine_iter` and :attr:`spine_items`."
msgstr ""

# dbcdae1fd19e4606a1bb0bfe39afa7b9
#: ../../polish.rst:39
msgid "Managing component files in a container"
msgstr ""

# 0e6f270770c14a08afb88ca4507c7c4c
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:1
msgid ""
"Replace links to files in the container. Will iterate over all files in the "
"container and change the specified links in them."
msgstr ""

# cb1ff018c61e419dbd72bf3051508e6f
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:3
msgid ""
"A mapping of old canonical name to new canonical name. For example: "
":code:`{'images/old.png': 'images/new.png'}`"
msgstr ""

# 84888a5d86e645b9bca92c62846c37b6
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:4
msgid ""
"A callable that takes two arguments ``(name, anchor)`` and returns a new "
"anchor. This is useful if you need to change the anchors in HTML files. By "
"default, it does nothing."
msgstr ""

# 68ee6c70de7f48b8b5c668f9c57baa6e
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:7
msgid "If False, links are not replaced in the OPF file."
msgstr ""

# 224667ea77ab49a689cb5e4002e54c04
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.rename_files:1
msgid ""
"Rename files in the container, automatically updating all links to them."
msgstr ""

# fd6f2d75053c4d648343ee781719d378
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.rename_files:3
msgid ""
"A mapping of old canonical name to new canonical name, for example: "
":code:`{'text/chapter1.html': 'chapter1.html'}`."
msgstr ""

# 3aedf71ea8244a9ab54e9b49a6b95c46
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.get_recommended_folders:1
msgid ""
"Return the folders that are recommended for the given filenames. The "
"recommendation is based on where the majority of files of the same type are "
"located in the container. If no files of a particular type are present, the "
"recommended folder is assumed to be the folder containing the OPF file."
msgstr ""

# 99af004cb34f4f34a8c08e700422b97f
#: ../../polish.rst:50
msgid "Pretty printing and auto fixing parse errors"
msgstr ""

# 98385f912cff4495acb100c1444b05c1
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.fix_html:1
msgid ""
"Fix any parsing errors in the HTML represented as a string in raw. Fixing is"
" done using the HTML 5 parsing algorithm."
msgstr ""

# 223a73ccc68b466690d4d0c23cc1d0e6
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.fix_all_html:1
msgid ""
"Fix any parsing errors in all HTML files in the container. Fixing is done "
"using the HTML 5 parsing algorithm."
msgstr ""

# 6a544fff3fa242359ba806af8f2abc07
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_html:1
msgid "Pretty print the HTML represented as a string in raw"
msgstr ""

# 7950bd1f7ed440e39af9314892a906be
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_css:1
msgid "Pretty print the CSS represented as a string in raw"
msgstr ""

# 3fd384da13f34bd2ba3c6402df2a265c
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_xml:1
msgid ""
"Pretty print the XML represented as a string in raw. If ``name`` is the name"
" of the OPF, extra OPF-specific prettying is performed."
msgstr ""

# aa4e4e58920a48acbba3195629de8e81
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_all:1
msgid "Pretty print all HTML/CSS/XML files in the container"
msgstr ""

# edac6f2b90b24967af6ac172153165ab
#: ../../polish.rst:68
msgid "Managing book jackets"
msgstr ""

# fefeaf72a08f4f628ac2aaf994261557
#: ../../../src/calibre/ebooks/oeb/polish/jacket.pydocstring of
#: calibre.ebooks.oeb.polish.jacket.remove_jacket:1
msgid ""
"Remove an existing jacket, if ant. Returns False if no existing jacket was "
"found."
msgstr ""

# b92d952c5edb42d19afbfce4bc1570d0
#: ../../../src/calibre/ebooks/oeb/polish/jacket.pydocstring of
#: calibre.ebooks.oeb.polish.jacket.add_or_replace_jacket:1
msgid ""
"Either create a new jacket from the book's metadata or replace an existing "
"jacket. Returns True if an existing jacket was replaced."
msgstr ""

# bd86d6d8f4f34315814917f55b241edc
#: ../../polish.rst:77
msgid "Splitting and merging of files"
msgstr ""

# df7662e183ce4087a5054a5eee4d9f57
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:1
msgid ""
"Split the file specified by name at the position specified by loc_or_xpath. "
"Splitting automatically migrates all links and references to the affected "
"files."
msgstr ""

# 53211171840c4e11b04c313f1953f549
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:5
msgid ""
"Should be an XPath expression such as //h:div[@id=\"split_here\"]. Can also "
"be a *loc* which is used internally to implement splitting in the preview "
"panel."
msgstr ""

# 68a9bc88352f4332830f1167841d3c88
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:8
msgid ""
"If True the split occurs before the identified element otherwise after it."
msgstr ""

# afa564195cbb4c4f87dd512aae751017
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:9
msgid "Used internally"
msgstr ""

# ab46b6407da4426cb8828350e8475763
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.multisplit:1
msgid ""
"Split the specified file at multiple locations (all tags that match the "
"specified XPath expression. See also: :func:`split`. Splitting automatically"
" migrates all links and references to the affected files."
msgstr ""

# fda1519ad7dc435f820a3a5181ccf777
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.multisplit:5
msgid ""
"If True the splits occur before the identified element otherwise after it."
msgstr ""

# 2afccb9c78674a9d86d827985b9c7ac8
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:1
msgid ""
"Merge the specified files into a single file, automatically migrating all "
"links and references to the affected files. The file must all either be HTML"
" or CSS files."
msgstr ""

# a47d7fab8ee24d4a8a5765b91ee0c35b
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:4
msgid "Must be either ``'text'`` for HTML files or ``'styles'`` for CSS files"
msgstr ""

# ee3dde656c0b423191f7fcabe5a86a02
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:5
msgid "The list of files to be merged"
msgstr ""

# a39d4d4a782d4d4db75b8bbe9aadff8e
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:6
msgid ""
"Which of the merged files is the *master* file, that is, the file that will "
"remain after merging."
msgstr ""

# f1ea28397ec94f74b7d5a19ad401156a
#: ../../polish.rst:88
msgid "Managing covers"
msgstr ""

# 87484d1945ab43b88b967ca38ab63015
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:1
msgid "Set the cover of the book to the image pointed to by cover_path."
msgstr ""

# 5bb66776c8a54bbe8b8c3a0b16ba6ae8
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:3
msgid ""
"Either the absolute path to an image file or the canonical name of an image "
"in the book. When using an image int he book, you must also set options, see"
" below."
msgstr ""

# c9a4c3124e634d748ddbe19de2044e4a
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:6
msgid ""
"An optional callable that takes a single argument. It will be called with "
"information about the tasks being processed."
msgstr ""

# 954fa9c70f814fef91b36506b852dcda
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:8
msgid ""
"None or a dictionary that controls how the cover is set. The dictionary can "
"have entries: **keep_aspect**: True or False  (Preserve aspect ratio of "
"covers in EPUB) **no_svg**: True or False  (Use an SVG cover wrapper in the "
"EPUB titlepage) **existing**: True or False  (``cover_path`` refers to an "
"existing image in the book)"
msgstr ""

# 1b529b4993214652aabf5d0fb6e5ee77
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_cover:1
msgid "Mark the specified image as the cover image."
msgstr ""

# 54312aed9abb4684b7e9dba4dfc5eddf
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_titlepage:1
msgid "Mark the specified HTML file as the titlepage of the EPUB."
msgstr ""

# b9fec1b6e8404e519afecd498012c3f7
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_titlepage:3
msgid "If True the HTML file is moved to the start of the spine"
msgstr ""

# 9a3d8ba476e944f1aaf2114892219cdb
#: ../../polish.rst:99
msgid "Working with CSS"
msgstr ""

# 7b22af1df71c43209fcaf92ebc373345
#: ../../../src/calibre/ebooks/oeb/polish/fonts.pydocstring of
#: calibre.ebooks.oeb.polish.fonts.change_font:1
msgid ""
"Change a font family from old_name to new_name. Changes all occurrences of "
"the font family in stylesheets, style tags and style attributes. If the "
"old_name refers to an embedded font, it is removed. You can set new_name to "
"None to remove the font family instead of changing it."
msgstr ""

# 18c91fa848154a0181b39258899e5bbe
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:1
msgid ""
"Remove all unused CSS rules from the book. An unused CSS rule is one that "
"does not match any actual content."
msgstr ""

# 02c949fae5f2468a9869e4e924ad3414
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:3
msgid ""
"An optional callable that takes a single argument. It is called with "
"information about the operations being performed."
msgstr ""

# 6062e22cc776439385c50874116d37ec
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:4
msgid ""
"If True, class attributes in the HTML that do not match any CSS rules are "
"also removed."
msgstr ""

# 6e31abcc4e8b4bb9a10d704aee26fb34
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:1
msgid "Remove the specified CSS properties from all CSS rules in the book."
msgstr ""

# 0c58a13fd1a6484197c407dfa13510f3
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:3
msgid ""
"Set of properties to remove. For example: :code:`{'font-family', 'color'}`."
msgstr ""

# 72a6193dd1d946deb09673573162d081
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:4
msgid ""
"The files from which to remove the properties. Defaults to all HTML and CSS "
"files in the book."
msgstr ""

# 5261b4adae954894be37f8350e0ecdab
#: ../../polish.rst:111
msgid "Working with the Table of Contents"
msgstr ""

# ed66210291004fbd894bc9ede7f22c39
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_xpaths:1
msgid ""
"Generate a Table of Contents from a list of XPath expressions. Each "
"expression in the list corresponds to a level of the generate ToC. For "
"example: :code:`['//h:h1', '//h:h2', '//h:h3']` will generate a three level "
"table of contents from the ``<h1>``, ``<h2>`` and ``<h3>`` tags."
msgstr ""

# ce9e63a044344b42ac3f0b51792d5e1a
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_links:1
msgid "Generate a Table of Contents from links in the book."
msgstr ""

# 5a22da2adc4e4d4c91a655041992d36d
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_files:1
msgid "Generate a Table of Contents from files in the book."
msgstr ""

# 52c2d8feaff84c158054349380ebf944
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.create_inline_toc:1
msgid ""
"Create an inline (HTML) Table of Contents from an existing NCX table of "
"contents."
msgstr ""

# a386cfbd5d524ccea87e0d90f685cad2
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.create_inline_toc:3
msgid "The title for this table of contents."
msgstr ""

# 297aa1b0c9814a59a583547de1bfd335
#: ../../polish.rst:125
msgid "Edit Book Tool"
msgstr ""

# 6c9be196ea7b42c9bfa747b524814be3
#: ../../<autodoc>:1
msgid "Bases: :class:`object`"
msgstr ""

# c95a26b8df9b4a6bbdc13defa77f2814
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool:3
msgid ""
"The base class for individual tools in an Edit Book plugin. Useful members "
"include:"
msgstr ""

# 11f4bd548b884b8cbbebc14fe6ff687b
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool:5
msgid ""
"``self.plugin``: A reference to the :class:`calibre.customize.Plugin` object"
" to which this tool belongs."
msgstr ""

# 27054b3c78f442c4a9c5c1830575e162
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool:6
msgid "self. :attr:`boss`"
msgstr ""

# 61941f0796c04dab860cd1cf315d566f
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool:7
msgid "self. :attr:`gui`"
msgstr ""

# e5666a9b6fb54e9d81acdbee0698ca3d
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool:9
msgid "Methods that must be overridden in sub classes:"
msgstr ""

# c5a1939b953c4842922ca65cf10195d7
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool:11
msgid ":meth:`create_action`"
msgstr ""

# bf8bcdffb1cb412c82d39cfd9264cc64
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool:12
msgid ":meth:`register_shortcut`"
msgstr ""

# 5dabae009996497797eef814b76d7edd
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.name:1
msgid "Set this to a unique name it will be used as a key"
msgstr ""

# 5bb386a24a714051ac4684a843c668cc
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.allowed_in_toolbar:1
msgid "If True the user can choose to place this tool in the plugins toolbar"
msgstr ""

# 5f3509dbd1e94dc592710a142baf2aaf
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.allowed_in_menu:1
msgid "If True the user can choose to place this tool in the plugins menu"
msgstr ""

# 3be3658b213d4183b9a7e566c58d21e1
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.toolbar_button_popup_mode:1
msgid ""
"The popup mode for the menu (if any) of the toolbar button. Possible values "
"are 'delayed', 'instant', 'button'"
msgstr ""

# 5fed585e9a2d4930a398d501dd4fae72
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.boss:1
msgid ""
"The :class:`calibre.gui2.tweak_book.boss.Boss` object. Used to control the "
"user interface."
msgstr ""

# a0d8a84ba8f444d8b7f85ae636844f3d
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.gui:1
msgid "The main window of the user interface"
msgstr ""

# 155e8ec2553c4eddae2471e4f874ca74
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.current_container:1
msgid ""
"Return the current :class:`calibre.ebooks.oeb.polish.container.Container` "
"object that represents the book being edited."
msgstr ""

# 4c75be795d584ac4a15f8347b7025dd9
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.register_shortcut:1
msgid ""
"Register a keyboard shortcut that will trigger the specified ``qaction``. "
"This keyboard shortcut will become automatically customizable by the user in"
" the Keyboard section of the editor preferences."
msgstr ""

# 58e1d9a5cc4b4ab68bef6e87961da7b4
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.register_shortcut:4
msgid ""
"A QAction object, it will be triggered when the configured key combination "
"is pressed by the user."
msgstr ""

# 0d3dec435ff94e45ac6f7ff64403fbd4
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.register_shortcut:6
msgid ""
"A unique name for this shortcut/action. It will be used internally, it must "
"not be shared by any other actions in this plugin."
msgstr ""

# 6f8b3d39ec564995bfd763534991ded7
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.register_shortcut:9
msgid ""
"A list of the default keyboard shortcuts. If not specified no default "
"shortcuts will be set. If the shortcuts specified here conflict with either "
"builtin shortcuts or shortcuts from user configuration/other plugins, they "
"will be ignored. In that case, users will have to configure the shortcuts "
"manually via Preferences. For example: ``default_keys=('Ctrl+J', 'F9')``."
msgstr ""

# 0ad20a0e1a3440c1866b2d70177ecab7
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.register_shortcut:15
msgid ""
"An optional short description of this action. If not specified the text from"
" the QAction will be used."
msgstr ""

# 17cbb97491c84d48a86dfc2b15f12ff1
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.register_shortcut:17
msgid ""
"An optional longer description of this action, it will be used in the "
"preferences entry for this shortcut."
msgstr ""

# b1e66eebfbaf41fa821977082051d249
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.create_action:1
msgid ""
"Create a QAction that will be added to either the plugins toolbar or the "
"plugins menu depending on ``for_toolbar``. For example::"
msgstr ""

# 2f7e503c91c34dc6a12b0ff47e1494ec
#: ../../../src/calibre/gui2/tweak_book/plugin.pydocstring of
#: calibre.gui2.tweak_book.plugin.Tool.create_action:19
msgid "Method :meth:`register_shortcut`."
msgstr ""

# 506b9d19cb0c42208f46c59862e0f220
#: ../../polish.rst:134
msgid "Controlling the editor's user interface"
msgstr ""

# effe21456cf74a51b1acbfb3f28dc118
#: ../../polish.rst:136
msgid ""
"The ebook editor's user interface is controlled by a single global *Boss* "
"object. This has many useful methods that can be used in plugin code to "
"perform common tasks."
msgstr ""

# f85e569cc7524c8b9605ede324f3db2b
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.add_savepoint:1
msgid "Create a restore checkpoint with the name specified as ``msg``"
msgstr ""

# 2147770ae18449ecbd76e6b515845131
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.apply_container_update_to_gui:1
msgid ""
"Update all the components of the user interface to reflect the latest data "
"in the current book container."
msgstr ""

# 8423beaef4db44aea5e6f7b01be56de1
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.apply_container_update_to_gui:3
msgid ""
"If True, the book will be marked as modified, so the user will be prompted "
"to save it when quitting."
msgstr ""

# 5b65c1c1273e4d32b43b07777193c4a5
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.close_editor:1
msgid "Close the editor that is editing the file specified by ``name``"
msgstr ""

# e6299e14f4394584b1dca2994c8237d3
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.commit_all_editors_to_container:1
msgid ""
"Commit any changes that the user has made to files open in editors to the "
"container. You should call this method before performing any actions on the "
"current container"
msgstr ""

# b59e0de7cd0f45209d6500e1b168e43d
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.currently_editing:1
msgid ""
"Return the name of the file being edited currently or None if no file is "
"being edited"
msgstr ""

# 308e0aaa68884cafa6319bb666072393
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.edit_file:1
msgid "Open the file specified by name in an editor"
msgstr ""

# 3f8c9ad39f944ee7958b1e3bd28702a9
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.edit_file:3
msgid ""
"The media type of the file, for example, ``'text/html'``. If not specified "
"it is guessed from the file extension."
msgstr ""

# 0812f815cb9d4893882c5cad87817926
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.edit_file:4
msgid "A template to initialize the opened editor with"
msgstr ""

# 004017014e374d498fc5aca4b3b7c50c
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.open_book:1
msgid ""
"Open the ebook at ``path`` for editing. Will show an error if the ebook is "
"not in a supported format or the current book has unsaved changes."
msgstr ""

# e10b562d837b473f9dddf5ddf4548c75
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.open_book:3
msgid ""
"The name of a file inside the newly openend book to start editing. Can also "
"be a list of names."
msgstr ""

# d38a128d209543db88703b55902a021c
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.rewind_savepoint:1
msgid ""
"Undo the previous creation of a restore checkpoint, useful if you create a "
"checkpoint, then abort the operation with no changes"
msgstr ""

# 924d0ad211c24af6b56dd72356328f1d
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.save_book:1
msgid "Save the book. Saving is performed in the background"
msgstr ""

# a6fcb164fa2e4ac4a1adb524264b2ff4
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.set_modified:1
msgid "Mark the book as having been modified"
msgstr ""

# 4fb4bfb0199f4d33b9941dece8636bfa
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_current_diff:1
msgid "Show the changes to the book from its last checkpointed state"
msgstr ""

# 87c70c527b7149698693bd40d27e647f
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_current_diff:3
msgid ""
"If True the diff dialog will have a button to allow the user to revert all "
"changes"
msgstr ""

# 9998f7099d2f46eaa30f3397aba5f062
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_current_diff:4
msgid ""
"A container object to compare the current container to. If None, the "
"previously checkpointed container is used"
msgstr ""

# 4595897d844f4976bf0b748b96636948
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.show_editor:1
msgid "Show the editor that is editing the file specified by ``name``"
msgstr ""

# 6e3e100720fd461cac19c74d37b9eaf5
#: ../../../src/calibre/gui2/tweak_book/boss.pydocstring of
#: calibre.gui2.tweak_book.boss.Boss.sync_preview_to_editor:1
msgid ""
"Sync the position of the preview panel to the current cursor position in the"
" current editor"
msgstr ""
