# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Ptitprince <leporello1791@gmail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-29 09:29+0530\n"
"PO-Revision-Date: 2014-09-01 10:30+0000\n"
"Last-Translator: Ptitprince <leporello1791@gmail.com>\n"
"Language-Team: French (http://www.transifex.com/projects/p/calibre/language/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# 782af361c6ce4eb9b9d16728db173a94
#: ../../home/kovid/work/calibre/manual/xpath.rst:5
msgid "XPath Tutorial"
msgstr "Tutoriel XPath"

# f201d708bd2e400cbd4c615b13998e74
#: ../../home/kovid/work/calibre/manual/xpath.rst:7
msgid ""
"In this tutorial, you will be given a gentle introduction to `XPath "
"<http://en.wikipedia.org/wiki/XPath>`_, a query language that can be used to"
" select arbitrary parts of `HTML <http://en.wikipedia.org/wiki/HTML>`_ "
"documents in calibre. XPath is a widely used standard, and googling it will "
"yield a ton of information. This tutorial, however, focuses on using XPath "
"for ebook related tasks like finding chapter headings in an unstructured "
"HTML document."
msgstr "Dans ce tutoriel, il vous sera donné une légère introduction à  `XPath <http://en.wikipedia.org/wiki/XPath>`_, un langage de requête qui peut être utilisé pour sélectionner des parties arbitraires de documents `HTML <http://en.wikipedia.org/wiki/HTML>`_ dans calibre. XPath est un standard utilisé largement, et le googler produira une tonne d'information. Ce tutoriel, toutefois, se concentrera sur l'utilisation d'XPath pour des tâches relatives aux livres numériques comme trouver les entêtes de chapitre dans un document HTML non structuré."

# d3dd6d9d8e6848b8bcb42c76de5ea23e
#: ../../home/kovid/work/calibre/manual/xpath.rst:0
msgid "Contents"
msgstr "Contenu"

# ccd17e866cd14155b4246bc596cf8e52
#: ../../home/kovid/work/calibre/manual/xpath.rst:20
msgid "Selecting by tagname"
msgstr "Sélection par nom de balise"

# b526df30482a405d834c3e60021f11e4
#: ../../home/kovid/work/calibre/manual/xpath.rst:22
msgid ""
"The simplest form of selection is to select tags by name. For example, "
"suppose you want to select all the ``<h2>`` tags in a document. The XPath "
"query for this is simply::"
msgstr "La forme la plus simple de sélection est de sélectionner les balises par nom. Par exemple, supposons que vous voulez sélectionner toutes les balises ``<h2>`` dans un document. La requête XPath pour cela est simplement ::"

# 90861834bb204a0ea9e471f8398f25d3
#: ../../home/kovid/work/calibre/manual/xpath.rst:28
msgid ""
"The prefix `//` means *search at any level of the document*. Now suppose you"
" want to search for ``<span>`` tags that are inside ``<a>`` tags. That can "
"be achieved with::"
msgstr "Le préfixe `//`signifie *rechercher à n'importe quel niveau du document*. Maintenant supposons que vous voulez rechercher les balises ``<span>`` qui contiennent des balises ``<a>``Ceci peut être accompli avec ::"

# adb87fed492e417ba4f0589102adf7ac
#: ../../home/kovid/work/calibre/manual/xpath.rst:34
msgid ""
"If you want to search for tags at a particular level in the document, change"
" the prefix::"
msgstr "Si vous voulez rechercher des balises à un niveau particulier dans le document, changez le préfixe ::"

# b138a9fed9cf45d1b0ca53fda1bb58dc
#: ../../home/kovid/work/calibre/manual/xpath.rst:40
msgid ""
"This will match only ``<p>A very short ebook to demonstrate the use of "
"XPath.</p>`` in the :ref:`sample_ebook` but not any of the other ``<p>`` "
"tags. The ``h:`` prefix in the above examples is needed to match XHTML tags."
" This is because internally, calibre represents all content as XHTML. In XHTML"
" tags have a *namespace*, and ``h:`` is the namespace prefix for HTML tags."
msgstr "Ceci correspondra uniquement ``<p>Un livre numérique très court pour démontrer l'utilisation d'XPath.</p>`` dans le :ref:`sample_ebook` mais pas dans aucunes des autres balises ``<p>``. Le préfixe ``h:`` dans l'exemple plus haut est nécessaire pour correspondre aux balises XHTML. Ceci est parce que en interne, |app représente tout le contenu comme du XHTML. En XHTML les balises ont un *espace de nom*, et  ``h:`` est préfixe d'espace de nom pour les balises HTML."

# 298e9699514e46f28eac692d082e59aa
#: ../../home/kovid/work/calibre/manual/xpath.rst:46
msgid ""
"Now suppose you want to select both ``<h1>`` and ``<h2>`` tags. To do that, "
"we need a XPath construct called *predicate*. A :dfn:`predicate` is simply a"
" test that is used to select tags. Tests can be arbitrarily powerful and as "
"this tutorial progresses, you will see more powerful examples. A predicate "
"is created by enclosing the test expression in square brackets::"
msgstr "Maintenant supposons que vous voulez sélectionner conjointement les balises ``<h1>`` et ``<h2>``. Pour faire cela, nous avons besoin d'une construction XPah appelée *prédicat*. Un :dfn:`prédicat` est simplement un test qui est utilisé pour sélectionner les balises. Les tests peuvent arbitrairement puissants et au long de la progression de ce tutoriel, vous verrez des exemples plus puissants. Un prédicat est créé en mettant l'expression test entre crochets."

# 6c55cc0e936a481eb13877fdbd82ec96
#: ../../home/kovid/work/calibre/manual/xpath.rst:54
msgid ""
"There are several new features in this XPath expression. The first is the "
"use of the wildcard ``*``. It means *match any tag*. Now look at the test "
"expression ``name()='h1' or name()='h2'``. :term:`name()` is an example of a"
" *built-in function*. It simply evaluates to the name of the tag. So by "
"using it, we can select tags whose names are either `h1` or `h2`. Note that "
"the :term:`name()` function ignores namespaces so that there is no need for "
"the ``h:`` prefix. XPath has several useful built-in functions. A few more "
"will be introduced in this tutorial."
msgstr "Il y a plusieurs nouvelles caractéristiques dans cette expression XPath. La première est l'utilisation du joker ``*``. Il signifie *correspond à n'importe quelle balise*. Maintenant regardez à l'expression test ``name()='h1' or name()='h2'``. :term:`name()` est un exemple d'une *fonction intégrée*. Il évalue simplement le nom de la balise. Donc en l'utilisant, nous pouvons sélectionner des balises dont les noms sont soit `h1` ou `h2`. Notez que la fonction :term:`name()` ignore les espaces de nom de sorte qu'il n'est d'aucune nécessité du préfixe ``h:``. XPath a plusieurs fonctions intégrées utiles. Quelques unes de plus seront introduites dans ce tutoriel."

# 9ae75da161b74502952f4269730376d5
#: ../../home/kovid/work/calibre/manual/xpath.rst:63
msgid "Selecting by attributes"
msgstr "Sélection par attributs"

# f0ee64aef5b74916a95de54fec33ad77
#: ../../home/kovid/work/calibre/manual/xpath.rst:65
msgid ""
"To select tags based on their attributes, the use of predicates is "
"required::"
msgstr "Pour sélectionner des balises sur base de leurs attributs, l'utilisation des prédicats est requise //"

# d3617f7a95974fdf85f98895b4a0916a
#: ../../home/kovid/work/calibre/manual/xpath.rst:71
msgid ""
"Here, the ``@`` operator refers to the attributes of the tag. You can use "
"some of the `XPath built-in functions`_ to perform more sophisticated "
"matching on attribute values."
msgstr "Ici l'opérateur ``@`` réfère aux attributs de la balise. Vous pouvez utilisers certaines des `Fonctions intégrées XParh`_ pour effectuer des correspondances plus sophistiquées sur les valeurs attribut."

# b3ec97f7619243ba86ecbbf2b9db86b7
#: ../../home/kovid/work/calibre/manual/xpath.rst:77
msgid "Selecting by tag content"
msgstr "Sélection par contenu de balise"

# 32f4fbfbe22e4568947e2bf6a7ac77c9
#: ../../home/kovid/work/calibre/manual/xpath.rst:79
msgid ""
"Using XPath, you can even select tags based on the text they contain. The "
"best way to do this is to use the power of *regular expressions* via the "
"built-in function :term:`re:test()`::"
msgstr "En utilisant XPath, vous pouvez même sélectionner des balises basées sur le texte qu'elles contiennent. La meilleure manière de faire cela est d'utiliser la puissance des *expressions régulières* par l'intermédiaire de la fonction intégrée :term:`re:test()`::"

# 468a147133c04851ac5db6832f7a04e0
#: ../../home/kovid/work/calibre/manual/xpath.rst:85
msgid ""
"Here the ``.`` operator refers to the contents of the tag, just as the ``@``"
" operator referred to its attributes."
msgstr "Ici l'ipérateur ``.`` réfère au contenu de la balise, tout comme l'opérateur ``@`` réfère à ses attributs."

# d039e2fdf65d49179b7a447c19ae047c
#: ../../home/kovid/work/calibre/manual/xpath.rst:91
msgid "Sample ebook"
msgstr "Livre numérique exemple"

# f7a7794092a44209b02a861e70124573
#: ../../home/kovid/work/calibre/manual/xpath.rst:97
msgid "XPath built-in functions"
msgstr "Les fonctions XPath intégrées"

# d21015e0b0e6440c9933b209b57b40f6
#: ../../home/kovid/work/calibre/manual/xpath.rst:100
msgid "name()"
msgstr "name()"

# 94388645cd164957b34a9fdc2c756ed9
#: ../../home/kovid/work/calibre/manual/xpath.rst:102
msgid "The name of the current tag."
msgstr "Le nom de la balise actuelle."

# 70580a0753ea442493d6fbeb5e5e297a
#: ../../home/kovid/work/calibre/manual/xpath.rst:103
msgid "contains()"
msgstr "contains()"

# dc1e96798fe340d08f5ab5b0ce52d588
#: ../../home/kovid/work/calibre/manual/xpath.rst:105
msgid "``contains(s1, s2)`` returns `true` if s1 contains s2."
msgstr "``contains(s1, s2)`` renvoie `true` si s1 contient s2."

# 0e97464316dc4dcb81d29e4d2a547899
#: ../../home/kovid/work/calibre/manual/xpath.rst:106
msgid "re:test()"
msgstr "re:test()"

# 6eaa7d887a8943b2be725aa6b0ff5785
#: ../../home/kovid/work/calibre/manual/xpath.rst:108
msgid ""
"``re:test(src, pattern, flags)`` returns `true` if the string `src` matches "
"the regular expression `pattern`. A particularly useful flag is ``i``, it "
"makes matching case insensitive. A good primer on the syntax for regular "
"expressions can be found at `regexp syntax <http://docs.python.org/lib/re-"
"syntax.html>`_"
msgstr "``re:test(src, pattern, flags)`` renvoie `true` si la chaîne `src` correspond au `modèle` de l'expression régulière. un indicateur particulièrement utile est ``i``, il rend les correspondances sensibles à la casse. Une bonne amorce sur la syntaxe pour les expressions régulières peut être trouvée sur `syntaxe regexp <http://docs.python.org/lib/re-syntax.html>`_"
