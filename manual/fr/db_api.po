# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Ptitprince <leporello1791@gmail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-15 16:06+0530\n"
"PO-Revision-Date: 2014-08-15 17:31+0000\n"
"Last-Translator: Ptitprince <leporello1791@gmail.com>\n"
"Language-Team: French (http://www.transifex.com/projects/p/calibre/language/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# f165d3db1548412eb1c822c6d04f9c43
#: ../../home/kovid/work/calibre/manual/db_api.rst:5
msgid "API Documentation for the database interface"
msgstr "Documentation API pour l'interface base de données"

# 74618f1ea38a47ac8fdf3a7fc2144b15
#: ../../home/kovid/work/calibre/manual/db_api.rst:10
msgid ""
"This API is thread safe (it uses a multiple reader, single writer locking "
"scheme).  You can access this API like this::"
msgstr "Cette API est un fil sûr (Elle utilise un lecteur multiple, un schéma rédacteur unique fermé). Vous pouvez accéder à cette API comme ceci : "

# 7d07dc10602f4e75936e5c0ce95368b8
#: ../../home/kovid/work/calibre/manual/db_api.rst:15
msgid ""
"If you are in a calibre plugin that is part of the main calibre GUI, you get"
" access to it like this instead::"
msgstr "Si vous êtes dans une extension calibre qui est partie prenante du GUI principal de calibre, vous y obtenez l'accès comme ceci à la place :"

# cacb2f272557427ca77a12323ef2a685
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache:1
msgid ""
"An in-memory cache of the metadata.db file from a calibre library. This "
"class also serves as a threadsafe API for accessing the database. The in-"
"memory cache is maintained in normal form for maximum performance."
msgstr "Un cache mémoire du fichier metadata.db depuis une bibliothèque calibre. Cette classe sert également  comme une API de sécurité pour accéder à la base de données. Le cache mémoire est maintenu dans une forme normale pour une performance maximale."

# dcfebf76792b44f2a57841cfd91bb448
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache:5
msgid ""
"SQLITE is simply used as a way to read and write from metadata.db robustly. "
"All table reading/sorting/searching/caching logic is re-implemented. This "
"was necessary for maximum performance and flexibility."
msgstr "SQLITE est simplement utilisé comme une manière robuste de lire et écrire depuis metadata.db. Toute table lecture/tri/recherche/cache est ré-implémentée. Ceci était nécessaire pour un maximum de performance et de flexibilité."

# 3a7d250dd23e4d31adcbcd166828cea4
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_books:1
msgid ""
"Add the specified books to the library. Books should be an iterable of "
"2-tuples, each 2-tuple of the form :code:`(mi, format_map)` where mi is a "
"Metadata object and format_map is a dictionary of the form :code:`{fmt: "
"path_or_stream}`, for example: :code:`{'EPUB': '/path/to/file.epub'}`."
msgstr "Ajouter les livres spécifiés à la bibliothèque. Les livres doivent être un itérable de 2-tuple, chaque 2-tuple de la forme :code:`(mi, format_map)` où mi est un objet métadonnée et format_map est un dictionnaire de la forme :code:`{fmt: path_or_stream}`, par exemple : :code:`{'EPUB': '/path/to/file.epub'}`."

# 4faf734cb160474fbdd24029a6cf1928
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_books:6
msgid ""
"Returns a pair of lists: :code:`ids, duplicates`. ``ids`` contains the book "
"ids for all newly created books in the database. ``duplicates`` contains the"
" :code:`(mi, format_map)` for all books that already exist in the database "
"as per the simple duplicate detection heuristic used by :meth:`has_book`."
msgstr "Renvoie une paire de listes : :code:`ids, duplicates`. ``ids`` contient les ids de livre pour tous les livres nouvellement créés dans la base de données. ``duplicates`` contient :code:`(mi, format_map)` pour tous les livres qui existent déjà dans la base de données  selon l'heuristique de détection simple doublon utilisée par  :meth:`has_book`."

# db94ef47ddcc4b8583d146057e4f66ae
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_custom_book_data:1
msgid ""
"Add data for name where val_map is a map of book_ids to values. If "
"delete_first is True, all previously stored data for name will be removed."
msgstr "Ajouter les données pour le nom où val_map est une carte des book_ids vers les valeurs. Si delete_first est Vrai, toutes les données stockées précédemment seront supprimées."

# d5aae49e11dc4d9591d2a41eeac11caa
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:1
msgid ""
"Add a format to the specified book. Return True of the format was added "
"successfully."
msgstr "Ajouter un format au livre spécifié. Renvoie Vrai si le format est ajouté avec succès."

# 9c1176d2cd274f879b189f7dcf15707b
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:3
msgid ""
"If True replace existing format, otherwise if the format already exists, "
"return False."
msgstr "Si Vrai, remplace le format existant, autrement si le format existe déjà, renvoie Faux."

# d3d7b2dd263748b8be3d0100a936a9f5
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:4
msgid ""
"If True, file type plugins are run on the format before and after being "
"added."
msgstr "Si Vrai, les extensions de type de fichier sont exécutés. dans le format avant et après avoir été ajoutés"

# 6210d52f168049a0801c2739cb335af5
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:5
msgid "Internal use only."
msgstr "Usage interne uniquement."

# 7a7e4428a13f4f5f89fdee02d591f216
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_book_ids:1
msgid "Frozen set of all known book ids."
msgstr "Ensemble gelé de tous les ids connus de livre."

# 8d6e4b2855344b269bdc19322a862133
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_field_for:1
msgid "Same as field_for, except that it operates on multiple books at once"
msgstr "Identique à field_for, excepté qu'il agit sur de multiples livres en une fois"

# 4d88c46b6e5e4a8da8df25245fc03b5b
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_field_ids:1
msgid "Frozen set of ids for all values in the field ``name``."
msgstr "Ensemble gelé d'ids pour toutes les valeurs dans le champ``name``. "

# 63009cf059124b6cb02c46373fda3064
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_field_names:1
msgid ""
"Frozen set of all fields names (should only be used for many-one and many-"
"many fields)"
msgstr "Ensemble gelé de tous les champs de noms (doit être uniquement utilisé pour les champs many-one et many-many)"

# e577cfcf31ee4f72992454833f5ce981
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.author_data:1
msgid "Return author data as a dictionary with keys: name, sort, link"
msgstr "Renvoie la donnée auteur comme un dictionnaire avec des clé : nom, genre, lien"

# 698101f7d6a14ad0a5452d85c14215a9
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.author_data:3
msgid ""
"If no authors with the specified ids are found an empty dictionary is "
"returned. If author_ids is None, data for all authors is returned."
msgstr "Si aucun auteur avec les ids spécifiés ne sont trouvés un dictionnaire vide est renvoyé. Si author_ids est Aucun, les données pour tous les auteurs sont renvoyées."

# 68db610a3fa3408aa3389179af300870
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.author_sort_from_authors:1
msgid ""
"Given a list of authors, return the author_sort string for the authors, "
"preferring the author sort associated with the author over the computed "
"string."
msgstr "Donne une liste d'auteurs, renvoie la chaîne author_sort pour les auteurs, en préférant l'auteur assorti associé à l'auteur au-dessus de la chaîne calculée."

# bacf410bb2fe4d3da6eb1485fb7ee707
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.books_for_field:1
msgid ""
"Return all the books associated with the item identified by ``item_id``, "
"where the item belongs to the field ``name``."
msgstr "Renvoie tous les livres associés avec l'élément identifié par ``item_id``, où l'élément appartient au champ  ``name``."

# b78b1115ce1a49a1b5c0a8f170c6841a
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.books_for_field:4
msgid ""
"Returned value is a set of book ids, or the empty set if the item or the "
"field does not exist."
msgstr "La valeur retournée est un ensemble d'ids de livre, ou l'ensemble vide si l'élément n'existe pas."

# d3c1ee2988384da7b1c635a3fcca1a15
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.copy_cover_to:1
msgid ""
"Copy the cover to the file like object ``dest``. Returns False if no cover "
"exists or dest is the same file as the current cover. dest can also be a "
"path in which case the cover is copied to it iff the path is different from "
"the current path (taking case sensitivity into account)."
msgstr "Copier la couverture dans le fichier comme un objet ``dest``. Renvoie Faux si aucune couverture n'existe ou dest est le même fichier que la couverture actuelle. dest peut aussi être un chemin dans tel cas la couverture y est copiée si le chemin est différent du chemin actuel (prendre en compte la sensibilité à la casse)."

# b3ff3691c9dd4debb13ec0304547cbf0
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.copy_format_to:1
msgid ""
"Copy the format ``fmt`` to the file like object ``dest``. If the specified "
"format does not exist, raises :class:`NoSuchFormat` error. dest can also be "
"a path, in which case the format is copied to it, iff the path is different "
"from the current path (taking case sensitivity into account)."
msgstr "Copier le format ``fmt`` dans le fichier comme un objet ``dest``. Si le format spécifié n'existe pas, indique l'erreur :class:`NoSuchFormat`. dest peut aussi être un chemin dans tel cas la couverture y est copiée si le chemin est différent du chemin actuel (prendre en compte la sensibilité à la casse)."

# 1f4d75cafefc4c13b6de93bfd9a34e8c
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:1
msgid ""
"Return the cover image or None. By default, returns the cover as a "
"bytestring."
msgstr "Renvoie l'image de couverture ou Aucun. Par défaut, renvoie la couverture comme une chaîne de caractères."

# e8ee17a1cd224238951e0666bdc98f09
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:4
msgid ""
"WARNING: Using as_path will copy the cover to a temp file and return the "
"path to the temp file. You should delete the temp file when you are done "
"with it."
msgstr "ATTENTION : l'utilisation de as_path copiera la couverture vers un fichier temporaire et renverra le chemin vers ce fichier temporaire. Vous devez supprimer le fichier temporaire quand vous en avez terminé avec celui-ci."

# 19ea923a19c74a34a118562136f49543
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:8
msgid ""
"If True return the image as an open file object (a SpooledTemporaryFile)"
msgstr "Si Vrai renvoie l'image en tant qu'objet fichier ouvert (une file d'attente de fichiers temporaires)"

# 7967c00476cc414d9405859348d03eb6
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:9
msgid "If True return the image as a QImage object"
msgstr "Si vrai renvoie l'image comme un objet QImage"

# 0b7f0af9378c4a4ea7849b8080bcc11a
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:10
msgid "If True return the image as a path pointing to a temporary file"
msgstr "Si vrai renvoie l'image comme un chemin pointant vers un fichier temporaire"

# 3dde12ebcdf842f285a054183d287b9a
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.delete_custom_book_data:1
msgid ""
"Delete data for name. By default deletes all data, if you only want to "
"delete data for some book ids, pass in a list of book ids."
msgstr "Effacer les données pour le nom. Par défaut efface toutes les données, si vous voulez seulement effacer les données pour certaines ids de livres, passez dans une liste d'ids de livres."

# 8407986af337462d99aff74c428ac6c6
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.embed_metadata:1
msgid ""
"Update metadata in all formats of the specified book_ids to current metadata"
" in the database."
msgstr "Mettre à jour les métadonnées pour tous les fomats du book_ids sélectionné vers les métadonnées actuelle dans la base de  données."

# 812ce292dcdc4cf594ab036a22ad52fe
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.fast_field_for:1
msgid ""
"Same as field_for, except that it avoids the extra lookup to get the field "
"object"
msgstr "Semblable à field_for, sauf qu'il évite la consultation supplémentaire pour obtenir l'objet du champ"

# d05753e217b24847b37689166d03c7eb
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_for:1
msgid ""
"Return the value of the field ``name`` for the book identified by "
"``book_id``. If no such book exists or it has no defined value for the field"
" ``name` or no such field exists, then ``default_value`` is returned."
msgstr "Renvoie la valeur du champ ``name`` pour le livre identifié par ``book_id``. Si un tel livre n'existe pas ou il n'y a pas de valeur spécifiée pour le champ ``name` ou qu'un tel champ n'existe pas, alors ``default_value`` est renvoyée."

# 52105c32eeda432c8f4c11052a9064dd
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_for:6
msgid ""
"``default_value`` is not used for title, title_sort, authors, author_sort "
"and series_index. This is because these always have values in the db. "
"``default_value`` is used for all custom columns."
msgstr "``default_value`` n'est pas utilisée pour title, title_sort, authors, author_sort and series_index. C'est parce que ceux-ci ont toujours des valeurs dans la base de données. ``default_value`` est utilisée pour toutes les colonnes personnalisées."

# 0c55e9e316bd417e8904add1e3f8868f
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_for:10
msgid ""
"The returned value for is_multiple fields are always tuples, even when no "
"values are found (in other words, default_value is ignored). The exception "
"is identifiers for which the returned value is always a dict. The returned "
"tuples are always in link order, that is, the order in which they were "
"created."
msgstr "La valeur retournée pour les champs is_multiple sont toujours des tuples, même quand aucunes valeurs ne sont trouvées (en d'autres mots, default_value est ignorée). L'exception est les identifiants pour lesquels la valeur renvoyée est toujours un dict. Les tuples renvoyés sont toujours dans l'ordre du lien, c'est à dire, l'ordre dans lequel ils ont été créé. "

# 1eebdcbeba0943eb9157bfa40cb35cb2
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_ids_for:1
msgid ""
"Return the ids (as a tuple) for the values that the field ``name`` has on "
"the book identified by ``book_id``. If there are no values, or no such book,"
" or no such field, an empty tuple is returned."
msgstr "Renvoie les ids (en tant que tuples) pour les valeurs que le champ ``name`` à dans le livre identifié par ``book_id``. S'il n'y a pas de valeurs, ou pas de tel livre, ou pas de tel champ, un tuple vide est renvoyé."

# 4f52d358de7b4bf198ff299d8ba47456
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.find_identical_books:1
msgid ""
"Finds books that have a superset of the authors in mi and the same title "
"(title is fuzzy matched)"
msgstr "Trouve les livres qui ont un sur-ensemble d'auteurs dans mi et ont le même titre (titre est à correspondance floue)"

# e2d7fbf46b604a16a3d2ae8838f38740
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:1
msgid ""
"Return the ebook format as a bytestring or `None` if the format doesn't "
"exist, or we don't have permission to write to the ebook file."
msgstr "Renvoie le format de l'e-livre comme une chaîne de caractères ou  `None` si le format n'existe pas, ou que nous n'avons pas la permission d'écrire dans le fichier e-livre."

# 490d0921c461452fb93f10bfb1eeb36b
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:4
msgid ""
"If True the ebook format is returned as a file object. Note that the file "
"object is a SpooledTemporaryFile, so if what you want to do is copy the "
"format to another file, use :meth:`copy_format_to` instead for performance."
msgstr "Si Vrai le format de l'e-livre est renvoyé comme un objet fichier. Notez que l'objet fichier est un fichier temporaire de file d'attente, aussi si ce que vous voulez faire est de copier le format sur un autre fichier, utilisez :meth:`copy_format_to` à la place pour la performance."

# b1f1a9fbbdf64f7fb0717a5f589a81d6
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:8
msgid ""
"Copies the format file to a temp file and returns the path to the temp file"
msgstr "Copie le format de fichier vers un fichier temporaire et renvoie le chemin vers le fichier temporaire"

# cd6b04826e0749389835153f7b56f367
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:10
msgid ""
"If True and returning a path the filename is the same as that used in the "
"library. Note that using this means that repeated calls yield the same temp "
"file (which is re-created each time)"
msgstr "Si Vrai et renvoie un chemin le nom de fichier est le même que celui utilisé dans la bibliothèque. Notez qu’utiliser ceci signifie donner des appels répétés du même fichier temporaire (qui est recréé chaque fois)"

# 5ce0eb6e15cd4c95bfe7cfcc127f0716
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_abspath:1
msgid ""
"Return absolute path to the ebook file of format `format`. You should almost"
" never use this, as it breaks the threadsafe promise of this API. Instead "
"use, :meth:`copy_format_to`."
msgstr ""

# 6b38eb762ed6406e817ea8ecc3fbce26
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_abspath:5
msgid ""
"Currently used only in calibredb list, the viewer, edit book, compare_format"
" to original format and the catalogs (via get_data_as_dict())."
msgstr ""

# 5a76cf949eba4920894ae8557fee5914
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_abspath:9
msgid ""
"Apart from the viewer and edit book, I don't believe any of the others do "
"any file write I/O with the results of this call."
msgstr ""

# 869cd70c94824da1b7070f1ba0d94ad7
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_hash:1
msgid ""
"Return the hash of the specified format for the specified book. The kind of "
"hash is backend dependent, but is usually SHA-256."
msgstr ""

# 3efe46e8848c469099dc35e67d03a143
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_metadata:1
msgid ""
"Return the path, size and mtime for the specified format for the specified "
"book. You should not use path unless you absolutely have to, since accessing"
" it directly breaks the threadsafe guarantees of this API. Instead use the "
":meth:`copy_format_to` method."
msgstr ""

# d95d2052275d4f5bb5b9de34e939ecd2
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_metadata:6
msgid ""
"If ``True`` cached values are used, otherwise a slow filesystem access is "
"done. The cache values could be out of date if access was performed to the "
"filesystem outside of this API."
msgstr ""

# 4ab68c7d916044b7bcd9592bb9e23927
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_metadata:10
msgid ""
"If ``True`` The max_size field of the database is updates for this book."
msgstr ""

# cd80b611faa3488f9e4da82c96ee43a9
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.formats:1
msgid ""
"Return tuple of all formats for the specified book. If verify_formats is "
"True, verifies that the files exist on disk."
msgstr ""

# 17f57f13d00d4c668b1d35804b371088
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_categories:1
msgid "Used internally to implement the Tag Browser"
msgstr ""

# f6930a323a474ddebfe8bd1616087c32
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_custom_book_data:1
msgid ""
"Get data for name. By default returns data for all book_ids, pass in a list "
"of book ids if you only want some data. Returns a map of book_id to values. "
"If a particular value could not be decoded, uses default for it."
msgstr ""

# bd3a7a39beb446f6b99034818fb802a3
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_id_map:1
msgid ""
"Return a mapping of id numbers to values for the specified field. The field "
"must be a many-one or many-many field, otherwise a ValueError is raised."
msgstr ""

# b5ae4497d76647839e5b2edbe5090d7a
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_ids_for_custom_book_data:1
msgid "Return the set of book ids for which name has data."
msgstr ""

# 32cd88f4c35c45be868419fa1f16b9fe
# 72c19ded76194402941d81976a43cdca
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_item_id:1
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_item_ids:1
msgid "Return the item id for item_name (case-insensitive)"
msgstr ""

# 0e416d19e55f4476b05f0cff0a52c272
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_item_name:1
msgid ""
"Return the item name for the item specified by item_id in the specified "
"field. See also :meth:`get_id_map`."
msgstr ""

# 4327c2353908470981644210fd3d88a1
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_metadata:1
msgid ""
"Return metadata for the book identified by book_id as a :class:`Metadata` "
"object. Note that the list of formats is not verified. If get_cover is True,"
" the cover is returned, either a path to temp file as mi.cover or if "
"cover_as_data is True then as mi.cover_data."
msgstr ""

# 2feb6ddcbfb74c96ac0c506047d436d3
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_next_series_num_for:1
msgid ""
"Return the next series index for the specified series, taking into account "
"the various preferences that control next series number generation."
msgstr ""

# 7437356877d84b3ba3863e155c70d119
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_next_series_num_for:4
msgid "The series-like field (defaults to the builtin series column)"
msgstr ""

# 74f526e9243441588ebe0f5ef7355f1f
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_next_series_num_for:5
msgid ""
"If True, returns a mapping of book_id to current series_index value instead."
msgstr ""

# a4307ab147ee43af97a2b28294801580
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_proxy_metadata:1
msgid ""
"Like :meth:`get_metadata` except that it returns a ProxyMetadata object that"
" only reads values from the database on demand. This is much faster than "
"get_metadata when only a small number of fields need to be accessed from the"
" reutrned metadata object."
msgstr ""

# 3935dfa2b61c437bb7bf3a0a78304cf2
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_usage_count_by_id:1
msgid ""
"Return a mapping of id to usage count for all values of the specified field,"
" which must be a many-one or many-many field."
msgstr ""

# 616fe5785b9a43bda87f4345b463ddf8
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.has_book:1
msgid ""
"Return True iff the database contains an entry with the same title as the "
"passed in Metadata object. The comparison is case-insensitive."
msgstr ""

# ed268a62a85147ca93877eab4d52f30e
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.has_format:1
msgid "Return True iff the format exists on disk"
msgstr ""

# 54f825b2d0c44519b7415f41af66a830
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.has_id:1
msgid "Return True iff the specified book_id exists in the db"
msgstr ""

# d3f3b90ceca14c848d67c0034d810872
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.init:1
msgid "Initialize this cache with data from the backend."
msgstr ""

# b60dddb815274a0c89ee49a3bfc5fa44
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.multisort:1
msgid ""
"Return a list of sorted book ids. If ids_to_sort is None, all book ids are "
"returned."
msgstr ""

# 697547cca4d14cfaae4ebb6a416bc4e9
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.multisort:4
msgid ""
"fields must be a list of 2-tuples of the form (field_name, ascending=True or"
" False). The most significant field is the first 2-tuple."
msgstr ""

# ad344b786377468b852bf93c25119fe7
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.pref:1
msgid ""
"Return the value for the specified preference or the value specified as "
"``default`` if the preference is not set."
msgstr ""

# a6e7020edb2b4595981c20a530e04562
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.read_backup:1
msgid ""
"Return the OPF metadata backup for the book as a bytestring or None if no "
"such backup exists."
msgstr ""

# be15c16126c94d838dfbf900fa20d807
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_books:1
msgid ""
"Remove the books specified by the book_ids from the database and delete "
"their format files. If ``permanent`` is False, then the format files are not"
" deleted."
msgstr ""

# 25f2b81475af4f10a9e893e029d7f4ea
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_formats:1
msgid "Remove the specified formats from the specified books."
msgstr ""

# 627ce781c012482e9dc672d0d0f452b2
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_formats:3
msgid "A mapping of book_id to a list of formats to be removed from the book."
msgstr ""

# 3e5fe20d654547588a381b944e2ab2a1
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_formats:4
msgid ""
"If True, only remove the record for the format from the db, do not delete "
"the actual format file from the filesystem."
msgstr ""

# 3740ea7ef6a24af0a10325cc9c3dde6b
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_items:1
msgid ""
"Delete all items in the specified field with the specified ids. Returns the "
"set of affected book ids."
msgstr ""

# 7d157b6ef4c34018ac4e935f863523c8
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.rename_items:1
msgid ""
"Rename items from a many-one or many-many field such as tags or series."
msgstr ""

# 4d706afc1f5345759c6916d8fafb264d
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.rename_items:3
msgid ""
"When renaming in a series-like field also change the series_index values."
msgstr ""

# 3b1a98b8d8b34bb1b217ccef14abc0a0
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.restore_book:1
msgid ""
"Restore the book entry in the database for a book that already exists on the"
" filesystem"
msgstr ""

# cffd9402649846ccbd99542260024baf
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.restore_original_format:1
msgid ""
"Restore the specified format from the previously saved ORIGINAL_FORMAT, if "
"any. Return True on success. The ORIGINAL_FORMAT is deleted after a "
"successful restore."
msgstr ""

# 83a617f417c94993bea7d507f420f9fe
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.safe_read_lock:1
msgid ""
"A safe read lock is a lock that does nothing if the thread already has a "
"write lock, otherwise it acquires a read lock. This is necessary to prevent "
"DowngradeLockErrors, which can happen when updating the search cache in the "
"presence of composite columns. Updating the search cache holds an exclusive "
"lock, but searching a composite column involves reading field values via "
"ProxyMetadata which tries to get a shared lock. There may be other scenarios"
" that trigger this as well."
msgstr ""

# 6eef2a9999a74abfa9f8a66d74b983f2
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.safe_read_lock:9
msgid ""
"This property returns a new lock object on every access. This lock object is"
" not recursive (for performance) and must only be used in a with statement "
"as ``with cache.safe_read_lock:`` otherwise bad things will happen."
msgstr ""

# 60887eadef6947f586d240b87819198d
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.save_original_format:1
msgid ""
"Save a copy of the specified format as ORIGINAL_FORMAT, overwriting any "
"existing ORIGINAL_FORMAT."
msgstr ""

# c8be07dc0d814118a0d266de25a5abb0
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:1
msgid ""
"Search the database for the specified query, returning a set of matched book"
" ids."
msgstr ""

# ec9128e60a014a52b53257c3840b7eab
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:3
msgid ""
"A restriction that is ANDed to the specified query. Note that restrictions "
"are cached, therefore the search for a AND b will be slower than a with "
"restriction b."
msgstr ""

# 7b6be32b569542d8a08c0c13b2e0a256
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:6
msgid "Used internally (virtual fields such as on_device to search over)."
msgstr ""

# 876ce3b1000b4fd5a11e75f2ebb3ea82
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:8
msgid ""
"If not None, a set of book ids for which books will be searched instead of "
"searching all books."
msgstr ""

# 53ad54ccf9944e3f80a4024eb8e2d20e
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_conversion_options:1
msgid "options must be a map of the form {book_id:conversion_options}"
msgstr ""

# df46bedfe2114784a6252230be587765
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_cover:1
msgid ""
"Set the cover for this book.  data can be either a QImage, QPixmap, file "
"object or bytestring. It can also be None, in which case any existing cover "
"is removed."
msgstr ""

# 0f50d024cfad40d8bb37a9ed077b4ffb
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:1
msgid ""
"Set the values of the field specified by ``name``. Returns the set of all "
"book ids that were affected by the change."
msgstr ""

# 2b80a71ce1c54ace9aa4c502fe67577f
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:3
msgid "Mapping of book_ids to values that should be applied."
msgstr ""

# e79cddc2f991456a937ab9ee7a105e74
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:4
msgid ""
"If True, the case of many-one or many-many fields will be changed. For "
"example, if a  book has the tag ``tag1`` and you set the tag for another "
"book to ``Tag1`` then the both books will have the tag ``Tag1`` if "
"allow_case_change is True, otherwise they will both have the tag ``tag1``."
msgstr ""

# a9e5bd60c2d44786a0446d437004a00e
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:8
msgid "Used internally, you should never change it."
msgstr ""

# 5d4a1a999576467987be8c04988a80c9
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_metadata:1
msgid "Set metadata for the book `id` from the `Metadata` object `mi`"
msgstr ""

# 399644bbb75e48f3a0a659439dcfe03b
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_metadata:3
msgid ""
"Setting force_changes=True will force set_metadata to update fields even if "
"mi contains empty values. In this case, 'None' is distinguished from "
"'empty'. If mi.XXX is None, the XXX is not replaced, otherwise it is. The "
"tags, identifiers, and cover attributes are special cases. Tags and "
"identifiers cannot be set to None so then will always be replaced if "
"force_changes is true. You must ensure that mi contains the values you want "
"the book to have. Covers are always changed if a new cover is provided, but "
"are never deleted. Also note that force_changes has no effect on setting "
"title or authors."
msgstr ""

# 4aa5644b6b2f4a1eaf5f1b95b44d08ea
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_pref:1
msgid ""
"Set the specified preference to the specified value. See also :meth:`pref`."
msgstr ""

# 3d006b79cccb4b1fbb4840685445cee5
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:1
msgid ""
"Return the ids of all books having the tag ``tag`` that are older than than "
"the specified time. tag comparison is case insensitive."
msgstr ""

# bb2eda55275c4f60ab66926f7180c2b2
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:4
msgid ""
"A timedelta object or None. If None, then all ids with the tag are returned."
msgstr ""

# df8a7c7cc2ca43cf9d6f35195134d113
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:7
msgid ""
"If not None the list of matches will be restricted to books that have this "
"tag"
msgstr ""

# ffecb0b9fc9b464fb7a267f58e245de0
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:10
msgid ""
"A list of authors. If not None the list of matches will be restricted to "
"books that have these authors (case insensitive)."
msgstr ""
