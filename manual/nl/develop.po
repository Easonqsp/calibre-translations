# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Rodolfo_Jadon, 2015
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-10 10:07+0530\n"
"PO-Revision-Date: 2015-03-02 20:21+0000\n"
"Last-Translator: Rodolfo_Jadon\n"
"Language-Team: Dutch (http://www.transifex.com/projects/p/calibre/language/nl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: nl\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 20e52e4b1cb94e4ea2258c1e75b41f46
#: ../../home/kovid/work/calibre/manual/develop.rst:4
msgid "Setting up a calibre development environment"
msgstr "Opzetten van calibre in een development omgeving"

# fa41fc0224ce49df8b513061d82623e2
#: ../../home/kovid/work/calibre/manual/develop.rst:6
msgid ""
"calibre is completely open source, licensed under the `GNU GPL v3 "
"<http://www.gnu.org/copyleft/gpl.html>`_. This means that you are free to "
"download and modify the program to your heart's content. In this section, "
"you will learn how to get a calibre development environment set up on the "
"operating system of your choice. calibre is written primarily in `Python "
"<https://www.python.org>`_ with some C/C++ code for speed and system "
"interfacing. Note that calibre is not compatible with Python 3 and requires "
"at least Python 2.7."
msgstr ""

# 1c3f38c6121a42148029198c71f22bff
#: ../../home/kovid/work/calibre/manual/develop.rst:0
msgid "Contents"
msgstr "Inhoud"

# b14647a52c5a4ce98a85c777d2835bae
#: ../../home/kovid/work/calibre/manual/develop.rst:17
msgid "Design philosophy"
msgstr ""

# 6f51b63f6579441e95401ad0ca585673
#: ../../home/kovid/work/calibre/manual/develop.rst:19
msgid ""
"calibre has its roots in the Unix world, which means that its design is "
"highly modular. The modules interact with each other via well defined "
"interfaces. This makes adding new features and fixing bugs in calibre very "
"easy, resulting in a frenetic pace of development. Because of its roots, "
"calibre has a comprehensive command line interface for all its functions, "
"documented in :doc:`generated/en/cli-index`."
msgstr ""

# 13291502bb484097b0b620ecedcc8041
#: ../../home/kovid/work/calibre/manual/develop.rst:24
msgid ""
"The modular design of calibre is expressed via ``Plugins``. There is a "
":ref:`tutorial <customize>` on writing calibre plugins. For example, adding "
"support for a new device to calibre typically involves writing less than a "
"100 lines of code in the form of a device driver plugin. You can browse the "
"`built-in drivers "
"<https://github.com/kovidgoyal/calibre/tree/master/src/calibre/devices>`_. "
"Similarly, adding support for new conversion formats involves writing "
"input/output format plugins. Another example of the modular design is the "
":ref:`recipe system <news>` for fetching news. For more examples of plugins "
"designed to add features to calibre, see the `plugin index "
"<http://www.mobileread.com/forums/showthread.php?p=1362767#post1362767>`_."
msgstr ""

# 767490a1d15a4565babfdddfe03d904c
#: ../../home/kovid/work/calibre/manual/develop.rst:34
msgid "Code layout"
msgstr ""

# a74a4de293d54dd49ec87ca91065e0b6
#: ../../home/kovid/work/calibre/manual/develop.rst:36
msgid ""
"All the calibre python code is in the ``calibre`` package. This package "
"contains the following main sub-packages"
msgstr ""

# 02973e6fc4264dbeb0710b4d7a5ddf32
#: ../../home/kovid/work/calibre/manual/develop.rst:38
msgid ""
"devices - All the device drivers. Just look through some of the built-in "
"drivers to get an idea for how they work."
msgstr ""

# 1925dd130eb04185afb30159de453867
#: ../../home/kovid/work/calibre/manual/develop.rst:40
msgid ""
"For details, see: ``devices.interface`` which defines the interface "
"supported by device drivers and ``devices.usbms`` which defines a generic "
"driver that connects to a USBMS device. All USBMS based drivers in calibre "
"inherit from it."
msgstr ""

# 26bc25830b43459aa83366682a3f2fb8
#: ../../home/kovid/work/calibre/manual/develop.rst:43
msgid ""
"ebooks  - All the ebook conversion/metadata code. A good starting point is "
"``calibre.ebooks.conversion.cli`` which is the module powering the :command"
":`ebook-convert` command. The conversion process is controlled via "
"``conversion.plumber``. The format independent code is all in ``ebooks.oeb``"
" and the format dependent code is in ``ebooks.format_name``."
msgstr ""

# f000bf065b9f4d45b86f16a74bdea7cc
#: ../../home/kovid/work/calibre/manual/develop.rst:47
msgid ""
"Metadata reading, writing, and downloading is all in ``ebooks.metadata``"
msgstr ""

# a959a50264224ec9a604e939302b45bb
#: ../../home/kovid/work/calibre/manual/develop.rst:48
msgid ""
"Conversion happens in a pipeline, for the structure of the pipeline, see "
":ref:`conversion-introduction`. The pipeline consists of an input plugin, "
"various transforms and an output plugin. The code that constructs and drives"
" the pipeline is in :file:`plumber.py`. The pipeline works on a "
"representation of an ebook that is like an unzipped epub, with manifest, "
"spine, toc, guide, html content, etc. The class that manages this "
"representation is OEBBook in ``ebooks.oeb.base``. The various "
"transformations that are applied to the book during conversions live in "
":file:`oeb/transforms/*.py`. And the input and output plugins live in "
":file:`conversion/plugins/*.py`."
msgstr ""

# 982fd8580e4c4cd1ae35ce719b684a80
#: ../../home/kovid/work/calibre/manual/develop.rst:58
msgid ""
"Ebook editing happens using a different container object. It is documented "
"in :ref:`polish_api`."
msgstr ""

# 402e9ef54b894388b384e5410278eb21
#: ../../home/kovid/work/calibre/manual/develop.rst:61
msgid ""
"db - The database back-end. See :ref:`db_api` for the interface to the "
"calibre library."
msgstr ""

# f60c562559c94c9999dc99d761b3c1ac
#: ../../home/kovid/work/calibre/manual/develop.rst:63
msgid "content server: ``library.server`` is the calibre Content Server."
msgstr ""

# 93a2d90a86ed4603b68074eb9d664310
#: ../../home/kovid/work/calibre/manual/develop.rst:65
msgid ""
"gui2 - The Graphical User Interface. GUI initialization happens in "
"``gui2.main`` and ``gui2.ui``. The ebook-viewer is in ``gui2.viewer``. The "
"ebook editor is in ``gui2.tweak_book``."
msgstr ""

# 5086c611bfbe4d918cd28c85a613051b
#: ../../home/kovid/work/calibre/manual/develop.rst:67
msgid ""
"If you want to locate the entry points for all the various calibre "
"executables, look at the ``entry_points`` structure in `linux.py "
"<https://github.com/kovidgoyal/calibre/blob/master/src/calibre/linux.py>`_."
msgstr ""

# 187a81891a3d4412b40385ecddbeb05e
#: ../../home/kovid/work/calibre/manual/develop.rst:71
msgid ""
"If you need help understanding the code, post in the `development forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=240>`_ and you will "
"most likely get help from one of calibre's many developers."
msgstr ""

# 1c9069302fa44bce88dacf622bf9f941
#: ../../home/kovid/work/calibre/manual/develop.rst:75
msgid "Getting the code"
msgstr ""

# a032f1d4b72f4388adde16a942dc89e1
#: ../../home/kovid/work/calibre/manual/develop.rst:77
msgid ""
"You can get the calibre source code in two ways, using a version control "
"system or directly downloading a `tarball <http://code.calibre-"
"ebook.com/dist/src>`_."
msgstr ""

# b265094b4ce445fb8e31f3e84e371044
#: ../../home/kovid/work/calibre/manual/develop.rst:80
msgid ""
"calibre uses `Git <http://www.git-scm.com/>`_, a distributed version control"
" system. Git is available on all the platforms calibre supports.  After "
"installing Git, you can get the calibre source code with the command::"
msgstr ""

# cdb346524e894d4ab1f032c79a681599
#: ../../home/kovid/work/calibre/manual/develop.rst:86
msgid ""
"On Windows you will need the complete path name, that will be something like"
" :file:`C:\\\\Program Files\\\\Git\\\\git.exe`."
msgstr ""

# c53b4db5fb3049bf994e1ab465119e75
#: ../../home/kovid/work/calibre/manual/develop.rst:88
msgid ""
"calibre is a very large project with a very long source control history, so "
"the above can take a while (10 mins to an hour depending on your internet "
"speed)."
msgstr "Calibre is een zeer groot project met een zeer lange versiebeheergeschiedenis, dus het bovenstaande kan een tijd duren (10 minuten tot een uur, afhankelijk van je internetsnelheid)."

# 75a0a4079607422b9813da2ba3416767
#: ../../home/kovid/work/calibre/manual/develop.rst:91
msgid ""
"If you want to get the code faster, the source code for the latest release "
"is always available as an `archive <http://code.calibre-"
"ebook.com/dist/src>`_."
msgstr ""

# 0fc39bc5ae594bc8bdf3cfac53a0596e
#: ../../home/kovid/work/calibre/manual/develop.rst:94
msgid "To update a branch to the latest code, use the command::"
msgstr ""

# f13805b6657f40d88624973a5f852613
#: ../../home/kovid/work/calibre/manual/develop.rst:99
msgid "Submitting your changes to be included"
msgstr ""

# ff9c8361d29b4fafa8d24cea3e2aee58
#: ../../home/kovid/work/calibre/manual/develop.rst:101
msgid ""
"If you only plan to make a few small changes, you can make your changes and "
"create a \"merge directive\" which you can then attach to a ticket in the "
"calibre `bug tracker <https://bugs.launchpad.net/calibre>`_. To do this, "
"make your changes, then run::"
msgstr ""

# 827f48b652634b67b56008a90518ec5e
#: ../../home/kovid/work/calibre/manual/develop.rst:109
msgid ""
"This will create a :file:`my-changes` file in the current directory, simply "
"attach that to a ticket on the calibre `bug tracker "
"<https://bugs.launchpad.net/calibre>`_. Note that this will include *all* "
"the commits you have made. If you only want to send some commits, you have "
"to change ``origin/master`` above. To send only the last commit, use::"
msgstr ""

# 2e7722e0cf7d47559c4a20a9bb40ad96
#: ../../home/kovid/work/calibre/manual/develop.rst:117
msgid ""
"To send the last *n* commits, replace *1* with *n*, for example, for the "
"last 3 commits::"
msgstr ""

# a1900411667a4ab98a9a103cfdb33a45
#: ../../home/kovid/work/calibre/manual/develop.rst:122
msgid "Be careful to not include merges when using ``HEAD~n``."
msgstr ""

# 3787e6a228cd4625aade89309b79b83b
#: ../../home/kovid/work/calibre/manual/develop.rst:124
msgid ""
"If you plan to do a lot of development on calibre, then the best method is "
"to create a `GitHub <https://github.com>`_ account. Below is a basic guide "
"to setting up your own fork of calibre in a way that will allow you to "
"submit pull requests for inclusion into the main calibre repository:"
msgstr ""

# 066ee71287f74e67b59fad051969b21e
#: ../../home/kovid/work/calibre/manual/develop.rst:129
msgid ""
"Setup git on your machine as described in this article: `Setup Git "
"<https://help.github.com/articles/set-up-git>`_"
msgstr ""

# 147f164a69a244e7a5e83ebd91ec1937
#: ../../home/kovid/work/calibre/manual/develop.rst:130
msgid ""
"Setup ssh keys for authentication to GitHub, as described here: `Generating "
"SSH keys <https://help.github.com/articles/generating-ssh-keys>`_"
msgstr ""

# 35a5a739b5f946159197dca29c36ec71
#: ../../home/kovid/work/calibre/manual/develop.rst:131
msgid ""
"Go to https://github.com/kovidgoyal/calibre and click the :guilabel:`Fork` "
"button."
msgstr ""

# 4dcb091a8b4e44b7852dcc726f2d6a9d
#: ../../home/kovid/work/calibre/manual/develop.rst:132
msgid "In a Terminal do::"
msgstr ""

# 5177b03bb145464a9fe826ab6c415033
#: ../../home/kovid/work/calibre/manual/develop.rst:137
msgid ""
"Replace <username> above with your github username. That will get your fork "
"checked out locally."
msgstr ""

# 4489251a05354306a22d64d574f573a2
#: ../../home/kovid/work/calibre/manual/develop.rst:138
msgid ""
"You can make changes and commit them whenever you like. When you are ready "
"to have your work merged, do a::"
msgstr ""

# c02b30c6f5b24c54b77cc316e59af394
#: ../../home/kovid/work/calibre/manual/develop.rst:142
msgid ""
"and go to ``https://github.com/<username>/calibre`` and click the "
":guilabel:`Pull Request` button to generate a pull request that can be "
"merged."
msgstr ""

# 13e6e3f6a83c4015a06fca601a11da21
#: ../../home/kovid/work/calibre/manual/develop.rst:143
msgid ""
"You can update your local copy with code from the main repo at any time by "
"doing::"
msgstr ""

# 42c3e9a975e14c5a92613c8e2d5cbee8
#: ../../home/kovid/work/calibre/manual/develop.rst:148
msgid ""
"You should also keep an eye on the calibre `development forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=240>`_. Before making "
"major changes, you should discuss them in the forum or contact Kovid "
"directly (his email address is all over the source code)."
msgstr ""

# 22028ace6bfb442dae1e686e098f0bd2
#: ../../home/kovid/work/calibre/manual/develop.rst:154
msgid "Windows development environment"
msgstr ""

# 1e5b35abcdc54ebb8d20de62b74df90f
# 44390d66d89a4734a441e5f5c0b8cc0f
# d78acc7f7995477db435db95e9bce5ae
#: ../../home/kovid/work/calibre/manual/develop.rst:156
#: ../../home/kovid/work/calibre/manual/develop.rst:190
#: ../../home/kovid/work/calibre/manual/develop.rst:222
msgid ""
"You must also get the calibre source code separately as described above."
msgstr ""

# 11bf0bd65dd64a1d85809f0d9c49895f
#: ../../home/kovid/work/calibre/manual/develop.rst:158
msgid ""
"Install calibre normally, using the Windows installer. Then open a Command "
"Prompt and change to the previously checked out calibre code directory. For "
"example::"
msgstr ""

# 1d107794a24a4350a43c850487cb1fcb
# fb2fecd5d6624d479bc22b305147e2d5
#: ../../home/kovid/work/calibre/manual/develop.rst:163
#: ../../home/kovid/work/calibre/manual/develop.rst:234
msgid ""
"calibre is the directory that contains the src and resources sub-"
"directories."
msgstr ""

# b1825f5e0f7243d6af51c394fe1c52f9
#: ../../home/kovid/work/calibre/manual/develop.rst:165
msgid ""
"The next step is to set the environment variable ``CALIBRE_DEVELOP_FROM`` to"
" the absolute path of the src directory. So, following the example above, it"
" would be ``C:\\Users\\kovid\\work\\calibre\\src``. `Here is a short guide "
"<https://docs.python.org/2/using/windows.html#excursus-setting-environment-"
"variables>`_ to setting environment variables on Windows."
msgstr ""

# 7701daadb093444ba09efab1f20094c5
#: ../../home/kovid/work/calibre/manual/develop.rst:170
msgid ""
"Once you have set the environment variable, open a new command prompt and "
"check that it was correctly set by using the command::"
msgstr ""

# efb1a4e2b2a44182a82f6b1aed2ce4b7
# 102e4c16087b4a8dabcd93e24df80e80
#: ../../home/kovid/work/calibre/manual/develop.rst:175
#: ../../home/kovid/work/calibre/manual/develop.rst:245
msgid ""
"Setting this environment variable means that calibre will now load all its "
"Python code from the specified location."
msgstr ""

# 8477dab2728b43a18804d889087da6df
#: ../../home/kovid/work/calibre/manual/develop.rst:177
msgid ""
"That's it! You are now ready to start hacking on the calibre code. For "
"example, open the file :file:`src\\\\calibre\\\\__init__.py` in your "
"favorite editor and add the line::"
msgstr ""

# a52ac811b0d247fb967c3436d1e67621
# 4105241ba78640de875d42683cc6f774
#: ../../home/kovid/work/calibre/manual/develop.rst:182
#: ../../home/kovid/work/calibre/manual/develop.rst:252
msgid ""
"near the top of the file. Now run the command :command:`calibredb`. The very"
" first line of output should be ``Hello, world!``."
msgstr ""

# c89776893f2849808925221cb488076e
#: ../../home/kovid/work/calibre/manual/develop.rst:184
msgid ""
"You can also setup a calibre development environment inside the free "
"Microsoft Visual Studio, if you like, following the instructions `here "
"<http://www.mobileread.com/forums/showthread.php?t=251201>`_."
msgstr ""

# 7fcd918759054062aac914c54da0b2d7
#: ../../home/kovid/work/calibre/manual/develop.rst:188
msgid "OS X development environment"
msgstr ""

# 66c87cb09964478ca52347510eea107e
#: ../../home/kovid/work/calibre/manual/develop.rst:192
msgid ""
"Install calibre normally using the provided .dmg. Then open a Terminal and "
"change to the previously checked out calibre code directory, for example::"
msgstr ""

# 41fc616d2655499d8cfc658ee78ead58
#: ../../home/kovid/work/calibre/manual/develop.rst:197
msgid ""
"calibre is the directory that contains the src and resources sub-"
"directories. Ensure you have installed the calibre commandline tools via "
":guilabel:`Preferences->Advanced->Miscellaneous` in the calibre GUI."
msgstr ""

# 0e009ecb648e4337b3638e55158f4bcb
#: ../../home/kovid/work/calibre/manual/develop.rst:199
msgid ""
"The next step is to create a bash script that will set the environment "
"variable ``CALIBRE_DEVELOP_FROM`` to the absolute path of the src directory "
"when running calibre in debug mode."
msgstr ""

# 84dc5bf38d7348a3b5ffb764960056c3
#: ../../home/kovid/work/calibre/manual/develop.rst:201
msgid "Create a plain text file::"
msgstr ""

# bb53ef70b9e74a7c96c4283ea51f194b
#: ../../home/kovid/work/calibre/manual/develop.rst:207
msgid ""
"Save this file as ``/usr/bin/calibre-develop``, then set its permissions so "
"that it can be executed::"
msgstr ""

# 700fd0461f3f41b38713702ef94f103b
#: ../../home/kovid/work/calibre/manual/develop.rst:211
msgid "Once you have done this, run::"
msgstr ""

# 7f9e4126b2734cee902c3f6b65bea9e0
#: ../../home/kovid/work/calibre/manual/develop.rst:215
msgid ""
"You should see some diagnostic information in the Terminal window as calibre"
" starts up, and you should see an asterisk after the version number in the "
"GUI window, indicating that you are running from source."
msgstr ""

# fccc7cb51776452e81e61ddf3632216b
#: ../../home/kovid/work/calibre/manual/develop.rst:220
msgid "Linux development environment"
msgstr ""

# 594ef2914623437db9b7237cb8894436
#: ../../home/kovid/work/calibre/manual/develop.rst:224
msgid ""
"calibre is primarily developed on Linux. You have two choices in setting up "
"the development environment. You can install the calibre binary as normal "
"and use that as a runtime environment to do your development. This approach "
"is similar to that used in Windows and OS X. Alternatively, you can install "
"calibre from source. Instructions for setting up a development environment "
"from source are in the INSTALL file in the source tree. Here we will address"
" using the binary at runtime, which is the recommended method."
msgstr ""

# 01ad01fb3dec49658599b14ccb4a7c60
#: ../../home/kovid/work/calibre/manual/develop.rst:230
msgid ""
"Install calibre using the binary installer. Then open a terminal and change "
"to the previously checked out calibre code directory, for example::"
msgstr ""

# 034abdf299d94041900fbaf74976af81
#: ../../home/kovid/work/calibre/manual/develop.rst:236
msgid ""
"The next step is to set the environment variable ``CALIBRE_DEVELOP_FROM`` to"
" the absolute path of the src directory. So, following the example above, it"
" would be ``/home/kovid/work/calibre/src``. How to set environment variables"
" depends on your Linux distribution and what shell you are using."
msgstr ""

# 8a5b7819e1a041b8827e7dc80e430dd7
#: ../../home/kovid/work/calibre/manual/develop.rst:240
msgid ""
"Once you have set the environment variable, open a new terminal and check "
"that it was correctly set by using the command::"
msgstr ""

# 70aee614e57a4d83be3724c1f83773b5
#: ../../home/kovid/work/calibre/manual/develop.rst:247
msgid ""
"That's it! You are now ready to start hacking on the calibre code. For "
"example, open the file :file:`src/calibre/__init__.py` in your favorite "
"editor and add the line::"
msgstr ""

# 786cf474df7649e89654c704aba3aaeb
#: ../../home/kovid/work/calibre/manual/develop.rst:255
msgid ""
"Having separate \"normal\" and \"development\" calibre installs on the same "
"computer"
msgstr ""

# f5fe54d543524e3db3ca06aa505e1d0a
#: ../../home/kovid/work/calibre/manual/develop.rst:257
msgid ""
"The calibre source tree is very stable and rarely breaks, but if you feel "
"the need to run from source on a separate test library and run the released "
"calibre version with your everyday library, you can achieve this easily "
"using .bat files or shell scripts to launch calibre. The example below shows"
" how to do this on Windows using .bat files (the instructions for other "
"platforms are the same, just use a shell script instead of a .bat file)"
msgstr ""

# 07f60da02d1e41008bd1da09ac64bb03
#: ../../home/kovid/work/calibre/manual/develop.rst:262
msgid "To launch the release version of calibre with your everyday library:"
msgstr ""

# 53886b22445c4bbe9632269574ae9cca
#: ../../home/kovid/work/calibre/manual/develop.rst:264
msgid "calibre-normal.bat::"
msgstr ""

# 3826ef1aac1f4ffbad29303866b50f10
#: ../../home/kovid/work/calibre/manual/develop.rst:268
msgid "calibre-dev.bat::"
msgstr ""

# fc13918e11fe431fbd26e522b0425ac0
#: ../../home/kovid/work/calibre/manual/develop.rst:275
msgid "Debugging tips"
msgstr ""

# dcbc38fee64d40fd9d286d2e7592559a
#: ../../home/kovid/work/calibre/manual/develop.rst:277
msgid ""
"Python is a dynamically typed language with excellent facilities for "
"introspection. Kovid wrote the core calibre code without once using a "
"debugger. There are many strategies to debug calibre code:"
msgstr ""

# 82ad7998f559487c8830dd1a3adb4811
#: ../../home/kovid/work/calibre/manual/develop.rst:282
msgid "Using print statements"
msgstr ""

# 4e276899db0b455c937da9188179c46a
#: ../../home/kovid/work/calibre/manual/develop.rst:284
msgid ""
"This is Kovid's favorite way to debug. Simply insert print statements at "
"points of interest and run your program in the terminal. For example, you "
"can start the GUI from the terminal as::"
msgstr ""

# 5eb752d64d6343bfb33b62563842d1bf
#: ../../home/kovid/work/calibre/manual/develop.rst:289
msgid "Similarly, you can start the ebook-viewer as::"
msgstr ""

# fb9e6e2441f341ee919fb00d19993534
#: ../../home/kovid/work/calibre/manual/develop.rst:293
msgid "The ebook-editor can be started as::"
msgstr ""

# b8bfd727b7ba4754aabe52d5e1ee6b84
#: ../../home/kovid/work/calibre/manual/develop.rst:298
msgid "Using an interactive python interpreter"
msgstr ""

# e443654345dc48879ecd1ae8068ea8a1
#: ../../home/kovid/work/calibre/manual/develop.rst:300
msgid ""
"You can insert the following two lines of code to start an interactive "
"python session at that point::"
msgstr ""

# 599e69df6933469483ee174d2f75f68a
#: ../../home/kovid/work/calibre/manual/develop.rst:305
msgid ""
"When running from the command line, this will start an interactive Python "
"interpreter with access to all locally defined variables (variables in the "
"local scope). The interactive prompt even has TAB completion for object "
"properties and you can use the various Python facilities for introspection, "
"such as :func:`dir`, :func:`type`, :func:`repr`, etc."
msgstr ""

# f9f7d7a81c054e7faf9de6b42538f45d
#: ../../home/kovid/work/calibre/manual/develop.rst:311
msgid "Using the python debugger as a remote debugger"
msgstr ""

# ae72a5562de641d992b139d4c9beeae6
#: ../../home/kovid/work/calibre/manual/develop.rst:313
msgid ""
"You can use the builtin python debugger (pdb) as a remote debugger from the "
"command line. First, start the remote debugger at the point in the calibre "
"code you are interested in, like this::"
msgstr ""

# 1f5d7d08634145f5bef44e48f1de9cda
#: ../../home/kovid/work/calibre/manual/develop.rst:320
msgid ""
"Then run calibre, either as normal, or using one of the calibre-debug "
"commands described in the previous section. Once the above point in the code"
" is reached, calibre will freeze, waiting for the debugger to connect."
msgstr ""

# fe3a16c54659445788420ac8227f0901
#: ../../home/kovid/work/calibre/manual/develop.rst:324
msgid ""
"Now open a terminal or command prompt and use the following command to start"
" the debugging session::"
msgstr ""

# 2000f6cd924a4c01a915fd1cb3dd4a9a
#: ../../home/kovid/work/calibre/manual/develop.rst:329
msgid ""
"You can read about how to use the python debugger in the `python stdlib docs"
" for the pdb module <https://docs.python.org/2/library/pdb.html#debugger-"
"commands>`_."
msgstr ""

# 5ccef82094744b4a89fc772633a070cc
#: ../../home/kovid/work/calibre/manual/develop.rst:333
msgid ""
"By default, the remote debugger will try to connect on port 4444. You can "
"change it, by passing the port parameter to both the set_trace() and the "
"cli() functions above, like this: ``set_trace(port=1234)`` and "
"``cli(port=1234)``."
msgstr ""

# 23966c26458849cf87356950172fab2a
#: ../../home/kovid/work/calibre/manual/develop.rst:339
msgid ""
"The python debugger cannot handle multiple threads, so you have to call "
"set_trace once per thread, each time with a different port number."
msgstr ""

# bb302879bdd045ba920ad177155fd22c
#: ../../home/kovid/work/calibre/manual/develop.rst:343
msgid "Using the debugger in your favorite python IDE"
msgstr ""

# d1f4217f0bec4ec2973aca656f10f797
#: ../../home/kovid/work/calibre/manual/develop.rst:345
msgid ""
"It is possible to use the builtin debugger in your favorite python IDE, if "
"it supports remote debugging. The first step is to add the calibre src "
"checkout to the ``PYTHONPATH`` in your IDE. In other words, the directory "
"you set as ``CALIBRE_DEVELOP_FROM`` above, must also be in the "
"``PYTHONPATH`` of your IDE."
msgstr ""

# a1e846b2f4bd46f799ceb38b6ec918ae
#: ../../home/kovid/work/calibre/manual/develop.rst:350
msgid ""
"Then place the IDE's remote debugger module into the :file:`src` "
"subdirectory of the calibre source code checkout. Add whatever code is "
"needed to launch the remote debugger to calibre at the point of interest, "
"for example in the main function. Then run calibre as normal. Your IDE "
"should now be able to connect to the remote debugger running inside calibre."
msgstr ""

# 33223dae742c48b69bc09926f1c13d39
#: ../../home/kovid/work/calibre/manual/develop.rst:357
msgid "Executing arbitrary scripts in the calibre python environment"
msgstr ""

# ef0a04fe32e2485888e6a73440c66313
#: ../../home/kovid/work/calibre/manual/develop.rst:359
msgid ""
"The :command:`calibre-debug` command provides a couple of handy switches to "
"execute your own code, with access to the calibre modules::"
msgstr ""

# 587867a1a0504fffbb16e5c4506de270
#: ../../home/kovid/work/calibre/manual/develop.rst:364
msgid ""
"is great for testing a little snippet of code on the command line. It works "
"in the same way as the -c switch to the python interpreter::"
msgstr ""

# 9a3fb29d965047ffbcbd2b1582ae01d3
#: ../../home/kovid/work/calibre/manual/develop.rst:368
msgid ""
"can be used to execute your own Python script. It works in the same way as "
"passing the script to the Python interpreter, except that the calibre "
"environment is fully initialized, so you can use all the calibre code in "
"your script. To use command line arguments with your script, use the form::"
msgstr ""

# 2a7576dbda9c4bb7b7d835fa8387abb9
#: ../../home/kovid/work/calibre/manual/develop.rst:373
msgid ""
"The ``--`` causes all subsequent arguments to be passed to your script."
msgstr ""

# 8c7f81bc205a4ca585fecefded1d17ab
#: ../../home/kovid/work/calibre/manual/develop.rst:377
msgid "Using calibre in your projects"
msgstr ""

# 4c28bd13ddb545968023b28a881d7051
#: ../../home/kovid/work/calibre/manual/develop.rst:379
msgid ""
"It is possible to directly use calibre functions/code in your Python "
"project. Two ways exist to do this:"
msgstr ""

# 3c0c6e60dc4b4110ad2ce978f1bf0ac1
#: ../../home/kovid/work/calibre/manual/develop.rst:382
msgid "Binary install of calibre"
msgstr ""

# 41a18938b2874b4fbf6cc09d54d3861d
#: ../../home/kovid/work/calibre/manual/develop.rst:384
msgid ""
"If you have a binary install of calibre, you can use the Python interpreter "
"bundled with calibre, like this::"
msgstr ""

# 631ad5db15184162bbd51d71d82cddc9
#: ../../home/kovid/work/calibre/manual/develop.rst:389
msgid "Source install on Linux"
msgstr ""

# e090a499f1de4c64bf3fc964e5765cea
#: ../../home/kovid/work/calibre/manual/develop.rst:391
msgid ""
"In addition to using the above technique, if you do a source install on "
"Linux, you can also directly import calibre, as follows::"
msgstr ""

# 3aa7306156f243ad8c582c9fcda8933e
#: ../../home/kovid/work/calibre/manual/develop.rst:399
msgid ""
"It is essential that you import the init_calibre module before any other "
"calibre modules/packages as it sets up the interpreter to run calibre code."
msgstr ""

# 677bef8a0a6148a1bfe1ee4f253e719e
#: ../../home/kovid/work/calibre/manual/develop.rst:403
msgid "API documentation for various parts of calibre"
msgstr ""
