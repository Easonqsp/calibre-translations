# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Rodolfo_Jadon, 2015
# W.P.M.E. Hofland <wpme.hofland@gmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-01 12:31+0530\n"
"PO-Revision-Date: 2015-05-05 16:42+0000\n"
"Last-Translator: W.P.M.E. Hofland <wpme.hofland@gmail.com>\n"
"Language-Team: Dutch (http://www.transifex.com/projects/p/calibre/language/nl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: nl\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 521f6d2c8ceb40ae991ed7802ee9be57
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:4
msgid "Writing your own plugins to extend calibre's functionality"
msgstr "Uw eigen plugins schrijven om de functionaliteit van calibre uit te breiden"

# 5d08926f674f41c38449dd4a49bf1f05
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:6
msgid ""
"calibre has a very modular design. Almost all functionality in calibre comes"
" in the form of plugins. Plugins are used for conversion, for downloading "
"news (though these are called recipes), for various components of the user "
"interface, to connect to different devices, to process files when adding "
"them to calibre and so on. You can get a complete list of all the built-in "
"plugins in calibre by going to :guilabel:`Preferences->Plugins`."
msgstr ""

# 091d05ab97be4be9848c63734ead5fa3
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:8
msgid ""
"Here, we will teach you how to create your own plugins to add new features "
"to calibre."
msgstr ""

# 10f0da9363bb48ef9cc575be90e12a4f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:0
msgid "Contents"
msgstr "Inhoud"

# 3bcd55a25b1349d5aa4c31610d0dbdb3
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:15
msgid "This only applies to calibre releases >= 0.8.60"
msgstr "Dit is enkel van toepassing op calibre releases >= 0.8.60"

# da582dcc4cc2475382131baebe19bee6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:18
msgid "Anatomy of a calibre plugin"
msgstr "Opbouw van een calibre plugin"

# 42fe7608385f4c1aaaced652c30255b6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:20
msgid ""
"A calibre plugin is very simple, it's just a zip file that contains some "
"python code and any other resources like image files needed by the plugin. "
"Without further ado, let's see a basic example."
msgstr "Een Calibre-plugin is heel eenvoudig, het is enkel een zip-bestand dat wat Pythoncode bevat en andere hulpbestanden zoals afbeeldingen die de plugin nodig heeft. Laten we om te beginnen een eenvoudig voorbeeld bekijken."

# fcde72254571456db677c15ea73a742a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:24
msgid ""
"Suppose you have an installation of calibre that you are using to self "
"publish various e-documents in EPUB and MOBI formats. You would like all "
"files generated by calibre to have their publisher set as \"Hello world\", "
"here's how to do it. Create a file named :file:`__init__.py` (this is a "
"special name and must always be used for the main file of your plugin) and "
"enter the following Python code into it:"
msgstr ""

# ad41f858924f4db8bbb3fd0b6907b88c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:32
msgid ""
"That's all. To add this code to calibre as a plugin, simply run the "
"following in the directory in which you created :file:`__init__.py`::"
msgstr ""

# 92a76c99424343a4a458a3fed3263a48
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:38
msgid ""
"On OS X, the command line tools are inside the calibre bundle, for example, "
"if you installed calibre in :file:`/Applications` the command line tools are"
" in :file:`/Applications/calibre.app/Contents/console.app/Contents/MacOS/`."
msgstr ""

# 588b0d8e5e3e44009cd9ac87fb41237f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:42
msgid ""
"You can download the Hello World plugin from `helloworld_plugin.zip  <http"
"://calibre-ebook.com/downloads/helloworld_plugin.zip>`_."
msgstr ""

# 6b941ccbef9a4237b94371686943b090
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:45
msgid ""
"Every time you use calibre to convert a book, the plugin's :meth:`run` "
"method will be called and the converted book will have its publisher set to "
"\"Hello World\". This is a trivial plugin, lets move on to a more complex "
"example that actually adds a component to the user interface."
msgstr ""

# d29f3265161f4932b18d9d8e05575919
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:50
msgid "A User Interface plugin"
msgstr "Een gebruikersinterface plugin"

# b7d62c9768414738ae5b80ac852a6802
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:52
msgid ""
"This plugin will be spread over a few files (to keep the code clean). It "
"will show you how to get resources (images or data files) from the plugin "
"zip file, allow users to configure your plugin, how to create elements in "
"the calibre user interface and how to access and query the books database in"
" calibre."
msgstr ""

# e3a723862188418d98ceebc1e0b0df35
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:57
msgid ""
"You can download this plugin from `interface_demo_plugin.zip <http"
"://calibre-ebook.com/downloads/interface_demo_plugin.zip>`_"
msgstr ""

# 0be4955d8e2d471996edc0c47c8b73d6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:61
msgid ""
"The first thing to note is that this zip file has a lot more files in it, "
"explained below, pay particular attention to ``plugin-import-name-"
"interface_demo.txt``."
msgstr ""

# 0abee288505d4528a1c947ed9b91f6be
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:77
msgid "**plugin-import-name-interface_demo.txt**"
msgstr "**plugin-import-name-interface_demo.txt**"

# c92d25af15d24320aa31ba5042d50472
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:65
msgid ""
"An empty text file used to enable the multi-file plugin magic. This file "
"must be present in all plugins that use more than one .py file. It should be"
" empty and its filename must be of the form: plugin-import-"
"name-**some_name**.txt The presence of this file allows you to import code "
"from the .py files present inside the zip file, using a statement like::"
msgstr ""

# ab580134ba3e4a34984db61d739b7cd1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:71
msgid ""
"The prefix ``calibre_plugins`` must always be present. ``some_name`` comes "
"from the filename of the empty text file. ``some_module`` refers to  "
":file:`some_module.py` file inside the zip file. Note that this importing is"
" just as powerful as regular python imports. You can create packages and "
"subpackages of .py modules inside the zip file, just like you would normally"
" (by defining __init__.py in each sub directory), and everything should Just"
" Work."
msgstr ""

# 2f57f3a10ce944178e72f1972557b62a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:76
msgid ""
"The name you use for ``some_name`` enters a global namespace shared by all "
"plugins, **so make it as unique as possible**. But remember that it must be "
"a valid python identifier (only alphabets, numbers and the underscore)."
msgstr ""

# 506751e7fbe14f518114e23ced1706e7
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:80
msgid "**__init__.py**"
msgstr "**__init__.py**"

# 25fc0a07f7d14d27acfd7a1f0bde60ec
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:80
msgid "As before, the file that defines the plugin class"
msgstr "Zoals hiervoor, dit bestand definieërd de klasse van de plugin"

# 9a2f87655cce4aed81acd2bc62ae5a1d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:83
msgid "**main.py**"
msgstr "**main.py**"

# 9210760f8a8e4e1798350b4fa2d68095
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:83
msgid "This file contains the actual code that does something useful"
msgstr "Dit bestand bevat de daadwerkelijke code die iets nuttigs doet"

# b499e89a7783404790aea1527084abc2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:86
msgid "**ui.py**"
msgstr "**ui.py**"

# 977c68f5e4664868880519e832324b80
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:86
msgid "This file defines the interface part of the plugin"
msgstr "Dit bestand definieërd de interface van de plugin"

# 8735e7b10f8b489d8f7bc371d28c30f7
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:89
msgid "**images/icon.png**"
msgstr "**images/icon.png**"

# 8f0b74ee908943c7a3b0cb6a81bcab6b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:89
msgid "The icon for this plugin"
msgstr "Het icoon voor deze plugin"

# b714c6e521464155a615c58993ad7703
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:92
msgid "**about.txt**"
msgstr "**about.txt**"

# 659ab8279de2470cb4aec21ba8b5c04c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:92
msgid "A text file with information about the plugin"
msgstr "Een tekstbestand met informatie over uw plugin"

# 56b4a861169447ffaa525078ebc85fcc
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:97
msgid "**translations**"
msgstr "**vertalingen**"

# 311905a827294f1faa76ba3cfa9236c8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:95
msgid ""
"A folder containing .mo files with the translations of the user interface of"
" your plugin into different languages. See below for details."
msgstr ""

# d151d1eabff94d1a855259e02d185e41
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:99
msgid "Now let's look at the code."
msgstr "Laten we naar de code kijken"

# e3a879e274a54ea09386914fdf810150
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:102
msgid "__init__.py"
msgstr "__init__.py"

# 55649ff1b8184f50ba75e9d2ba8d74ed
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:104
msgid "First, the obligatory ``__init__.py`` to define the plugin metadata:"
msgstr ""

# 1e9a7ab77f874848b7d55379e5bd5971
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:109
msgid ""
"The only noteworthy feature is the field :attr:`actual_plugin`. Since "
"calibre has both command line and GUI interfaces, GUI plugins like this one "
"should not load any GUI libraries in __init__.py. The actual_plugin field "
"does this for you, by telling calibre that the actual plugin is to be found "
"in another file inside your zip archive, which will only be loaded in a GUI "
"context."
msgstr ""

# 4ea7c53c750a45eca47a6abc4196b256
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:114
msgid ""
"Remember that for this to work, you must have a plugin-import-name-"
"some_name.txt file in your plugin zip file, as discussed above."
msgstr ""

# dfcc665c0a004912aceeab6d3f903793
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:117
msgid ""
"Also there are a couple of methods for enabling user configuration of the "
"plugin. These are discussed below."
msgstr ""

# 47b0cdfbc338450c9b5f42b41be9c24b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:120
msgid "ui.py"
msgstr "ui.py"

# ecf462109ce84b1bbf8bfea37ed7ac33
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:122
msgid ""
"Now let's look at ui.py which defines the actual GUI plugin. The source code"
" is heavily commented and should be self explanatory:"
msgstr ""

# 061a26fd589d46b885dc5a2b3eed7cfc
# c6d7499f040749ff90a6e85bacdccd81
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:128
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:212
msgid "main.py"
msgstr "main.py"

# 9c5e9e65c9df412795c14728e426b29b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:130
msgid "The actual logic to implement the Interface Plugin Demo dialog."
msgstr ""

# a81cf441a5274c5d8bb2528f1457fc8f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:136
msgid "Getting resources from the plugin zip file"
msgstr "Bronnen uit het plugin zip bestand verkrijgen"

# 0dee8bce1cc54e1f88fd688ffd7f9027
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:138
msgid ""
"calibre's plugin loading system defines a couple of built-in functions that "
"allow you to conveniently get files from the plugin zip file."
msgstr ""

# 8c6ba646ba5749f29adfe65c65138207
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:145
msgid "**get_resources(name_or_list_of_names)**"
msgstr ""

# 8e03128fea3e429d82aa6bbdb70c0983
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:141
msgid ""
"This function should be called with a list of paths to files inside the zip "
"file. For example to access the file icon.png in the directory images in the"
" zip file, you would use: ``images/icon.png``. Always use a forward slash as"
" the path separator, even on windows. When you pass in a single name, the "
"function will return the raw bytes of that file or None if the name was not "
"found in the zip file. If you pass in more than one name then it returns a "
"dict mapping the names to bytes. If a name is not found, it will not be "
"present in the returned dict."
msgstr ""

# 0dde70566ed64d2797157b7fb4d8db5e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:149
msgid "**get_icons(name_or_list_of_names)**"
msgstr ""

# 133ae7ad560b43769a20155aa9887a37
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:148
msgid ""
"A convenience wrapper for get_resources() that creates QIcon objects from "
"the raw bytes returned by get_resources. If a name is not found in the zip "
"file the corresponding QIcon will be null."
msgstr ""

# 76bdcce3cdfa4c05b42d50936e86612b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:152
msgid "Enabling user configuration of your plugin"
msgstr "Gebruikers-configuratie van uw plugin toevoegen"

# 52473fcd03d44553b33e07c9957c028e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:154
msgid ""
"To allow users to configure your plugin, you must define three methods in "
"your base plugin class, '**is_customizable**, **config_widget** and "
"**save_settings** as shown below:"
msgstr ""

# bd5aa922537b4d2c9b6251229540c504
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:165
msgid ""
"calibre has many different ways to store configuration data (a legacy of its"
" long history). The recommended way is to use the **JSONConfig** class, "
"which stores your configuration information in a .json file."
msgstr ""

# dae67e6de3114bbcbbc432120ea7cbfb
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:167
msgid ""
"The code to manage configuration data in the demo plugin is in config.py:"
msgstr ""

# bbd8c635efc24a05a810de064c04a124
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:172
msgid ""
"The ``prefs`` object is now available throughout the plugin code by a "
"simple::"
msgstr ""

# 7e0ac08fe30d40b59a69957c84a8d194
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:177
msgid "You can see the ``prefs`` object being used in main.py:"
msgstr ""

# 5f8d183dbf51490096b2a088a3f689f9
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:184
msgid "Edit Book plugins"
msgstr "Boek bewerk plugins"

# 20ab02a5764649e2b25390ef631915ec
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:186
msgid ""
"Now let's change gears for a bit and look at creating a plugin to add tools "
"to the calibre book editor. The plugin is available here: "
"`editor_demo_plugin.zip  <http://calibre-"
"ebook.com/downloads/editor_demo_plugin.zip>`_."
msgstr ""

# 353bf4d09caa42cfb22d00621051563e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:190
msgid ""
"The first step, as for all plugins is to create the import name empty txt "
"file, as described :ref:`above <import_name_txt>`. We shall name the file "
"``plugin-import-name-editor_plugin_demo.txt``."
msgstr ""

# d93878473e154255b76c61a4c38b9f2f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:194
msgid ""
"Now we create the mandatory ``__init__.py`` file that contains metadata "
"about the plugin -- its name, author, version, etc."
msgstr ""

# f2957439f4b94e489a16d74807f0feed
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:200
msgid ""
"A single editor plugin can provide multiple tools each tool corresponds to a"
" single button in the toolbar and entry in the :guilabel:`Plugins` menu in "
"the editor. These can have sub-menus in case the tool has multiple related "
"actions."
msgstr ""

# 4227f2b4cc674da59c257cde7cb9ee17
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:204
msgid ""
"The tools must all be defined in the file ``main.py`` in your plugin. Every "
"tool is a class that inherits from the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class. Let's look at "
"``main.py`` from the demo plugin, the source code is heavily commented and "
"should be self-explanatory. Read the API documents of the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class for more details."
msgstr ""

# c985fc4abfb14959bbcfc3f3c5d7f837
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:214
msgid ""
"Here we will see the definition of a single tool that will multiply all font"
" sizes in the book by a number provided by the user. This tool demonstrates "
"various important concepts that you will need in developing your own "
"plugins, so you should read the (heavily commented) source code carefully."
msgstr ""

# f4f9303ab55e486980442f407d731de3
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:222
msgid ""
"Let's break down ``main.py``. We see that it defines a single tool, named "
"*Magnify fonts*. This tool will ask the user for a number and multiply all "
"font sizes in the book by that number."
msgstr ""

# 7122fb8b6a70424ab35d9d449b4a53ad
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:226
msgid ""
"The first important thing is the tool name which you must set to some "
"relatively unique string as it will be used as the key for this tool."
msgstr ""

# ff71ddb9600446c69470591749cb6eb4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:229
msgid ""
"The next important entry point is the "
":meth:`calibre.gui2.tweak_book.plugin.Tool.create_action`. This method "
"creates the QAction objects that appear in the plugins toolbar and plugin "
"menu. It also, optionally, assigns a keyboard shortcut that the user can "
"customize. The triggered signal from the QAction is connected to the "
"ask_user() method that asks the user for the font size multiplier, and then "
"runs the magnification code."
msgstr ""

# 6bfa8591d25d41a1b24ed61668e3e989
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:237
msgid ""
"The magnification code is well commented and fairly simple. The main things "
"to note are that you get a reference to the editor window as ``self.gui`` "
"and the editor *Boss* as ``self.boss``. The *Boss* is the object that "
"controls the editor user interface. It has many useful methods, that are "
"documented in the :class:`calibre.gui2.tweak_book.boss.Boss` class."
msgstr ""

# 77a1d5f030e447ac91ba7cd4ab090472
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:243
msgid ""
"Finally, there is ``self.current_container`` which is a reference to the "
"book being edited as a "
":class:`calibre.ebooks.oeb.polish.container.Container` object. This "
"represents the book as a collection of its constituent HTML/CSS/image files "
"and has convenience methods for doing many useful things. The container "
"object and various useful utility functions that can be reused in your "
"plugin code are documented in :ref:`polish_api`."
msgstr ""

# 65d7ed0b1d4547318670f2a100a20ba2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:252
msgid "Adding translations to your plugin"
msgstr "Vertalingen toevoegen aan uw plugin"

# 553ccbc352904a0bacbbc0525c177760
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:254
msgid ""
"You can have all the user interface strings in your plugin translated and "
"displayed in whatever language is set for the main calibre user interface."
msgstr ""

# f9d2f406c7ee4d16ba99c6aa2f7a0b60
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:257
msgid ""
"The first step is to go through your plugin's source code and mark all user "
"visible strings as translatable, by surrounding them in _(). For example::"
msgstr ""

# b20bb00f36d44f55ba133bc00047181d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:262
msgid ""
"Then use some program to generate .po files from your plugin source code. "
"There should be one .po file for every language you want to translate into. "
"For example: de.po for German, fr.po for French and so on. You can use the "
"`poedit <http://poedit.net/>`_ program for this."
msgstr ""

# 45bd40d75f654acb9e17938a0a6cbabb
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:267
msgid ""
"Send these .po files to your translators. Once you get them back, compile "
"them into .mo files. You can again use poedit for that, or just do::"
msgstr ""

# 8dda5162bc9d406ca006ed87f0f4dcf3
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:272
msgid "Put the .mo files into the ``translations`` folder in your plugin."
msgstr ""

# b370037b3ab1401083fe58a3fbcae037
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:274
msgid ""
"The last step is to simply call the function `load_translations()` at the "
"top of your plugin's .py files. For performance reasons you should only call"
" this function in those .py files that actually have translatable strings. "
"So in a typical User Interface plugin you would call it at the top of "
"``ui.py`` but not ``__init__.py``."
msgstr ""

# 68741587bf854848bd55c1dab750a426
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:280
msgid ""
"You can test the translations of your plugins by changing the user interface"
" language in calibre under Preferences->Look & Feel or by running calibre "
"like this::"
msgstr ""

# ba720799f215451aa105bc3609662b07
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:286
msgid ""
"Replace ``de`` with the language code of the language you want to test."
msgstr ""

# a5981b121caf4c86b6a18a4920dd1e52
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:289
msgid "The plugin API"
msgstr "De plugin API"

# 9092b22d7ac84a29a9dd3df3b11d6206
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:291
msgid ""
"As you may have noticed above, a plugin in calibre is a class. There are "
"different classes for the different types of plugins in calibre. Details on "
"each class, including the base class of all plugins can be found in "
":ref:`plugins`."
msgstr ""

# 8015e04a7af34b778496295f8b126107
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:294
msgid ""
"Your plugin is almost certainly going to use code from calibre. To learn how"
" to find various bits of functionality in the calibre code base, read the "
"section on the calibre :ref:`code_layout`."
msgstr ""

# cad1a954d2db4d5b88cc9c9bb2201da6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:299
msgid "Debugging plugins"
msgstr "Plugins debuggen"

# 5883d1836a2f4996b580637b68f367bc
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:301
msgid ""
"The first, most important step is to run calibre in debug mode. You can do "
"this from the command line with::"
msgstr ""

# c068ab22dbe94ae296c27ee4e306f349
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:305
msgid ""
"Or from within calibre by right-clicking the preferences button or using the"
" `Ctrl+Shift+R` keyboard shortcut."
msgstr ""

# 4fc02451c09743da9f2b99cb0904400c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:307
msgid ""
"When running from the command line, debug output will be printed to the "
"console, when running from within calibre the output will go to a txt file."
msgstr ""

# d8001e634e3648078a9e8467ced2bf71
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:309
msgid ""
"You can insert print statements anywhere in your plugin code, they will be "
"output in debug mode. Remember, this is python, you really shouldn't need "
"anything more than print statements to debug ;) I developed all of calibre "
"using just this debugging technique."
msgstr ""

# aac1624298c146ffa70381c179b44a80
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:311
msgid ""
"You can quickly test changes to your plugin by using the following command "
"line::"
msgstr ""

# 1a9ca0526ac74b53ab8ea94b1c5056e4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:316
msgid ""
"This will shutdown a running calibre, wait for the shutdown to complete, "
"then update your plugin in calibre and relaunch calibre."
msgstr ""

# cf9cbc1ab56848299fd69ec368017af8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:319
msgid "More plugin examples"
msgstr "Meer voorbeelden van plugins"

# dc56fbb4714f4fe883e54b571dea8469
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:321
msgid ""
"You can find a list of many, sophisticated calibre plugins `here "
"<http://www.mobileread.com/forums/showthread.php?t=118764>`_."
msgstr ""

# 74a6cd69916344fb91b43496fe35727a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:324
msgid "Sharing your plugins with others"
msgstr "Uw plugins delen met anderen"

# 667fad8a1d9a4f65be0ac825c7f8fa02
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:326
msgid ""
"If you would like to share the plugins you have created with other users of "
"calibre, post your plugin in a new thread in the `calibre plugins forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=237>`_."
msgstr ""
