# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-25 09:34+0530\n"
"PO-Revision-Date: 2014-07-28 07:32+0000\n"
"Last-Translator: Pełna Nazwa\n"
"Language-Team: Polish (http://www.transifex.com/projects/p/calibre/language/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 918690fe802c4ef2adf9c8ba2a5cd201
#: ../../news.rst:6
msgid "Adding your favorite news website"
msgstr ""

# 25fc7e6f3c2846e9b04219c6bee53413
#: ../../news.rst:8
msgid ""
"|app| has a powerful, flexible and easy-to-use framework for downloading "
"news from the Internet and converting it into an ebook. The following will "
"show you, by means of examples, how to get news from various websites."
msgstr ""

# 6ba661d78852440586aa4c8917673761
#: ../../news.rst:10
msgid ""
"To gain an understanding of how to use the framework, follow the examples in"
" the order listed below:"
msgstr ""

# 2e47c4262d004a41871f6fe5214734a4
#: ../../news.rst:17
msgid "Completely automatic fetching"
msgstr ""

# 1c89e8289cae48ada0fd01533921a1ae
#: ../../news.rst:19
msgid ""
"If your news source is simple enough, |app| may well be able to fetch it "
"completely automatically, all you need to do is provide the URL. |app| "
"gathers all the information needed to download a news source into a "
":term:`recipe`. In order to tell |app| about a news source, you have to "
"create a :term:`recipe` for it. Let's see some examples:"
msgstr ""

# 80583b2db1504b26860022875aae9c53
#: ../../news.rst:24
msgid "portfolio.com"
msgstr ""

# 28611c1b008f44f4838c86803122b0d4
#: ../../news.rst:26
msgid ""
"*portfolio.com* is the website for *Condé Nast Portfolio*, a business "
"related magazine. In order to download articles from the magazine and "
"convert them to ebooks, we rely on the :term:`RSS` feeds of portfolio.com. A"
" list of such feeds is available at http://www.portfolio.com/rss/."
msgstr ""

# aac138123a0d4e3d87ca381521f1ee32
#: ../../news.rst:28
msgid "Lets pick a couple of feeds that look interesting:"
msgstr ""

# 1f47e6ae1dc8437d9595c269bb239a3b
#: ../../news.rst:30
msgid "Business Travel: http://feeds.portfolio.com/portfolio/businesstravel"
msgstr ""

# d2d0d36011a2435ea60f1a959ba2abf4
#: ../../news.rst:31
msgid "Tech Observer: http://feeds.portfolio.com/portfolio/thetechobserver"
msgstr ""

# e72d2da9f66444d5b4936029158325c0
#: ../../news.rst:33
msgid ""
"I got the URLs by clicking the little orange RSS icon next to each feed "
"name. To make |app| download the feeds and convert them into an ebook, you "
"should right click the :guilabel:`Fetch news` button and then the "
":guilabel:`Add a custom news source` menu item. A dialog similar to that "
"shown below should open up."
msgstr ""

# 381f1c65fb1b4830b196ee55e2f24a0b
#: ../../news.rst:38
msgid ""
"First enter ``Portfolio`` into the :guilabel:`Recipe title` field. This will"
" be the title of the ebook that will be created from the articles in the "
"above feeds."
msgstr ""

# 65371538ab0d4886923f8a3f10c64e67
#: ../../news.rst:40
msgid ""
"The next two fields (:guilabel:`Oldest article` and :guilabel:`Max. number "
"of articles`) allow you some control over how many articles should be "
"downloaded from each feed, and they are pretty self explanatory."
msgstr ""

# 959aa7f9a4a8458d884d80b0233cf3b1
#: ../../news.rst:42
msgid ""
"To add the feeds to the recipe, enter the feed title and the feed URL and "
"click the :guilabel:`Add feed` button. Once you have added both feeds, "
"simply click the :guilabel:`Add/update recipe` button and you're done! Close"
" the dialog."
msgstr ""

# 2bd97a8e816042e7afa6330fbee80269
#: ../../news.rst:44
msgid ""
"To test your new :term:`recipe`, click the :guilabel:`Fetch news` button and"
" in the :guilabel:`Custom news sources` sub-menu click "
":guilabel:`Portfolio`. After a couple of minutes, the newly downloaded "
"Portfolio ebook will appear in the main library view (if you have your "
"reader connected, it will be put onto the reader instead of into the "
"library). Select it and hit the :guilabel:`View` button to read!"
msgstr ""

# 1e773b825db14349a2df8a932d474526
#: ../../news.rst:46
msgid ""
"The reason this worked so well, with so little effort is that "
"*portfolio.com* provides *full-content* :term:`RSS` feeds, i.e., the article"
" content is embedded in the feed itself. For most news sources that provide "
"news in this fashion, with *full-content* feeds, you don't need any more "
"effort to convert them to ebooks. Now we will look at a news source that "
"does not provide full content feeds. In such feeds, the full article is a "
"webpage and the feed only contains a link to the webpage with a short "
"summary of the article."
msgstr ""

# fe597f77f0e8465aa2860d7b39257bfa
#: ../../news.rst:51
msgid "bbc.co.uk"
msgstr ""

# fad53c581b4c4fcb9ee574d9cecb5248
#: ../../news.rst:53
msgid "Lets try the following two feeds from *The BBC*:"
msgstr ""

# 2da003fb76d149fe9867bd9ad0868e93
#: ../../news.rst:55
msgid ""
"News Front Page: "
"http://newsrss.bbc.co.uk/rss/newsonline_world_edition/front_page/rss.xml"
msgstr ""

# 518f87164b0740c3af3e91d397994102
#: ../../news.rst:56
msgid ""
"Science/Nature: "
"http://newsrss.bbc.co.uk/rss/newsonline_world_edition/science/nature/rss.xml"
msgstr ""

# b0c95520e095425090ad01953e765d23
#: ../../news.rst:58
msgid ""
"Follow the procedure outlined in :ref:`portfolio` to create a recipe for "
"*The BBC* (using the feeds above). Looking at the downloaded ebook, we see "
"that |app| has done a creditable job of extracting only the content you care"
" about from each article's webpage. However, the extraction process is not "
"perfect. Sometimes it leaves in undesirable content like menus and "
"navigation aids or it removes content that should have been left alone, like"
" article headings. In order, to have perfect content extraction, we will "
"need to customize the fetch process, as described in the next section."
msgstr ""

# 4d0178292440466b826d2de4239a22bb
#: ../../news.rst:61
msgid "Customizing the fetch process"
msgstr ""

# bfea8766304543e49453830fe2dccf4e
#: ../../news.rst:63
msgid ""
"When you want to perfect the download process, or download content from a "
"particularly complex website, you can avail yourself of all the power and "
"flexibility of the :term:`recipe` framework. In order to do that, in the "
":guilabel:`Add custom news sources` dialog, simply click the "
":guilabel:`Switch to Advanced mode` button."
msgstr ""

# 21d97f65fc8149a982479c622f867bcd
#: ../../news.rst:65
msgid ""
"The easiest and often most productive customization is to use the print "
"version of the online articles. The print version typically has much less "
"cruft and translates much more smoothly to an ebook. Let's try to use the "
"print version of the articles from *The BBC*."
msgstr ""

# 889318b2520840b3949c4a1bd6b352a2
#: ../../news.rst:68
msgid "Using the print version of bbc.co.uk"
msgstr ""

# 9bdb75dce85e423a98f5ab3d6d35df91
#: ../../news.rst:70
msgid ""
"The first step is to look at the ebook we downloaded previously from "
":ref:`bbc`. At the end of each article, in the ebook is a little blurb "
"telling you where the article was downloaded from. Copy and paste that URL "
"into a browser. Now on the article webpage look for a link that points to "
"the \"Printable version\". Click it to see the print version of the article."
" It looks much neater! Now compare the two URLs. For me they were:"
msgstr ""

# aed41e1ba5964eb6b9b34c355a58bd99
#: ../../news.rst:73
msgid "Article URL"
msgstr ""

# 60fa685c24c74742a5cbf7b32c1c943e
#: ../../news.rst:73
msgid "http://news.bbc.co.uk/2/hi/science/nature/7312016.stm"
msgstr ""

# 4bc683ffe49d42dfb396f00771a54eb3
#: ../../news.rst:76
msgid "Print version URL"
msgstr ""

# 7c865dd2bc484cfb85f883396c1c51d3
#: ../../news.rst:76
msgid ""
"http://newsvote.bbc.co.uk/mpapps/pagetools/print/news.bbc.co.uk/2/hi/science/nature/7312016.stm"
msgstr ""

# ccc7ebe245954be0a30c2949339780b8
#: ../../news.rst:78
msgid ""
"So it looks like to get the print version, we need to prefix every article "
"URL with:"
msgstr ""

# f9bbe51bfe30432eb26fd0ee8d33eb20
#: ../../news.rst:80
msgid "newsvote.bbc.co.uk/mpapps/pagetools/print/"
msgstr ""

# bbe8b05eee0941748d84c9ce32411dd3
#: ../../news.rst:82
msgid ""
"Now in the :guilabel:`Advanced Mode` of the Custom  news sources dialog, you"
" should see something like (remember to select *The BBC* recipe before "
"switching to advanced mode):"
msgstr ""

# 781c7669486b461c8044cbe7d1b439d2
#: ../../news.rst:87
msgid ""
"You can see that the fields from the :guilabel:`Basic mode` have been "
"translated to python code in a straightforward manner. We need to add "
"instructions to this recipe to use the print version of the articles. All "
"that's needed is to add the following two lines:"
msgstr ""

# a465b7ba16cc46ffa9d5c7097b160f3d
#: ../../news.rst:94
msgid ""
"This is python, so indentation is important. After you've added the lines, "
"it should look like:"
msgstr ""

# 42d50b768907471d820096b20b51ab01
#: ../../news.rst:99
msgid ""
"In the above, ``def print_version(self, url)`` defines a *method* that is "
"called by |app| for every article. ``url`` is the URL of the original "
"article. What ``print_version`` does is take that url and replace it with "
"the new URL that points to the print version of the article. To learn about "
"`python <http://www.python.org>`_ see the `tutorial "
"<http://docs.python.org/tut/>`_."
msgstr ""

# 53dd880d8e364729a843e5063f244ac8
#: ../../news.rst:101
msgid ""
"Now, click the :guilabel:`Add/update recipe` button and your changes will be"
" saved. Re-download the ebook. You should have a much improved ebook. One of"
" the problems with the new version is that the fonts on the print version "
"webpage are too small. This is automatically fixed when converting to an "
"ebook, but even after the fixing process, the font size of the menus and "
"navigation bar to become too large relative to the article text. To fix "
"this, we will do some more customization, in the next section."
msgstr ""

# 47b9b339744c4fcabf29ff7869724069
#: ../../news.rst:104
msgid "Replacing article styles"
msgstr ""

# 9f5cf603a0a94b8e98be3f9821c0400e
#: ../../news.rst:106
msgid ""
"In the previous section, we saw that the font size for articles from the "
"print version of *The BBC* was too small. In most websites, *The BBC* "
"included, this font size is set by means of :term:`CSS` stylesheets. We can "
"disable the fetching of such stylesheets by adding the line::"
msgstr ""

# 1696cda4ce4e4d75858c6404379fe440
#: ../../news.rst:110
msgid "The recipe now looks like:"
msgstr ""

# c50b529d8a1b42fab6279a4fcf10bd39
#: ../../news.rst:117
msgid ""
"The new version looks pretty good. If you're a perfectionist, you'll want to"
" read the next section, which deals with actually modifying the downloaded "
"content."
msgstr ""

# ee62a95131fe48de97b00bd296cafea2
#: ../../news.rst:120
msgid "Slicing and dicing"
msgstr ""

# fe385892967f44afbf2ddc25bbb535d4
#: ../../news.rst:122
msgid ""
"|app| contains very powerful and flexible abilities when it comes to "
"manipulating downloaded content. To show off a couple of these, let's look "
"at our old friend the :ref:`The BBC <bbc1>` recipe again. Looking at the "
"source code (:term:`HTML`) of a couple of articles (print version), we see "
"that they have a footer that contains no useful information, contained in"
msgstr ""

# 101e7f9a6d67474bbfb840362184087a
#: ../../news.rst:130
msgid "This can be removed by adding::"
msgstr ""

# 666d7ab4a689409c899696acfb12a29a
#: ../../news.rst:134
msgid ""
"to the recipe. Finally, lets replace some of the :term:`CSS` that we "
"disabled earlier, with our own :term:`CSS` that is suitable for conversion "
"to an ebook::"
msgstr ""

# 6895aa2c8c894043b39149877aa7493c
#: ../../news.rst:138
msgid ""
"With these additions, our recipe has become \"production quality\", indeed "
"it is very close to the actual recipe used by |app| for the *BBC*, shown "
"below:"
msgstr ""

# 393fcd74c245435685039cc9af6bf8f0
#: ../../news.rst:142
msgid ""
"This :term:`recipe` explores only the tip of the iceberg when it comes to "
"the power of |app|. To explore more of the abilities of |app| we'll examine "
"a more complex real life example in the next section."
msgstr ""

# 0ef099128d9a4602a933b38c3c11bf75
#: ../../news.rst:145
msgid "Real life example"
msgstr ""

# 07ddf32f00f44cfdb22ae7b67a9e9403
#: ../../news.rst:147
msgid ""
"A reasonably complex real life example that exposes more of the :term:`API` "
"of ``BasicNewsRecipe`` is the :term:`recipe` for *The New York Times*"
msgstr ""

# 4a750e8e85e947b1af0e6b2fe292f9e7
#: ../../news.rst:233
msgid "We see several new features in this :term:`recipe`. First, we have::"
msgstr ""

# 7108778ea4034529be895d2600cba545
#: ../../news.rst:237
msgid ""
"This sets the displayed time on the front page of the created ebook to be in"
" the format, ``Day, Day_Number Month, Year``. See :attr:`timefmt "
"<calibre.web.feeds.news.BasicNewsRecipe.timefmt>`."
msgstr ""

# 827d8fc199f04e16bc064c7081b3f32d
#: ../../news.rst:240
msgid ""
"Then we see a group of directives to cleanup the downloaded :term:`HTML`::"
msgstr ""

# 71b019f1959b46e4b4df7d26363f263c
#: ../../news.rst:246
msgid ""
"These remove everything before the first ``<h1>`` tag and everything after "
"the first tag whose id is ``footer``. See :attr:`remove_tags "
"<calibre.web.feeds.news.BasicNewsRecipe.remove_tags>`, "
":attr:`remove_tags_before "
"<calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before>`, "
":attr:`remove_tags_after "
"<calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after>`."
msgstr ""

# 134d6493a84249db94ffe728d17a7820
#: ../../news.rst:248
msgid "The next interesting feature is::"
msgstr ""

# 422573170a82413fb17ea91256869616
#: ../../news.rst:255
msgid ""
"``needs_subscription = True`` tells |app| that this recipe needs a username "
"and password in order to access the content. This causes, |app| to ask for a"
" username and password whenever you try to use this recipe. The code in "
":meth:`calibre.web.feeds.news.BasicNewsRecipe.get_browser` actually does the"
" login into the NYT website. Once logged in, |app| will use the same, logged"
" in, browser instance to fetch all content. See `mechanize "
"<http://wwwsearch.sourceforge.net/mechanize/>`_ to understand the code in "
"``get_browser``."
msgstr ""

# 51af38755c814a479ab4f48a53865387
#: ../../news.rst:257
msgid ""
"The next new feature is the "
":meth:`calibre.web.feeds.news.BasicNewsRecipe.parse_index` method. Its job "
"is to go to http://www.nytimes.com/pages/todayspaper/index.html and fetch "
"the list of articles that appear in *todays* paper. While more complex than "
"simply using :term:`RSS`, the recipe creates an ebook that corresponds very "
"closely to the days paper. ``parse_index`` makes heavy use of `BeautifulSoup"
" <http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ to "
"parse the daily paper webpage. You can also use other, more modern parsers "
"if you dislike BeatifulSoup. calibre comes with `lxml <http://lxml.de/>`_ "
"and `html5lib <https://github.com/html5lib/html5lib-python>`_, which are the"
" recommended parsers. To use them, replace the call to ``index_to_soup()`` "
"with the following::"
msgstr ""

# 6a0bb485140f4f6e8c31cef4e7fc7d60
#: ../../news.rst:278
msgid ""
"The final new feature is the "
":meth:`calibre.web.feeds.news.BasicNewsRecipe.preprocess_html` method. It "
"can be used to perform arbitrary transformations on every downloaded HTML "
"page. Here it is used to bypass the ads that the nytimes shows you before "
"each article."
msgstr ""

# bd025f0d1b0045bf81fced96619d2d53
#: ../../news.rst:281
msgid "Tips for developing new recipes"
msgstr ""

# e840bacbd0d24e34875e949085f0496a
#: ../../news.rst:283
msgid ""
"The best way to develop new recipes is to use the command line interface. "
"Create the recipe using your favorite python editor and save it to a file "
"say :file:`myrecipe.recipe`. The `.recipe` extension is required. You can "
"download content using this recipe with the command::"
msgstr ""

# 739641de3f744df48db7a000b0ec7d14
#: ../../news.rst:287
msgid ""
"The command :command:`ebook-convert` will download all the webpages and save"
" them to the EPUB file :file:`myrecipe.epub`. The :option:`-vv` makes ebook-"
"convert spit out a lot of information about what it is doing. The "
":option:`--test` makes it download only a couple of articles from at most "
"two feeds. In addition, ebook-convert will put the downloaded HTML into the "
"``debug/input`` directory, where ``debug`` is the directory you specified in"
" the :option:`--debug-pipeline` option."
msgstr ""

# 2ce9e5a26a184dea9bec8bd6c483ba08
#: ../../news.rst:289
msgid ""
"Once the download is complete, you can look at the downloaded :term:`HTML` "
"by opening the file :file:`debug/input/index.html` in a browser. Once you're"
" satisfied that the download and preprocessing is happening correctly, you "
"can generate ebooks in different formats as shown below::"
msgstr ""

# 2f5807ef305a41ee90111f2be6ec918b
#: ../../news.rst:296
msgid ""
"If you're satisfied with your recipe, and you feel there is enough demand to"
" justify its inclusion into the set of built-in recipes, post your recipe in"
" the `calibre recipes forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=228>`_ to share it with"
" other calibre users."
msgstr ""

# 7ecddc61ab5946c7a873e6d1a1906ef9
#: ../../news.rst:298
msgid ""
"On OS X, the ebook-convert command will not be available by default. Go to "
"Preferences->Miscellaneous and click the install command line tools button "
"to make it available."
msgstr ""

# fff100f87dc74932be79e6335d1edb29
#: ../../news.rst:302
msgid ":ref:`ebook-convert`"
msgstr ""

# b7d113ea221c40a0b80379338bf9b956
#: ../../news.rst:303
msgid "The command line interface for all ebook conversion."
msgstr ""

# c33bf3e76df84eb7a1ec13525bdd5cd6
#: ../../news.rst:307
msgid "Further reading"
msgstr ""

# 619b8d9bbf66407faa86c6c122ebfd31
#: ../../news.rst:309
msgid ""
"To learn more about writing advanced recipes using some of the facilities, "
"available in ``BasicNewsRecipe`` you should consult the following sources:"
msgstr ""

# 2d2f07fca60048809eba1514defac4a2
#: ../../news.rst:312
msgid ":ref:`API Documentation <news_recipe>`"
msgstr ""

# 9deb24bc311043eeb885418583cc97c0
#: ../../news.rst:312
msgid ""
"Documentation of the ``BasicNewsRecipe`` class and all its important methods"
" and fields."
msgstr ""

# 4c4e5a6e186e450bbc0dcc8b7c331f85
#: ../../news.rst:315
msgid ""
"`BasicNewsRecipe "
"<http://bazaar.launchpad.net/~kovid/calibre/trunk/annotate/head:/src/calibre/web/feeds/news.py>`_"
msgstr ""

# 053e7c93316a4cf3b20972cf9407c38a
#: ../../news.rst:315
msgid "The source code of ``BasicNewsRecipe``"
msgstr ""

# 08e05c4eead14b7cbfb9191a3641e676
#: ../../news.rst:318
msgid ""
"`Built-in recipes "
"<http://bazaar.launchpad.net/~kovid/calibre/trunk/files/head:/recipes/>`_"
msgstr ""

# 4f6a6ab3e77b41ad9dee9147d6bda2bd
#: ../../news.rst:318
msgid "The source code for the built-in recipes that come with |app|"
msgstr ""

# 50e79fd86d2c43fa9d1e879f024ff6ec
#: ../../news.rst:322
msgid ""
"`The calibre recipes forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=228>`_"
msgstr ""

# a4299afc25f04a78a05a7e20ecc55e8a
#: ../../news.rst:321
msgid "Lots of knowledgeable |app| recipe writers hang out here."
msgstr ""

# ddb1c44d4f8d4cdc8aaf45b2edf371af
#: ../../news.rst:325
msgid "API documentation"
msgstr "Dokumentacja API"
