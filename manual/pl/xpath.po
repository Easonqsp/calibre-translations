# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-11 07:55+0530\n"
"PO-Revision-Date: 2014-07-17 09:41+0000\n"
"Last-Translator: Pełna Nazwa\n"
"Language-Team: Polish (http://www.transifex.com/projects/p/calibre/language/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 73abf23694a24cd48763949bb66918c6
#: ../../xpath.rst:6
msgid "XPath Tutorial"
msgstr "Samouczek XPath"

# 35a634f39ce94106accc05322d6fbe61
#: ../../xpath.rst:8
msgid ""
"In this tutorial, you will be given a gentle introduction to `XPath "
"<http://en.wikipedia.org/wiki/XPath>`_, a query language that can be used to"
" select arbitrary parts of `HTML <http://en.wikipedia.org/wiki/HTML>`_ "
"documents in |app|. XPath is a widely used standard, and googling it will "
"yield a ton of information. This tutorial, however, focuses on using XPath "
"for ebook related tasks like finding chapter headings in an unstructured "
"HTML document."
msgstr "Ten samouczek zawiera wprowadzenie do  `XPath <http://en.wikipedia.org/wiki/XPath>`_, języka zapytań, dzięki któremu można w |app| wybrać konkretne elementy dokumentu `HTML <http://en.wikipedia.org/wiki/HTML>`_. XPath jest szeroko stosowanym standardem i można \"wygooglować\" tony informacji na jego temat. Niniejszy samouczek skupia się jednak na wybranych zagadnieniach, związanych z ebookami, takich jak odnajdowanie tytułów rozdziałów z nieustrukturalizowanym dokumencie HTML."

# 40ad264459e84d18b387cd5e0e9963e8
#: ../../xpath.rst:0
msgid "Contents"
msgstr "Spis treści"

# ebaa890b44bc4bf88da020577e9f8804
#: ../../xpath.rst:21
msgid "Selecting by tagname"
msgstr "Wybieranie wg nazwy znacznika"

# 8d36c4e556684f9d93f4660eaaa10be3
#: ../../xpath.rst:23
msgid ""
"The simplest form of selection is to select tags by name. For example, "
"suppose you want to select all the ``<h2>`` tags in a document. The XPath "
"query for this is simply::"
msgstr "Najprostszą formą wyboru jest wyszukanie znacznika wg nazwy. Na przykład przypuśćmy, że chcesz odnaleźć wszystkie znaczniki ``<h2>`` w dokumencie. Zapytanie jest proste::"

# ef1eb51603184d2bb843248e677aa95d
#: ../../xpath.rst:29
msgid ""
"The prefix `//` means *search at any level of the document*. Now suppose you"
" want to search for ``<span>`` tags that are inside ``<a>`` tags. That can "
"be achieved with::"
msgstr "Przedrostek `//` oznacza *wyszukaj na każdym poziomie dokumentu*. A teraz przypuśćmy, że chcesz wybrać tylki te znaczniki ``<span>``, które zawierają znacznik ``<a>``. Można to zrobić tak::"

# 8bdca623339748adb49780bcc6926479
#: ../../xpath.rst:35
msgid ""
"If you want to search for tags at a particular level in the document, change"
" the prefix::"
msgstr "Jeśli chcesz wyszukać znaczniki na określonym poziomie dokumentu, zmień przedrostek::"

# 3e2dfd3117254ad4a33e91a504d1621b
#: ../../xpath.rst:41
msgid ""
"This will match only ``<p>A very short ebook to demonstrate the use of "
"XPath.</p>`` in the `Sample ebook`_ but not any of the other ``<p>`` tags. "
"The ``h:`` prefix in the above examples is needed to match XHTML tags. This "
"is because internally, |app| represents all content as XHTML. In XHTML tags "
"have a *namespace*, and ``h:`` is the namespace prefix for HTML tags."
msgstr "Zostanie dopasowane jedynie ``<p>A very short ebook to demonstrate the use of XPath.</p>`` w `Sample ebook`_, ale nie inne znaczniki ``<p>``. Przedrostek ``h:`` w powyższym przykładzie jest konieczny do wyszukiwania znaczników XHTML ponieważ |app| traktuje całą zawartość jako XHTML. W XHTML znaczniki mają *przestrzeń nazw*, a ``h:`` jest przedrostkiem dla znaczników HTML."

# 8709e7df8bdf48e3bee4618f91578290
#: ../../xpath.rst:47
msgid ""
"Now suppose you want to select both ``<h1>`` and ``<h2>`` tags. To do that, "
"we need a XPath construct called *predicate*. A :dfn:`predicate` is simply a"
" test that is used to select tags. Tests can be arbitrarily powerful and as "
"this tutorial progresses, you will see more powerful examples. A predicate "
"is created by enclosing the test expression in square brackets::"
msgstr "Teraz przypuśćmy, że chcesz wybrać znaczniki ``<h1>`` i ``<h2>``. Do tego potrzebna jest konstrukcja XPath nazywana *predykatem*. :dfn:`predicate` jest po prostu testem, używanym do wybierania znaczników. Test te mają ogromne możliwości i w dalszej części samouczka zobaczysz co można dzięki nim uzyskać. Predykat jest tworzony poprzez umieszczenie wyrażenia testowego w nawiasach kwadratowych::"

# b297bb10a8244977b0e88b3803a4d5a0
#: ../../xpath.rst:55
msgid ""
"There are several new features in this XPath expression. The first is the "
"use of the wildcard ``*``. It means *match any tag*. Now look at the test "
"expression ``name()='h1' or name()='h2'``. :term:`name()` is an example of a"
" *built-in function*. It simply evaluates to the name of the tag. So by "
"using it, we can select tags whose names are either `h1` or `h2`. Note that "
"the :term:`name()` function ignores namespaces so that there is no need for "
"the ``h:`` prefix. XPath has several useful built-in functions. A few more "
"will be introduced in this tutorial."
msgstr "Jest kilka nowych elementów w tym wyrażeniu XPath. Pierszym jest użycie symbolu ``*``. Oznacza on *dopasuj dowolny znacznik*. Teraz popatrzmy na wyrażenie ``name()='h1' or name()='h2'``. :term:`name()` jest przykładem *wbudowanej funkcji*. Zwraca ona po prostu nazwę znacznika. Używając jej możemy więc wybrać znaczniki, których nazwa to `h1` lub `h2`. Funkcja :term:`name()` nie uwzględnia przestrzeni nazw, nie ma więc konieczności użycia przedrostka ``h:``. XPath ma wbudowanych wiele przydatnych funkcji. Kilka z nich poznasz w tym samouczku."

# 831a9a8389154f4bb097f0c717b5911f
#: ../../xpath.rst:64
msgid "Selecting by attributes"
msgstr "Wybieranie wg atrybutów"

# b0114e718476430c80fb97316e8fe120
#: ../../xpath.rst:66
msgid ""
"To select tags based on their attributes, the use of predicates is "
"required::"
msgstr "Aby wybrać znaczniki wg ich atrybutów wymagane jest użycie predykatów::"

# 0faabc6bc73f4613aeed17ad1d7590ac
#: ../../xpath.rst:72
msgid ""
"Here, the ``@`` operator refers to the attributes of the tag. You can use "
"some of the `XPath built-in functions`_ to perform more sophisticated "
"matching on attribute values."
msgstr "W tym przypadku operator ``@`` odnosi się do atrybutów znacznika. Można ponadto użyć niektórych `funkcji wbudowanych XPath`_, aby dokładniej dopasować wartości atrybutów."

# f7e246e448014abcb0e97f71685320fe
#: ../../xpath.rst:78
msgid "Selecting by tag content"
msgstr "Wybieranie po zawartości znacznika"

# e0b15ba01f35457798c9654f67572003
#: ../../xpath.rst:80
msgid ""
"Using XPath, you can even select tags based on the text they contain. The "
"best way to do this is to use the power of *regular expressions* via the "
"built-in function :term:`re:test()`::"
msgstr "Przy użyciu XPath możesz nawet wybrać znaczniki, bazując na tekście, który zawierają. Najlepszym na to sposobem jest użycie *wyrażeń regularnych* poprzez wbudowaną funkcję \"term:`re:test()`::"

# 4729116a64df4243828d9f729664822d
#: ../../xpath.rst:86
msgid ""
"Here the ``.`` operator refers to the contents of the tag, just as the ``@``"
" operator referred to its attributes."
msgstr "W tym przypadku operator ``.`` odnosi się do zawartości znacznika, tak jak operator ``@`` odnosił się do atrybutów."

# 2e4990e4d0af4f77815abc26fbdea59a
#: ../../xpath.rst:91
msgid "Sample ebook"
msgstr "Przykładowy ebook"

# be1a569a1b0f471088b59502f8fa526e
#: ../../xpath.rst:97
msgid "XPath built-in functions"
msgstr "Wbudowane funkcje XPath"

# 65eb04e821c041eea596bcf9d2a3eb37
#: ../../xpath.rst:100
msgid "name()"
msgstr "name()"

# 6ca0989bcb644f4dbd8fc724fd0cf9c0
#: ../../xpath.rst:102
msgid "The name of the current tag."
msgstr "Nazwa aktualnie wybranego znacznika"

# c269e017bbdf4c7183e2e2f7b959a139
#: ../../xpath.rst:103
msgid "contains()"
msgstr "contains()"

# ec57d16fb39b4aa1a957523c0d618d58
#: ../../xpath.rst:105
msgid "``contains(s1, s2)`` returns `true` if s1 contains s2."
msgstr "``contains(s1, s2)`` zwraca `true` jeśli s1 zawiera s2."

# 67f8cae39bc0435ab2302281cee2552a
#: ../../xpath.rst:106
msgid "re:test()"
msgstr "re:test()"

# a3c738b640494d8ba6bc4566e4773125
#: ../../xpath.rst:108
msgid ""
"``re:test(src, pattern, flags)`` returns `true` if the string `src` matches "
"the regular expression `pattern`. A particularly useful flag is ``i``, it "
"makes matching case insensitive. A good primer on the syntax for regular "
"expressions can be found at `regexp syntax <http://docs.python.org/lib/re-"
"syntax.html>`_"
msgstr "``re:test(src, pattern, flags)`` zwraca `true` jeśli ciąg `src` pasuje do wyrażenia regularnego `pattern`. Szczególnie przydatną opcją jest ``i``, która powoduje, że nie jest uwzględniana wielkość liter. Dobrym podręcznikiem wyrażeń regularnych jest  `składnia wyrażeń regularnych <http://docs.python.org/lib/re-syntax.html>`_"
