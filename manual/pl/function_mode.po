# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Piotr Parafiniuk <koliberek@gmail.com>, 2014
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-26 14:20+0530\n"
"PO-Revision-Date: 2014-11-26 17:41+0000\n"
"Last-Translator: Piotr Parafiniuk <koliberek@gmail.com>\n"
"Language-Team: Polish (http://www.transifex.com/projects/p/calibre/language/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 33c280086d434c6991646203b7b794e7
#: ../../home/kovid/work/calibre/manual/function_mode.rst:2
msgid "Function Mode for Search & Replace in the Editor"
msgstr "Tryb funkcji przy wyszukiwaniu i zamianie w edytorze"

# 65e9a3de34864a819bf86b6297c68555
#: ../../home/kovid/work/calibre/manual/function_mode.rst:4
msgid ""
"The Search & Replace tool in the editor support a *function mode*. In this "
"mode, you can combine regular expressions (see :doc:`regexp`) with "
"arbitrarily powerful python functions to do all sorts of advanced text "
"processing."
msgstr ""

# 4fcc3210d17b449db2eccd77f65c80ac
#: ../../home/kovid/work/calibre/manual/function_mode.rst:9
msgid ""
"In the standard *regexp* mode for search and replace, you specify both a "
"regular expression to search for as well as a template that is used to "
"replace all found matches. In function mode, instead of using a fixed "
"template, you specify an arbitrary function, in the `python programming "
"language <https://docs.python.org/2.7/>`_. This allows you to do lots of "
"things that are not possible with simple templates."
msgstr ""

# ca3415fbf64b460ea426f1bb1f2c02be
#: ../../home/kovid/work/calibre/manual/function_mode.rst:16
msgid ""
"Techniques for using function mode and the syntax will be described by means"
" of examples, showing you how to create functions to perform progressively "
"more complex tasks."
msgstr ""

# 475049e767e0438a9f0738d34730cc17
#: ../../home/kovid/work/calibre/manual/function_mode.rst:26
msgid "Automatically fixing the case of headings in the document"
msgstr ""

# 71b6da2fe5f043539c2d50fbae3117bb
#: ../../home/kovid/work/calibre/manual/function_mode.rst:28
msgid ""
"Here, we will leverage one of the builtin functions in the editor to "
"automatically change the case of all text inside heading tags to title "
"case::"
msgstr ""

# 93d91ce4727146389f5013104100db0f
#: ../../home/kovid/work/calibre/manual/function_mode.rst:33
msgid ""
"For the function, simply choose the :guilabel:`Title-case text` builtin "
"function. The will change titles that look like: ``<h1>some TITLE</h1>`` to "
"``<h1>Some Title</h1>``."
msgstr ""

# 379c2f86df7f44bc8a08f5979e4b9ca7
#: ../../home/kovid/work/calibre/manual/function_mode.rst:39
msgid "Your first custom function - smartening hyphens"
msgstr ""

# e625f7b7ced149c9a9fdc90368702345
#: ../../home/kovid/work/calibre/manual/function_mode.rst:41
msgid ""
"The real power of function mode comes from being able to create your own "
"functions to process text in arbitrary ways. The Smarten Punctuation tool in"
" the editor leaves individual hyphens alone, so you can use the this "
"function to replace them with em-dashes."
msgstr ""

# 94acf07a046146358dab7846b129c8a0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:46
msgid ""
"To create a new function, simply click the Create/Edit button to create a "
"new function and copy the python code from below."
msgstr ""

# 7e84cd8a5cf04d3aa35de4643f04a154
#: ../../home/kovid/work/calibre/manual/function_mode.rst:54
msgid ""
"Every Search & Replace custom function must have a unique name and consist "
"of a python function named replace, that accepts all the arguments shown "
"above. For the moment, we wont worry about all the different arguments to "
"``replace()`` function. Just focus on the ``match`` argument. It represents "
"a match when running a search and replace. Its full documentation in "
"available `here <https://docs.python.org/2.7/library/re.html#match-"
"objects>`_. ``match.group()`` simply returns all the matched text and all we"
" do is replace hyphens in that text with em-dashes, first replacing double "
"hyphens and then single hyphens."
msgstr ""

# aff7d6d575eb4fa78ce47abf4680c7e0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:64
msgid "Use this function with the find regular expression::"
msgstr ""

# e9c4269e9a4147e2bc96de111848a4df
#: ../../home/kovid/work/calibre/manual/function_mode.rst:68
msgid ""
"And it will replace all hyphens with em-dashes, but only in actual text and "
"not inside HTML tag definitions."
msgstr ""

# 04b3e6fe20c1480e946ff2aeac9d2771
#: ../../home/kovid/work/calibre/manual/function_mode.rst:73
msgid ""
"The power of function mode - using a spelling dictionary to fix mis-"
"hyphenated words"
msgstr ""

# 509e96e37a0a422eabbffdac94f34953
#: ../../home/kovid/work/calibre/manual/function_mode.rst:75
msgid ""
"Often, ebooks created from scans of printed books contain mis-hyphenated "
"words -- words that were split at the end of the line on the printed page. "
"We will write a simple function to automatically find and fix such words."
msgstr ""

# ba6e5f34418e49198d7f9d1db260646e
#: ../../home/kovid/work/calibre/manual/function_mode.rst:100
msgid "Use this function with the same find expression as before, namely::"
msgstr ""

# 8e5ba93179754f91a3f364e73bd6530f
#: ../../home/kovid/work/calibre/manual/function_mode.rst:104
msgid ""
"And it will magically fix all mis-hyphenated words in the text of the book. "
"The main trick is to use one of the useful extra arguments to the replace "
"function, ``dictionaries``.  This refers to the dictionaries the editor "
"itself uses to spell check text in the book. What this function does is look"
" for words separated by a hyphen, remove the hyphen and check if the "
"dictionary recognizes the composite word, if it does, the original words are"
" replaced by the hyphen free composite word."
msgstr ""

# 4f03dd9763e44b57ab506c1e498b9ffd
#: ../../home/kovid/work/calibre/manual/function_mode.rst:112
msgid ""
"Note that one limitation of this technique is it will only work for mono-"
"lingual books, because, by default, ``dictionaries.recognized()`` uses the "
"main language of the book."
msgstr ""

# 6a60b214c4e8488a962c0b254994692d
#: ../../home/kovid/work/calibre/manual/function_mode.rst:118
msgid "Auto numbering sections"
msgstr ""

# 2f605f331cc74d4ba548b67e3bd4ca5a
#: ../../home/kovid/work/calibre/manual/function_mode.rst:120
msgid ""
"Now we will see something a little different. Suppose your HTML file has "
"many sections, each with a heading in an :code:`<h2>` tag that looks like "
":code:`<h2>Some text</h2>`. You can create a custom function that will "
"automatically number these headings with consecutive section numbers, so "
"that they look like :code:`<h2>1. Some text</h2>`."
msgstr ""

# c121966260e644409dd932f687679858
#: ../../home/kovid/work/calibre/manual/function_mode.rst:136
msgid "Use it with the find expression::"
msgstr ""

# bbb700d6178b4c67abb04e4e69cad0e0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:140
msgid ""
"Place the cursor at the top of the file and click :guilabel:`Replace all`."
msgstr ""

# 4c56fef43e1e464dbe100255d29c2755
#: ../../home/kovid/work/calibre/manual/function_mode.rst:142
msgid ""
"This function uses another of the useful extra arguments to ``replace()``: "
"the ``number`` argument. When doing a :guilabel:`Replace All` number is "
"automatically incremented for every successive match."
msgstr ""

# fbc4fc5bf47d4a429bed819c52064c56
#: ../../home/kovid/work/calibre/manual/function_mode.rst:146
msgid ""
"Another new feature is the use of ``replace.file_order`` -- setting that to "
"``'spine'`` means that if this search is run on multiple HTML files, the "
"files are processed in the order in which they appear in the book."
msgstr ""

# 2326ec83533342058c39f51e40b92608
#: ../../home/kovid/work/calibre/manual/function_mode.rst:152
msgid "Auto create a Table of Contents"
msgstr ""

# 51558aa134fd4a44bf33dc37b6f67042
#: ../../home/kovid/work/calibre/manual/function_mode.rst:154
msgid ""
"Finally, lets try something a little more ambitious. Suppose your book has "
"headings in ``h1`` and ``h2`` tags that look like ``<h1 id=\"someid\">Some "
"Text</h1>``. We will auto-generate an HTML Table of Contents based on these "
"headings. Create the custom function below:"
msgstr ""

# c0549e238fff4885b12397748104a742
#: ../../home/kovid/work/calibre/manual/function_mode.rst:197
msgid "And use it with the find expression::"
msgstr ""

# 9fdff7bb623f43c297792fb1246c14d8
#: ../../home/kovid/work/calibre/manual/function_mode.rst:201
msgid ""
"Run the search on :guilabel:`All text files` and at the end of the search, a"
" window will popup with \"Debug Output from your function\" which will have "
"the HTML Table of Contents, ready to be pasted into :file:`toc.html`."
msgstr ""

# be961fde63b84a9c901ebe14427ce0bd
#: ../../home/kovid/work/calibre/manual/function_mode.rst:205
msgid ""
"The function above is heavily commented, so it should be easy to follow. The"
" key new feature is the use of another useful extra argument to the "
"``replace()`` function, the ``data`` object. The ``data`` object is a python"
" *dict* that persists between all successive invocations of ``replace()`` "
"during a single :guilabel:`Replace All` operation."
msgstr ""

# 786dde76a9a84bbf9ab5cbcae51ec4bb
#: ../../home/kovid/work/calibre/manual/function_mode.rst:211
msgid ""
"Another new feature is the use of ``call_after_last_match`` -- setting that "
"to ``True`` on the ``replace()`` function means that the editor will call "
"``replace()`` one extra time after all matches have been found. For this "
"extra call, the match object will be ``None``."
msgstr ""

# 22de74ecbbc54ff5b09bf9187e9ec10f
#: ../../home/kovid/work/calibre/manual/function_mode.rst:216
msgid ""
"This was just a demonstration to show you the power of function mode, if you"
" really needed to generate a Table of Contents from headings in your book, "
"you would be better off using the dedicated Table of Contents tool in "
":guilabel:`Tools->Table of Contents`."
msgstr ""

# 9790cb8c4ac142739e432aac97d5e253
#: ../../home/kovid/work/calibre/manual/function_mode.rst:222
msgid "The API for the function mode"
msgstr ""

# 4581fbf82f89498ca785f3fb6786a4c1
#: ../../home/kovid/work/calibre/manual/function_mode.rst:224
msgid ""
"All function mode functions must be python functions named replace, with the"
" following signature::"
msgstr ""

# 48b7d103fdd64c37ae99637fdd03eb69
#: ../../home/kovid/work/calibre/manual/function_mode.rst:230
msgid ""
"When a find/replace is run, for every match that is found, the ``replace()``"
" function will be called, it must return the replacement string for that "
"match. If no replacements are to be done, it should return ``match.group()``"
" which is the original string. The various arguments to the ``replace()`` "
"function are documented below."
msgstr ""

# 5c944047ec9e4c9c8ecf52083a9cec04
#: ../../home/kovid/work/calibre/manual/function_mode.rst:237
msgid "The ``match`` argument"
msgstr ""

# 1f2585ed5f4f4aa6971ec2951fda5830
#: ../../home/kovid/work/calibre/manual/function_mode.rst:239
msgid ""
"The ``match`` argument represents the currently found match. It is a `python"
" Match object <https://docs.python.org/2.7/library/re.html#match-objects>`_."
" It's most useful method is ``group()`` which can be used to get the matched"
" text corresponding to individual capture groups in the search regular "
"expression."
msgstr ""

# 680601a76b74422f90a3d2b69f66764d
#: ../../home/kovid/work/calibre/manual/function_mode.rst:246
msgid "The ``number`` argument"
msgstr ""

# 0504119165e24a0dba1c44a245950fc0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:248
msgid ""
"The ``number`` argument is the number of the current match. When you run "
":guilabel:`Replace All`, every successive match will cause ``replace()`` to "
"be called with an increasing number. The first match has number 1."
msgstr ""

# 3845ade091cd4296a3d2e891b6145722
#: ../../home/kovid/work/calibre/manual/function_mode.rst:253
msgid "The ``file_name`` argument"
msgstr ""

# 8a639fc1b0bb4e448df32ad0f44896dd
#: ../../home/kovid/work/calibre/manual/function_mode.rst:255
msgid ""
"This is the filename of the file in which the current match was found. When "
"searching inside marked text, the ``file_name`` is empty. The ``file_name`` "
"is in canonical form, a path relative to the root of the book, using ``/`` "
"as the path separator."
msgstr ""

# 06a596967b2545d9a93be63813a3380d
#: ../../home/kovid/work/calibre/manual/function_mode.rst:261
msgid "The ``metadata`` argument"
msgstr ""

# 8639966152bc4bc28be7f1ffe98a4d23
#: ../../home/kovid/work/calibre/manual/function_mode.rst:263
msgid ""
"This represents the metadata of the current book, such as title, authors, "
"language, etc. It is an object of class "
":class:`calibre.ebooks.metadata.book.base.Metadata`. Useful attributes "
"include, ``title``, ``authors`` (a list of authors) and ``language`` (the "
"language code)."
msgstr ""

# 69370c56222344d596bd6e96b3339d6f
#: ../../home/kovid/work/calibre/manual/function_mode.rst:269
msgid "The ``dictionaries`` argument"
msgstr ""

# d8782e66599f4741b8170b66458e1b4a
#: ../../home/kovid/work/calibre/manual/function_mode.rst:271
msgid ""
"This represents the collection of dictionaries used for spell checking the "
"current book. It's most useful method is ``dictionaries.recognized(word)`` "
"which will return ``True`` if the passed in word is recognized by the "
"dictionary for the current book's language."
msgstr ""

# 830a5b410dd1466ab3ccfc8ec80ae50c
#: ../../home/kovid/work/calibre/manual/function_mode.rst:277
msgid "The ``data`` argument"
msgstr ""

# 1a05a3c05bc8495b8a5faa1ef66ef9a7
#: ../../home/kovid/work/calibre/manual/function_mode.rst:279
msgid ""
"This a simple python ``dict``. When you run :guilabel:`Replace All`, every "
"successive match will cause ``replace()`` to be called with the same "
"``dict`` as data. You can thus use it to store arbitrary data between "
"invocations of ``replace()`` during a :guilabel:`Replace All` operation."
msgstr ""

# 82feff82aa834778bc5d563eb9a20b7e
#: ../../home/kovid/work/calibre/manual/function_mode.rst:286
msgid "The ``functions`` argument"
msgstr ""

# efd4f44fd30d4b4b8688227413baa5c9
#: ../../home/kovid/work/calibre/manual/function_mode.rst:288
msgid ""
"The ``functions`` argument gives you access to all other user defined "
"functions. This is useful for code re-use. You can define utility functions "
"in one place and re-use them in all your other functions. For example, "
"suppose you create a function name ``My Function`` like this:"
msgstr ""

# fc9cd15412134b93be80e9503df71643
#: ../../home/kovid/work/calibre/manual/function_mode.rst:301
msgid ""
"Then, in another function, you can access the ``utility()`` function like "
"this:"
msgstr ""

# 30db6d340bad4b8aaf2e443733e8bba5
#: ../../home/kovid/work/calibre/manual/function_mode.rst:309
msgid ""
"You can also use the functions object to store persistent data, that can be "
"re-used by other functions. For example, you could have one function that "
"when run with :guilabel:`Replace All` collects some data and another "
"function that uses it when it is run afterwards. Consider the following two "
"functions:"
msgstr ""

# e3e325644f7f4be3b2b8b530b21f4b8d
#: ../../home/kovid/work/calibre/manual/function_mode.rst:329
msgid "Debugging your functions"
msgstr ""

# 13bc2d894d8544a4b97134b7d8c2eab7
#: ../../home/kovid/work/calibre/manual/function_mode.rst:331
msgid ""
"You can debug the functions you create by using the standard ``print()`` "
"function from python. The output of print will be displayed in a popup "
"window after the Find/replace has completed. You saw an example of using "
"``print()`` to output an entire table of contents above."
msgstr ""

# dbf47275619e4d7c839ccb5c23bb96d0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:337
msgid "Choose file order when running on multiple HTML files"
msgstr ""

# d84f97c0d1aa437c8f8c4340edab29ad
#: ../../home/kovid/work/calibre/manual/function_mode.rst:339
msgid ""
"When you run a :guilabel:`Replace All` on multiple HTML files, the order in "
"which the files are processes depends on what files you have open for "
"editing. You can force the search to process files in the order in which the"
" appear by setting the ``file_order`` attribute on your function, like this:"
msgstr ""

# 88bf721a9d604d3d85a18a224262f01a
#: ../../home/kovid/work/calibre/manual/function_mode.rst:351
msgid ""
"``file_order`` accepts two values, ``spine`` and ``spine-reverse`` which "
"cause the search to process multiple files in the order they appear in the "
"book, either forwards or backwards, respectively."
msgstr ""

# 4f488ebd7c8a444da88c5930ad6d501b
#: ../../home/kovid/work/calibre/manual/function_mode.rst:356
msgid ""
"Having your function called an extra time after the last match is found"
msgstr ""

# 1bcb98415e0a4da89defe097d3dfc2a3
#: ../../home/kovid/work/calibre/manual/function_mode.rst:358
msgid ""
"Sometimes, as in the auto generate table of contents example above, it is "
"useful to have your function called an extra time after the last match is "
"found. You can do this by setting the ``call_after_last_match`` attribute on"
" your function, like this:"
msgstr ""
