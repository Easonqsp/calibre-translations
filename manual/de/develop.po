# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Ettore Atalan <atalanttore@googlemail.com>, 2014
# Max <mail@max-vogl.de>, 2014
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-25 09:34+0530\n"
"PO-Revision-Date: 2014-07-25 00:11+0000\n"
"Last-Translator: Max <mail@max-vogl.de>\n"
"Language-Team: German (http://www.transifex.com/projects/p/calibre/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 1a0c5fd1b6ee4536aec2bcde0753d4a6
#: ../../develop.rst:6
msgid "Setting up a |app| development environment"
msgstr ""

# ecf76a735a4e426cbe33026344f92d4b
#: ../../develop.rst:8
msgid ""
"|app| is completely open source, licensed under the `GNU GPL v3 "
"<http://www.gnu.org/copyleft/gpl.html>`_. This means that you are free to "
"download and modify the program to your heart's content. In this section, "
"you will learn how to get a |app| development environment set up on the "
"operating system of your choice. |app| is written primarily in `Python "
"<http://www.python.org>`_ with some C/C++ code for speed and system "
"interfacing. Note that |app| is not compatible with Python 3 and requires at"
" least Python 2.7."
msgstr ""

# c7bd9e9764764a48b0ba5f13a8d215a8
#: ../../develop.rst:0
msgid "Contents"
msgstr "Inhaltsverzeichnis"

# 4b88ed331d90435f8cbca085308fe8ca
#: ../../develop.rst:19
msgid "Design philosophy"
msgstr "Design-Philosophie"

# 7ce95a8956244a2e8653289cff1a377e
#: ../../develop.rst:21
msgid ""
"|app| has its roots in the Unix world, which means that its design is highly"
" modular. The modules interact with each other via well defined interfaces. "
"This makes adding new features and fixing bugs in |app| very easy, resulting"
" in a frenetic pace of development. Because of its roots, |app| has a "
"comprehensive command line interface for all its functions, documented in "
":ref:`cli`."
msgstr ""

# 1e291363ac824d1da70a39a20bb581e9
#: ../../develop.rst:26
msgid ""
"The modular design of |app| is expressed via ``Plugins``. There is a "
":ref:`tutorial <customize>` on writing |app| plugins. For example, adding "
"support for a new device to |app| typically involves writing less than a 100"
" lines of code in the form of a device driver plugin. You can browse the "
"`built-in drivers "
"<http://bazaar.launchpad.net/%7Ekovid/calibre/trunk/files/head%3A/src/calibre/devices/>`_."
" Similarly, adding support for new conversion formats involves writing "
"input/output format plugins. Another example of the modular design is the "
":ref:`recipe system <news>` for fetching news. For more examples of plugins "
"designed to add features to |app|, see the `plugin index "
"<http://www.mobileread.com/forums/showthread.php?p=1362767#post1362767>`_."
msgstr ""

# 8b475fb9823c40af89f273dea6311827
#: ../../develop.rst:36
msgid "Code layout"
msgstr "Code-Layout"

# 455f3c294b4d4d378461bca89faaceaf
#: ../../develop.rst:38
msgid ""
"All the |app| python code is in the ``calibre`` package. This package "
"contains the following main sub-packages"
msgstr ""

# 3a1bfd982824486199fd97e4836d6f8e
#: ../../develop.rst:40
msgid ""
"devices - All the device drivers. Just look through some of the built-in "
"drivers to get an idea for how they work."
msgstr ""

# 1ac53ff564f24d0b84e36f41fc9ef90c
#: ../../develop.rst:42
msgid ""
"For details, see: ``devices.interface`` which defines the interface "
"supported by device drivers and ``devices.usbms`` which defines a generic "
"driver that connects to a USBMS device. All USBMS based drivers in |app| "
"inherit from it."
msgstr ""

# 8e9a9a48c1a9420da25cc54c736c0344
#: ../../develop.rst:45
msgid ""
"ebooks  - All the ebook conversion/metadata code. A good starting point is "
"``calibre.ebooks.conversion.cli`` which is the module powering the :command"
":`ebook-convert` command. The conversion process is controlled via "
"``conversion.plumber``. The format independent code is all in ``ebooks.oeb``"
" and the format dependent code is in ``ebooks.format_name``."
msgstr ""

# a641df5e1a2b481f987f9432d43c2345
#: ../../develop.rst:49
msgid ""
"Metadata reading, writing, and downloading is all in ``ebooks.metadata``"
msgstr ""

# 380140fbcf6142828684d6b5ceb51455
#: ../../develop.rst:50
msgid ""
"Conversion happens in a pipeline, for the structure of the pipeline, see "
":ref:`conversion-introduction`. The pipeline consists of an input plugin, "
"various transforms and an output plugin. The code that constructs and drives"
" the pipeline is in :file:`plumber.py`. The pipeline works on a "
"representation of an ebook that is like an unzipped epub, with manifest, "
"spine, toc, guide, html content, etc. The class that manages this "
"representation is OEBBook in ``ebooks.oeb.base``. The various "
"transformations that are applied to the book during conversions live in "
":file:`oeb/transforms/*.py`. And the input and output plugins live in "
":file:`conversion/plugins/*.py`."
msgstr ""

# 558a76e52882409e8928fe05e067b8f2
#: ../../develop.rst:60
msgid ""
"Ebook editing happens using a different container object. It is documented "
"in :ref:`polish_api`."
msgstr ""

# 8fe56a601963479b84f3278e0e30a21d
#: ../../develop.rst:63
msgid ""
"db - The database back-end. See :ref:`db_api` for the interface to the |app|"
" library."
msgstr ""

# a736d133a8d544da88647bfe53a5322b
#: ../../develop.rst:65
msgid "content server: ``library.server`` is the |app| Content Server."
msgstr ""

# f96ffe9c6c4844fcb5ea6e804d7be766
#: ../../develop.rst:67
msgid ""
"gui2 - The Graphical User Interface. GUI initialization happens in "
"``gui2.main`` and ``gui2.ui``. The ebook-viewer is in ``gui2.viewer``. The "
"ebook editor is in ``gui2.tweak_book``."
msgstr ""

# 6dd48d4b28244f09bc1ea8518157bc11
#: ../../develop.rst:69
msgid ""
"If you want to locate the entry points for all the various |app| "
"executables, look at the ``entry_points`` structure in `linux.py "
"<https://github.com/kovidgoyal/calibre/blob/master/src/calibre/linux.py>`_."
msgstr ""

# 5630c136637b4229a2be3529c4d88129
#: ../../develop.rst:73
msgid ""
"If you need help understanding the code, post in the `development forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=240>`_ and you will "
"most likely get help from one of |app|'s many developers."
msgstr ""

# 7254858b9acb450699f05641525de6c4
#: ../../develop.rst:77
msgid "Getting the code"
msgstr "Erhalte den Code"

# de7d7b65784b49cbb795a3c2937f3b05
#: ../../develop.rst:79
msgid ""
"You can get the |app| source code in two ways, using a version control "
"system or directly downloading a `tarball <http://status.calibre-"
"ebook.com/dist/src>`_."
msgstr ""

# 0dd2c03c926b459eab609e1f914dc91d
#: ../../develop.rst:82
msgid ""
"|app| uses `Git <http://www.git-scm.com/>`_, a distributed version control "
"system. Git is available on all the platforms |app| supports.  After "
"installing Git, you can get the |app| source code with the command::"
msgstr ""

# 25c0a4fa6c0a4d5096ea268985cb3b42
#: ../../develop.rst:88
msgid ""
"On Windows you will need the complete path name, that will be something like"
" :file:`C:\\\\Program Files\\\\Git\\\\git.exe`."
msgstr ""

# c977d9bdb4c049dd8082461f84ead356
#: ../../develop.rst:90
msgid ""
"|app| is a very large project with a very long source control history, so "
"the above can take a while (10mins to an hour depending on your internet "
"speed)."
msgstr ""

# 8090f5105dfc406189a489323dbdfad8
#: ../../develop.rst:93
msgid ""
"If you want to get the code faster, the sourcecode for the latest release is"
" always available as an `archive <http://status.calibre-"
"ebook.com/dist/src>`_."
msgstr ""

# 12367704176e42f09ac090808a9ede5f
#: ../../develop.rst:96
msgid "To update a branch to the latest code, use the command::"
msgstr ""

# d21402dd91ba4e9e85b8a71595e6d5e3
#: ../../develop.rst:101
msgid "Submitting your changes to be included"
msgstr ""

# 88f6b62035bb4770898209233070997b
#: ../../develop.rst:103
msgid ""
"If you only plan to make a few small changes, you can make your changes and "
"create a \"merge directive\" which you can then attach to a ticket in the "
"|app| `bug tracker <https://bugs.launchpad.net/calibre>`_. To do this, make "
"your changes, then run::"
msgstr ""

# e54db739d945450a9643b3392c1a798e
#: ../../develop.rst:111
msgid ""
"This will create a :file:`my-changes` file in the current directory, simply "
"attach that to a ticket on the |app| `bug tracker "
"<https://bugs.launchpad.net/calibre>`_. Note that this will include *all* "
"the commits you have made. If you only want to send some commits, you have "
"to change ``origin/master`` above. To send only the last commit, use::"
msgstr ""

# 1cc62f0aed75418298c04fcac2b42a8c
#: ../../develop.rst:119
msgid ""
"To send the last *n* commits, replace *1* with *n*, for example, for the "
"last 3 commits::"
msgstr ""

# 4d42433ac7424212bce377a293ad3119
#: ../../develop.rst:124
msgid "Be careful to not include merges when using ``HEAD~n``."
msgstr ""

# 89800692cc214b31bedc8d80972e88d6
#: ../../develop.rst:126
msgid ""
"If you plan to do a lot of development on |app|, then the best method is to "
"create a `GitHub <http://github.com>`_ account. Below is a basic guide to "
"setting up your own fork of calibre in a way that will allow you to submit "
"pull requests for inclusion into the main |app| repository:"
msgstr ""

# 6c2a639299ab4fa7b85e5ef5a15a5373
#: ../../develop.rst:131
msgid ""
"Setup git on your machine as described in this article: `Setup Git "
"<https://help.github.com/articles/set-up-git>`_"
msgstr ""

# 3d0aac620d6c4f7ebafdd6bb05933fb5
#: ../../develop.rst:132
msgid ""
"Setup ssh keys for authentication to GitHub, as described here: `Generating "
"SSH keys <https://help.github.com/articles/generating-ssh-keys>`_"
msgstr ""

# 6ffabb20c6f14ea6b527ea52196bbd5c
#: ../../develop.rst:133
msgid ""
"Go to https://github.com/kovidgoyal/calibre and click the :guilabel:`Fork` "
"button."
msgstr "Gehe auf https://github.com/kovidgoyal/calibre und klicke den :guilabel:`Fork` Button."

# a088fa78670b4b82bd03ba340cec743d
#: ../../develop.rst:134
msgid "In a Terminal do::"
msgstr ""

# d3dc0a49be314fba953a5db246851c6e
#: ../../develop.rst:138
msgid ""
"Replace <username> above with your github username. That will get your fork "
"checked out locally."
msgstr ""

# 7ac8cfdc85c541368a7e20227b4c60de
#: ../../develop.rst:139
msgid ""
"You can make changes and commit them whenever you like. When you are ready "
"to have your work merged, do a::"
msgstr ""

# fe6e69ba2b6e4f30b987fa2f82c91bb0
#: ../../develop.rst:143
msgid ""
"and go to ``https://github.com/<username>/calibre`` and click the "
":guilabel:`Pull Request` button to generate a pull request that can be "
"merged."
msgstr ""

# ad772c67c23946c88f0b0a01a15e98e7
#: ../../develop.rst:144
msgid ""
"You can update your local copy with code from the main repo at any time by "
"doing::"
msgstr ""

# 1ba8ffbc649348a4a02c7dbb41f53ed5
#: ../../develop.rst:149
msgid ""
"You should also keep an eye on the |app| `development forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=240>`_. Before making "
"major changes, you should discuss them in the forum or contact Kovid "
"directly (his email address is all over the source code)."
msgstr ""

# e004455f13734f0ba57172d2946a5398
#: ../../develop.rst:155
msgid "Windows development environment"
msgstr "Windows-Entwicklungsumgebung"

# 585760972e46443e985ea888df869258
# 37fc7ab35222408b8fc51d7150ba1737
# 8798b6edbe684261a646326bfea0d6b0
#: ../../develop.rst:157 ../../develop.rst:188 ../../develop.rst:220
msgid "You must also get the |app| source code separately as described above."
msgstr ""

# 2ab36da2799246cd836d6f6f036e0620
#: ../../develop.rst:159
msgid ""
"Install |app| normally, using the Windows installer. Then open a Command "
"Prompt and change to the previously checked out |app| code directory. For "
"example::"
msgstr ""

# df2586b9789649cd8558330400d45fde
# 0f38878c01384789944e3000e7c8d164
#: ../../develop.rst:164 ../../develop.rst:232
msgid ""
"calibre is the directory that contains the src and resources sub-"
"directories."
msgstr ""

# a6038287e7414ff6a37d007596ea8fb0
#: ../../develop.rst:166
msgid ""
"The next step is to set the environment variable ``CALIBRE_DEVELOP_FROM`` to"
" the absolute path of the src directory. So, following the example above, it"
" would be ``C:\\Users\\kovid\\work\\calibre\\src``. `Here is a short guide "
"<http://docs.python.org/using/windows.html#excursus-setting-environment-"
"variables>`_ to setting environment variables on Windows."
msgstr ""

# 50303ff311604b24b3582628c050be36
#: ../../develop.rst:171
msgid ""
"Once you have set the environment variable, open a new command prompt and "
"check that it was correctly set by using the command::"
msgstr ""

# eac467561b23406d86207473ec283d6b
# 9d1827ac93574bcea9139a6f224d0009
#: ../../develop.rst:176 ../../develop.rst:243
msgid ""
"Setting this environment variable means that |app| will now load all its "
"Python code from the specified location."
msgstr ""

# c474201586954c68b6f05b0e29a3ae12
#: ../../develop.rst:178
msgid ""
"That's it! You are now ready to start hacking on the |app| code. For "
"example, open the file :file:`src\\\\calibre\\\\__init__.py` in your "
"favorite editor and add the line::"
msgstr ""

# aa138014c92f42a6aceac7a0d6cadd02
# a33c0992028b41e2a7b7f68a9c6bd0ed
#: ../../develop.rst:183 ../../develop.rst:250
msgid ""
"near the top of the file. Now run the command :command:`calibredb`. The very"
" first line of output should be ``Hello, world!``."
msgstr ""

# 4d401de0a5aa46788dfa62866693e581
#: ../../develop.rst:186
msgid "OS X development environment"
msgstr "OS X-Entwicklungsumgebung"

# 0d47a8b97617436286ceaa910fde94e6
#: ../../develop.rst:190
msgid ""
"Install |app| normally using the provided .dmg. Then open a Terminal and "
"change to the previously checked out |app| code directory, for example::"
msgstr ""

# c2d806ee00ef4c27b24b73c8701325c5
#: ../../develop.rst:195
msgid ""
"calibre is the directory that contains the src and resources sub-"
"directories. Ensure you have installed the |app| commandline tools via "
":guilabel:`Preferences->Advanced->Miscellaneous` in the |app| GUI."
msgstr ""

# 59fcbee79d0d4308b70d905b157739de
#: ../../develop.rst:197
msgid ""
"The next step is to create a bash script that will set the environment "
"variable ``CALIBRE_DEVELOP_FROM`` to the absolute path of the src directory "
"when running calibre in debug mode."
msgstr ""

# 6b3a52798ce6492498a33b5c46f3ab75
#: ../../develop.rst:199
msgid "Create a plain text file::"
msgstr ""

# 30278aac91ca41ae957441faa3cf8d11
#: ../../develop.rst:205
msgid ""
"Save this file as ``/usr/bin/calibre-develop``, then set its permissions so "
"that it can be executed::"
msgstr ""

# a4513f0d03764f9e95f570bb6c1f24bb
#: ../../develop.rst:209
msgid "Once you have done this, run::"
msgstr ""

# 8c3fa6f412d8453a94f9e1592beef817
#: ../../develop.rst:213
msgid ""
"You should see some diagnostic information in the Terminal window as calibre"
" starts up, and you should see an asterisk after the version number in the "
"GUI window, indicating that you are running from source."
msgstr ""

# 37911ddc41074342803b399c2b8aa558
#: ../../develop.rst:218
msgid "Linux development environment"
msgstr "Linux-Entwicklungsumgebung"

# cd20311c1807486283661121d6d79157
#: ../../develop.rst:222
msgid ""
"|app| is primarily developed on Linux. You have two choices in setting up "
"the development environment. You can install the |app| binary as normal and "
"use that as a runtime environment to do your development. This approach is "
"similar to that used in Windows and OS X. Alternatively, you can install "
"|app| from source. Instructions for setting up a development environment "
"from source are in the INSTALL file in the source tree. Here we will address"
" using the binary at runtime, which is the recommended method."
msgstr ""

# 1197e116314f4f3297f5975db9fbbf30
#: ../../develop.rst:228
msgid ""
"Install |app| using the binary installer. Then open a terminal and change to"
" the previously checked out |app| code directory, for example::"
msgstr ""

# 8d8b351124924792bf3278f25ec2e0d2
#: ../../develop.rst:234
msgid ""
"The next step is to set the environment variable ``CALIBRE_DEVELOP_FROM`` to"
" the absolute path of the src directory. So, following the example above, it"
" would be ``/home/kovid/work/calibre/src``. How to set environment variables"
" depends on your Linux distribution and what shell you are using."
msgstr ""

# 77d832f3a14240a09839922e6889094b
#: ../../develop.rst:238
msgid ""
"Once you have set the environment variable, open a new terminal and check "
"that it was correctly set by using the command::"
msgstr ""

# 64458955493d4569984f8f93018f80c0
#: ../../develop.rst:245
msgid ""
"That's it! You are now ready to start hacking on the |app| code. For "
"example, open the file :file:`src/calibre/__init__.py` in your favorite "
"editor and add the line::"
msgstr ""

# 02ae52c131dd4a6c9638a77acdc21596
#: ../../develop.rst:253
msgid ""
"Having separate \"normal\" and \"development\" |app| installs on the same "
"computer"
msgstr ""

# 3a8cacfaca054b109a809ac0b6569291
#: ../../develop.rst:255
msgid ""
"The |app| source tree is very stable and rarely breaks, but if you feel the "
"need to run from source on a separate test library and run the released "
"|app| version with your everyday library, you can achieve this easily using "
".bat files or shell scripts to launch |app|. The example below shows how to "
"do this on Windows using .bat files (the instructions for other platforms "
"are the same, just use a shell script instead of a .bat file)"
msgstr ""

# e28ce015e4ff413c91fed249eb3a6a34
#: ../../develop.rst:260
msgid "To launch the release version of |app| with your everyday library:"
msgstr ""

# 619d726313414391a5aa83f5c4bfce13
#: ../../develop.rst:262
msgid "calibre-normal.bat::"
msgstr ""

# 6dde5528fdd3429ab02edf255867ed71
#: ../../develop.rst:266
msgid "calibre-dev.bat::"
msgstr ""

# 64d3f8b04c3945b0afd426504f0e21dc
#: ../../develop.rst:273
msgid "Debugging tips"
msgstr "Debugging Tipps"

# 5592d3d8422248efabeef081332dd785
#: ../../develop.rst:275
msgid ""
"Python is a dynamically typed language with excellent facilities for "
"introspection. Kovid wrote the core |app| code without once using a "
"debugger. There are many strategies to debug |app| code:"
msgstr ""

# e6406a8e3d5f4657812c7e692e13134c
#: ../../develop.rst:280
msgid "Using print statements"
msgstr ""

# a81da069ff0c471294e0a4efe1e3da5e
#: ../../develop.rst:282
msgid ""
"This is Kovid's favorite way to debug. Simply insert print statements at "
"points of interest and run your program in the terminal. For example, you "
"can start the GUI from the terminal as::"
msgstr ""

# 8df5bb59426e4f5b825210ac18733468
#: ../../develop.rst:287
msgid "Similarly, you can start the ebook-viewer as::"
msgstr ""

# b7df86891bdd42cc948436c2bb927c7a
#: ../../develop.rst:291
msgid "The ebook-editor can be started as::"
msgstr ""

# f77d795fedc64a99aad47a3fd1eef521
#: ../../develop.rst:296
msgid "Using an interactive python interpreter"
msgstr ""

# fc9afa4e9d4847fbb999735b905ed1e8
#: ../../develop.rst:298
msgid ""
"You can insert the following two lines of code to start an interactive "
"python session at that point::"
msgstr ""

# c81f7266481f4cd7b82a165753a2eee5
#: ../../develop.rst:303
msgid ""
"When running from the command line, this will start an interactive Python "
"interpreter with access to all locally defined variables (variables in the "
"local scope). The interactive prompt even has TAB completion for object "
"properties and you can use the various Python facilities for introspection, "
"such as :func:`dir`, :func:`type`, :func:`repr`, etc."
msgstr ""

# bb653c50f1024ca8b2a680bdc7c7a4fa
#: ../../develop.rst:309
msgid "Using the python debugger as a remote debugger"
msgstr ""

# 05b035adf2a34a5899ccf09b85659f32
#: ../../develop.rst:311
msgid ""
"You can use the builtin python debugger (pdb) as a remote debugger from the "
"command line. First, start the remote debugger at the point in the calibre "
"code you are interested in, like this::"
msgstr ""

# 0447c5f6563f4758a8a65e494b28b15d
#: ../../develop.rst:318
msgid ""
"Then run calibre, either as normal, or using one of the calibre-debug "
"commands described in the previous section. Once the above point in the code"
" is reached, calibre will freeze, waiting for the debugger to connect."
msgstr ""

# 91ceb383ce6c4c13969dee54678496fe
#: ../../develop.rst:322
msgid ""
"Now open a terminal or command prompt and use the following command to start"
" the debugging session::"
msgstr ""

# f32151931ec44279b27402437a889b1f
#: ../../develop.rst:327
msgid ""
"You can read about how to use the python debugger in the `python stdlib docs"
" for the pdb module <https://docs.python.org/2/library/pdb.html#debugger-"
"commands>`_."
msgstr ""

# 8aaf23fc763942fd9eddf798f29c95e3
#: ../../develop.rst:331
msgid ""
"By default, the remote debugger will try to connect on port 4444. You can "
"change it, by passing the port parameter to both the set_trace() and the "
"cli() functions above, like this: ``set_trace(port=1234)`` and "
"``cli(port=1234)``."
msgstr ""

# 812ff90b5eda4e1c93c82919e6487079
#: ../../develop.rst:337
msgid ""
"The python debugger cannot handle multiple threads, so you have to call "
"set_trace once per thread, each time with a different port number."
msgstr ""

# 0d6f8208c37f4436b616943ee65aad0c
#: ../../develop.rst:341
msgid "Using the debugger in your favorite python IDE"
msgstr ""

# f7fb8179ac1a46b4bee8d9aac71d36e2
#: ../../develop.rst:343
msgid ""
"It is possible to use the builtin debugger in your favorite python IDE, if "
"it supports remote debugging. The first step is to add the |app| src "
"checkout to the ``PYTHONPATH`` in your IDE. In other words, the directory "
"you set as ``CALIBRE_DEVELOP_FROM`` above, must also be in the "
"``PYTHONPATH`` of your IDE."
msgstr ""

# 43a81dcf4f4942e9ba3594c9a7e4f400
#: ../../develop.rst:348
msgid ""
"Then place the IDE's remote debugger module into the :file:`src` "
"subdirectory of the |app| source code checkout. Add whatever code is needed "
"to launch the remote debugger to |app| at the point of interest, for example"
" in the main function. Then run |app| as normal. Your IDE should now be able"
" to connect to the remote debugger running inside |app|."
msgstr ""

# dfc437fb29da4fceae6ca07fc7435fbe
#: ../../develop.rst:355
msgid "Executing arbitrary scripts in the |app| python environment"
msgstr ""

# 2cd9a66d14d341adbab5e4fa0e8e71df
#: ../../develop.rst:357
msgid ""
"The :command:`calibre-debug` command provides a couple of handy switches to "
"execute your own code, with access to the |app| modules::"
msgstr ""

# aa7fe9d0d53447d8a83909d82b760342
#: ../../develop.rst:362
msgid ""
"is great for testing a little snippet of code on the command line. It works "
"in the same way as the -c switch to the python interpreter::"
msgstr ""

# 680c5cc1604c474aa91540148988fb4d
#: ../../develop.rst:366
msgid ""
"can be used to execute your own Python script. It works in the same way as "
"passing the script to the Python interpreter, except that the calibre "
"environment is fully initialized, so you can use all the calibre code in "
"your script. To use command line arguments with your script, use the form::"
msgstr ""

# b7e05747613d40c4808b3010168db29b
#: ../../develop.rst:371
msgid ""
"The ``--`` causes all subsequent arguments to be passed to your script."
msgstr ""

# eb6f2d0619b7404197187f0a1875a269
#: ../../develop.rst:375
msgid "Using |app| in your projects"
msgstr ""

# d75c5df6b8854c0f9441ec02cd77fb59
#: ../../develop.rst:377
msgid ""
"It is possible to directly use |app| functions/code in your Python project. "
"Two ways exist to do this:"
msgstr ""

# 82a3d9d36e0f41dd84c8c72224dfc6ac
#: ../../develop.rst:380
msgid "Binary install of |app|"
msgstr ""

# 3b06ec4cd7184dbd9d5a893a0d9e1177
#: ../../develop.rst:382
msgid ""
"If you have a binary install of |app|, you can use the Python interpreter "
"bundled with |app|, like this::"
msgstr ""

# b2b0935adfdf438c8c5b167c27609d7d
#: ../../develop.rst:387
msgid "Source install on Linux"
msgstr ""

# ec8d5578de724cf29238334670f7c32d
#: ../../develop.rst:389
msgid ""
"In addition to using the above technique, if you do a source install on "
"Linux, you can also directly import |app|, as follows::"
msgstr ""

# 1401d4c3c9d44116a50c87650196aeec
#: ../../develop.rst:397
msgid ""
"It is essential that you import the init_calibre module before any other "
"|app| modules/packages as it sets up the interpreter to run |app| code."
msgstr ""

# bc6a4fc198624c8dad39e59374eaec0b
#: ../../develop.rst:401
msgid "API documentation for various parts of |app|"
msgstr ""
