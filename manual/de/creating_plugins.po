# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Armin Geller <armingeller@t-online.de>, 2014
# Ettore Atalan <atalanttore@googlemail.com>, 2014
# ILB, 2014
# Simon_Schuette <simonschuette@arcor.de>, 2014
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-10 06:53+0530\n"
"PO-Revision-Date: 2015-01-11 18:30+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: German (http://www.transifex.com/projects/p/calibre/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 5890524ed3ee4babac8b7cf4a1349318
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:4
msgid "Writing your own plugins to extend calibre's functionality"
msgstr ""

# 2ba34801f4b542ffa4f1bf80f0cd547f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:6
msgid ""
"calibre has a very modular design. Almost all functionality in calibre comes"
" in the form of plugins. Plugins are used for conversion, for downloading "
"news (though these are called recipes), for various components of the user "
"interface, to connect to different devices, to process files when adding "
"them to calibre and so on. You can get a complete list of all the built-in "
"plugins in calibre by going to :guilabel:`Preferences->Plugins`."
msgstr "calibre ist sehr modular aufgebaut. Fast alle Funktionen in calibre sind als Plugins integriert. Plugins werden verwendet für die Konvertierung, für das Herunterladen von Nachrichten (obwohl man dies Rezepte oder auch Recipes nennt), für verschiedene Komponenten der Benutzeroberfläche, zum Herstellen einer Verbindung zu verschiedener Geräten, um Dateien zu verarbeiten, wenn diese zu calibre hinzugefügt werden und so weiter. Eine vollständige Liste aller integrierten Plugins erhalten Sie in calibre, indem Sie zu :guilabel:`Einstellungen Erweitert ->Plugins` gehen."

# 03c9047ba3924761a07a412fb90c3292
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:8
msgid ""
"Here, we will teach you how to create your own plugins to add new features "
"to calibre."
msgstr ""

# 449844a346434483a76b0b3381d4d13d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:0
msgid "Contents"
msgstr "Inhalt"

# 25967d7f8a6a43b381a2346f24493e2b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:15
msgid "This only applies to calibre releases >= 0.8.60"
msgstr "Dies gilt nur für calibre Versionen >= 0.8.60"

# 7bf323d89f2440ed924367925174718d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:18
msgid "Anatomy of a calibre plugin"
msgstr ""

# bafce19d8062457ea30bd9c7459b8db6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:20
msgid ""
"A calibre plugin is very simple, it's just a zip file that contains some "
"python code and any other resources like image files needed by the plugin. "
"Without further ado, let's see a basic example."
msgstr ""

# 016a741161fe44499adca26a1f551bd3
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:24
msgid ""
"Suppose you have an installation of calibre that you are using to self "
"publish various e-documents in EPUB and MOBI formats. You would like all "
"files generated by calibre to have their publisher set as \"Hello world\", "
"here's how to do it. Create a file named :file:`__init__.py` (this is a "
"special name and must always be used for the main file of your plugin) and "
"enter the following Python code into it:"
msgstr ""

# 82ee0b682bb442c2bfeb5be2d0ccd254
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:32
msgid ""
"That's all. To add this code to calibre as a plugin, simply run the "
"following in the directory in which you created :file:`__init__.py`::"
msgstr ""

# 144e7097c3a24466a0dac4904e451073
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:38
msgid ""
"On OS X, the command line tools are inside the calibre bundle, for example, "
"if you installed calibre in :file:`/Applications` the command line tools are"
" in :file:`/Applications/calibre.app/Contents/console.app/Contents/MacOS/`."
msgstr "Unter OS X befinden sich die Kommandozeilen-Tools innerhalb des calibre-Programmpakets. Wenn calibre unter :file:`/Applications` installiert wurde, befinden sich die Kommandozeilen-Tools im Verzeichnis :file:`/Applications/calibre.app/Contents/console.app/Contents/MacOS/`."

# 4eab560aa6dd4443aad7ca437371b53b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:42
msgid ""
"You can download the Hello World plugin from `helloworld_plugin.zip  <http"
"://calibre-ebook.com/downloads/helloworld_plugin.zip>`_."
msgstr ""

# a63a431dff094df0a88185c0eb6bce50
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:45
msgid ""
"Every time you use calibre to convert a book, the plugin's :meth:`run` "
"method will be called and the converted book will have its publisher set to "
"\"Hello World\". This is a trivial plugin, lets move on to a more complex "
"example that actually adds a component to the user interface."
msgstr ""

# 770c4476df4e4822b183aef281a5394a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:50
msgid "A User Interface plugin"
msgstr ""

# 0c027911cc134a3e85f28454735ac46a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:52
msgid ""
"This plugin will be spread over a few files (to keep the code clean). It "
"will show you how to get resources (images or data files) from the plugin "
"zip file, allow users to configure your plugin, how to create elements in "
"the calibre user interface and how to access and query the books database in"
" calibre."
msgstr ""

# e504ba031d9746f7bbaebf1ca494c699
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:57
msgid ""
"You can download this plugin from `interface_demo_plugin.zip <http"
"://calibre-ebook.com/downloads/interface_demo_plugin.zip>`_"
msgstr ""

# 89c461dd620848099f94f6d25af28842
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:61
msgid ""
"The first thing to note is that this zip file has a lot more files in it, "
"explained below, pay particular attention to ``plugin-import-name-"
"interface_demo.txt``."
msgstr ""

# 2e99bbc74eea48e7b91c86e779ba391a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:77
msgid "**plugin-import-name-interface_demo.txt**"
msgstr ""

# 35e66a2bc7664cb393767a241c4a10ff
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:65
msgid ""
"An empty text file used to enable the multi-file plugin magic. This file "
"must be present in all plugins that use more than one .py file. It should be"
" empty and its filename must be of the form: plugin-import-"
"name-**some_name**.txt The presence of this file allows you to import code "
"from the .py files present inside the zip file, using a statement like::"
msgstr ""

# 20e28746252846889092f93531984cfe
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:71
msgid ""
"The prefix ``calibre_plugins`` must always be present. ``some_name`` comes "
"from the filename of the empty text file. ``some_module`` refers to  "
":file:`some_module.py` file inside the zip file. Note that this importing is"
" just as powerful as regular python imports. You can create packages and "
"subpackages of .py modules inside the zip file, just like you would normally"
" (by defining __init__.py in each sub directory), and everything should Just"
" Work."
msgstr ""

# 03f407a5ec7e4ac99eabe3df54f96c87
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:76
msgid ""
"The name you use for ``some_name`` enters a global namespace shared by all "
"plugins, **so make it as unique as possible**. But remember that it must be "
"a valid python identifier (only alphabets, numbers and the underscore)."
msgstr ""

# 74c271a7132a40ceab1fe5ede4b71b08
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:80
msgid "**__init__.py**"
msgstr "**__init__.py**"

# 091c4661e76e4b279ffb15cafe60f4f9
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:80
msgid "As before, the file that defines the plugin class"
msgstr ""

# ef66f02207d44674bede62d98fad64fd
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:83
msgid "**main.py**"
msgstr "**main.py**"

# 7b2cd8c7d0c24a09a1f2367843930158
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:83
msgid "This file contains the actual code that does something useful"
msgstr ""

# 7b1989a1bca149b9a873f80d50316845
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:86
msgid "**ui.py**"
msgstr "**ui.py**"

# ec2d611f7cf44996bff0e769e34298c0
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:86
msgid "This file defines the interface part of the plugin"
msgstr ""

# a447d1febbe64cf1902493c5685c016c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:89
msgid "**images/icon.png**"
msgstr "**images/icon.png**"

# d6569203727d46edae5d9e02c857d4fd
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:89
msgid "The icon for this plugin"
msgstr "Das Symbol für dieses Plugin"

# 23c2021439ba4742a608c1f99bf577a1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:92
msgid "**about.txt**"
msgstr "**about.txt**"

# c412014f3fcc4e71a806b455ccaae3c2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:92
msgid "A text file with information about the plugin"
msgstr "Eine Textdatei mit Informationen über das Plugin"

# 24ab81a247ef4b31a7addf2dcf52b2ec
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:97
msgid "**translations**"
msgstr "**Übersetzungen**"

# c4741b68ee114c58ac8eda9e2487e215
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:95
msgid ""
"A folder containing .mo files with the translations of the user interface of"
" your plugin into different languages. See below for details."
msgstr ""

# 89bbb0c853074ada99271ac8932004da
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:99
msgid "Now let's look at the code."
msgstr ""

# e4bfaa8fd7e74da9bfaaf2a69ed81cbb
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:102
msgid "__init__.py"
msgstr "__init__.py"

# 2b4464a856a3479cb28279787fe73d8a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:104
msgid "First, the obligatory ``__init__.py`` to define the plugin metadata:"
msgstr ""

# dd7cab088e454f539e27443327871be8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:109
msgid ""
"The only noteworthy feature is the field :attr:`actual_plugin`. Since "
"calibre has both command line and GUI interfaces, GUI plugins like this one "
"should not load any GUI libraries in __init__.py. The actual_plugin field "
"does this for you, by telling calibre that the actual plugin is to be found "
"in another file inside your zip archive, which will only be loaded in a GUI "
"context."
msgstr ""

# f932de3424af4fe692ee555063348054
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:114
msgid ""
"Remember that for this to work, you must have a plugin-import-name-"
"some_name.txt file in your plugin zip file, as discussed above."
msgstr ""

# c8ed6fd10aea401891b9a98169097fd9
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:117
msgid ""
"Also there are a couple of methods for enabling user configuration of the "
"plugin. These are discussed below."
msgstr ""

# d50649b6f09343dbb7446fa8f26eaa12
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:120
msgid "ui.py"
msgstr "ui.py"

# 4df6c80b11984d55b3d607a721b370f2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:122
msgid ""
"Now let's look at ui.py which defines the actual GUI plugin. The source code"
" is heavily commented and should be self explanatory:"
msgstr ""

# 6c54b1df082e4b368f223fcbdeb90de2
# 1b2e6010ab8548daa338f2a9065a3e4b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:128
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:212
msgid "main.py"
msgstr "main.py"

# f0e55ae1d87a4fa390e9babfb44a4dba
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:130
msgid "The actual logic to implement the Interface Plugin Demo dialog."
msgstr ""

# dad35486f1ed4b3e807eb0bf88702f55
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:136
msgid "Getting resources from the plugin zip file"
msgstr ""

# a5ed775f97694bae969f902655c5d38f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:138
msgid ""
"calibre's plugin loading system defines a couple of built-in functions that "
"allow you to conveniently get files from the plugin zip file."
msgstr ""

# cfd35d55232743c8bf7ac11049a320a0
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:145
msgid "**get_resources(name_or_list_of_names)**"
msgstr ""

# a5518a247d634081b1db0c1ccda677e6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:141
msgid ""
"This function should be called with a list of paths to files inside the zip "
"file. For example to access the file icon.png in the directory images in the"
" zip file, you would use: ``images/icon.png``. Always use a forward slash as"
" the path separator, even on windows. When you pass in a single name, the "
"function will return the raw bytes of that file or None if the name was not "
"found in the zip file. If you pass in more than one name then it returns a "
"dict mapping the names to bytes. If a name is not found, it will not be "
"present in the returned dict."
msgstr ""

# 78219bc8b0974bca9dd1007f5ae547e2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:149
msgid "**get_icons(name_or_list_of_names)**"
msgstr ""

# b62f6ae455724e47ab2a4224fbf246b2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:148
msgid ""
"A convenience wrapper for get_resources() that creates QIcon objects from "
"the raw bytes returned by get_resources. If a name is not found in the zip "
"file the corresponding QIcon will be null."
msgstr ""

# bb750fa290394e0aac6830543259bc7f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:152
msgid "Enabling user configuration of your plugin"
msgstr ""

# cdc48b49da224acfaeb58a7c0c85c1cc
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:154
msgid ""
"To allow users to configure your plugin, you must define three methods in "
"your base plugin class, '**is_customizable**, **config_widget** and "
"**save_settings** as shown below:"
msgstr ""

# 8fc766f1d429473388faf54e9c306cc2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:165
msgid ""
"calibre has many different ways to store configuration data (a legacy of its"
" long history). The recommended way is to use the **JSONConfig** class, "
"which stores your configuration information in a .json file."
msgstr ""

# 70707a643ed448e99e11ac273cf0d534
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:167
msgid ""
"The code to manage configuration data in the demo plugin is in config.py:"
msgstr ""

# 51529b6f449a4fc3948a3a374a066aa1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:172
msgid ""
"The ``prefs`` object is now available throughout the plugin code by a "
"simple::"
msgstr ""

# e0d7641a58404260a80f1d6813fbaf23
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:177
msgid "You can see the ``prefs`` object being used in main.py:"
msgstr ""

# 478c0d962f734fae9b866557bd10c5e2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:184
msgid "Edit Book plugins"
msgstr ""

# a86cce899d47465ea1209e59adb16815
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:186
msgid ""
"Now let's change gears for a bit and look at creating a plugin to add tools "
"to the calibre book editor. The plugin is available here: "
"`editor_demo_plugin.zip  <http://calibre-"
"ebook.com/downloads/editor_demo_plugin.zip>`_."
msgstr ""

# b19ea1d1aa6446c894ed29c818435021
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:190
msgid ""
"The first step, as for all plugins is to create the import name empty txt "
"file, as described :ref:`above <import_name_txt>`. We shall name the file "
"``plugin-import-name-editor_plugin_demo.txt``."
msgstr ""

# d8479d8ff9154f8abdcedea06fd0eb61
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:194
msgid ""
"Now we create the mandatory ``__init__.py`` file that contains metadata "
"about the plugin -- its name, author, version, etc."
msgstr ""

# 38713a8d31304b47a4decf504e22f796
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:200
msgid ""
"A single editor plugin can provide multiple tools each tool corresponds to a"
" single button in the toolbar and entry in the :guilabel:`Plugins` menu in "
"the editor. These can have sub-menus in case the tool has multiple related "
"actions."
msgstr ""

# a9855075ee23432486f983bcc6694020
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:204
msgid ""
"The tools must all be defined in the file ``main.py`` in your plugin. Every "
"tool is a class that inherits from the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class. Let's look at "
"``main.py`` from the demo plugin, the source code is heavily commented and "
"should be self-explanatory. Read the API documents of the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class for more details."
msgstr ""

# 6a2e832baa484b27a8fe39f356a0f38a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:214
msgid ""
"Here we will see the definition of a single tool that will multiply all font"
" sizes in the book by a number provided by the user. This tool demonstrates "
"various important concepts that you will need in developing your own "
"plugins, so you should read the (heavily commented) source code carefully."
msgstr ""

# 586fe0719cd44243a29c0a61cd1c75b6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:222
msgid ""
"Let's break down ``main.py``. We see that it defines a single tool, named "
"*Magnify fonts*. This tool will ask the user for a number and multiply all "
"font sizes in the book by that number."
msgstr ""

# 5748dbc79f544cc6bc1ba27e20b521fb
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:226
msgid ""
"The first important thing is the tool name which you must set to some "
"relatively unique string as it will be used as the key for this tool."
msgstr ""

# d3ac757a5e6a40de8f71f00ca569f0e8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:229
msgid ""
"The next important entry point is the "
":meth:`calibre.gui2.tweak_book.plugin.Tool.create_action`. This method "
"creates the QAction objects that appear in the plugins toolbar and plugin "
"menu. It also, optionally, assigns a keyboard shortcut that the user can "
"customize. The triggered signal from the QAction is connected to the "
"ask_user() method that asks the user for the font size multiplier, and then "
"runs the magnification code."
msgstr ""

# 4ae9319a724542189ccf78c8fcaaa00a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:237
msgid ""
"The magnification code is well commented and fairly simple. The main things "
"to note are that you get a reference to the editor window as ``self.gui`` "
"and the editor *Boss* as ``self.boss``. The *Boss* is the object that "
"controls the editor user interface. It has many useful methods, that are "
"documented in the :class:`calibre.gui2.tweak_book.boss.Boss` class."
msgstr ""

# 8137f49641ac46e2999a9948f6baaea8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:243
msgid ""
"Finally, there is ``self.current_container`` which is a reference to the "
"book being edited as a "
":class:`calibre.ebooks.oeb.polish.container.Container` object. This "
"represents the book as a collection of its constituent HTML/CSS/image files "
"and has convenience methods for doing many useful things. The container "
"object and various useful utility functions that can be reused in your "
"plugin code are documented in :ref:`polish_api`."
msgstr ""

# 5b2f88d8ca274d00b0d738e833bedd6e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:252
msgid "Adding translations to your plugin"
msgstr ""

# 1c05f3c1ef144d73affa7a224e23389b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:254
msgid ""
"You can have all the user interface strings in your plugin translated and "
"displayed in whatever language is set for the main calibre user interface."
msgstr ""

# 2d0eb326db274d51abadfe4834eba374
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:257
msgid ""
"The first step is to go through your plugin's source code and mark all user "
"visible strings as translatable, by surrounding them in _(). For example::"
msgstr ""

# 7049b5a64601465db8277290ef1ae098
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:262
msgid ""
"Then use some program to generate .po files from your plugin source code. "
"There should be one .po file for every language you want to translate into. "
"For example: de.po for German, fr.po for French and so on. You can use the "
"`poedit <http://poedit.net/>`_ program for this."
msgstr ""

# f93b6461cf764804ad9d3c0d09ba774a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:267
msgid ""
"Send these .po files to your translators. Once you get them back, compile "
"them into .mo files. You can again use poedit for that, or just do::"
msgstr ""

# c9c47b1970734c47bc352d2bfcdf8ed3
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:272
msgid "Put the .mo files into the ``translations`` folder in your plugin."
msgstr ""

# 3dcff0d6c6eb44b28cff156073f4f8bb
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:274
msgid ""
"The last step is to simply call the function `load_translations()` at the "
"top of your plugin's .py files. For performance reasons you should only call"
" this function in those .py files that actually have translatable strings. "
"So in a typical User Interface plugin you would call it at the top of "
"``ui.py`` but not ``__init__.py``."
msgstr ""

# 1f8178002bc5465684fc44c7f413d3b6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:280
msgid ""
"You can test the translations of your plugins by changing the user interface"
" language in calibre under Preferences->Look & Feel or by running calibre "
"like this::"
msgstr ""

# 429b0ae843374d6ba22e2b735b349d17
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:286
msgid ""
"Replace ``de`` with the language code of the language you want to test."
msgstr ""

# d6bf1a54be4a4957a869918ddf64f475
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:289
msgid "The plugin API"
msgstr ""

# 808501aa13d949c1ad10a8e8188a4e50
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:291
msgid ""
"As you may have noticed above, a plugin in calibre is a class. There are "
"different classes for the different types of plugins in calibre. Details on "
"each class, including the base class of all plugins can be found in "
":ref:`plugins`."
msgstr ""

# 6f44dfb27eb543fdb22ec3b26f47f223
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:294
msgid ""
"Your plugin is almost certainly going to use code from calibre. To learn how"
" to find various bits of functionality in the calibre code base, read the "
"section on the calibre :ref:`code_layout`."
msgstr ""

# 8bc8889b96954335a121c939b9afff1d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:299
msgid "Debugging plugins"
msgstr ""

# 64e7f3c980214e4e8100a32b0fec6239
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:301
msgid ""
"The first, most important step is to run calibre in debug mode. You can do "
"this from the command line with::"
msgstr ""

# 24276371c16f4b4a98896a213c565cd6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:305
msgid ""
"Or from within calibre by right-clicking the preferences button or using the"
" `Ctrl+Shift+R` keyboard shortcut."
msgstr ""

# 0e7ba87fea8a484db113ee7944b58209
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:307
msgid ""
"When running from the command line, debug output will be printed to the "
"console, when running from within calibre the output will go to a txt file."
msgstr ""

# fdfe657bbdf747f9851dcb2955b2679e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:309
msgid ""
"You can insert print statements anywhere in your plugin code, they will be "
"output in debug mode. Remember, this is python, you really shouldn't need "
"anything more than print statements to debug ;) I developed all of calibre "
"using just this debugging technique."
msgstr ""

# dfce21bc76a1417486467f5c9d82a01b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:311
msgid ""
"You can quickly test changes to your plugin by using the following command "
"line::"
msgstr ""

# ffabff0b8a964218baee3382a841db85
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:316
msgid ""
"This will shutdown a running calibre, wait for the shutdown to complete, "
"then update your plugin in calibre and relaunch calibre."
msgstr ""

# 7dd6fa15147c4fc1af29b403d91735f2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:319
msgid "More plugin examples"
msgstr ""

# a8db37da0c7c4681aefd2a51b525f512
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:321
msgid ""
"You can find a list of many, sophisticated calibre plugins `here "
"<http://www.mobileread.com/forums/showthread.php?t=118764>`_."
msgstr ""

# 90f84d956b254fbeab48f01be7003377
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:324
msgid "Sharing your plugins with others"
msgstr ""

# 29d1731885624443945ed70b20e7c443
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:326
msgid ""
"If you would like to share the plugins you have created with other users of "
"calibre, post your plugin in a new thread in the `calibre plugins forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=237>`_."
msgstr ""
