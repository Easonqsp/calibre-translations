# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Armin Geller <armingeller@t-online.de>, 2014
# Ettore Atalan <atalanttore@googlemail.com>, 2014
# ILB, 2014
# Simon_Schuette <simonschuette@arcor.de>, 2014
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-03 09:06+0530\n"
"PO-Revision-Date: 2014-10-10 14:34+0000\n"
"Last-Translator: ILB\n"
"Language-Team: German (http://www.transifex.com/projects/p/calibre/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 38729d5c45c14a32a78127d3cbbe14e8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:5
msgid "Writing your own plugins to extend |app|'s functionality"
msgstr "Eigene Plugins zur Erweiterung von |app|'s Funktionsumfang schreiben"

# 2b04aad096a0407080a3da70610a0341
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:7
msgid ""
"|app| has a very modular design. Almost all functionality in |app| comes in "
"the form of plugins. Plugins are used for conversion, for downloading news "
"(though these are called recipes), for various components of the user "
"interface, to connect to different devices, to process files when adding "
"them to |app| and so on. You can get a complete list of all the built-in "
"plugins in |app| by going to :guilabel:`Preferences->Plugins`."
msgstr "|app| ist sehr modular aufgebaut. Fast alle Funktionen in |app| sind als Plugins integriert. Plugins werden verwendet für die Konvertierung, für das Herunterladen von Nachrichten (obwohl man dies Rezepte oder auch Recipes nennt), für verschiedene Komponenten der Benutzeroberfläche, zum Herstellen einer Verbindung zu verschiedener Geräten, um Dateien zu verarbeiten, wenn diese zu |app| hinzugefügt werden und so weiter. Eine vollständige Liste aller integrierten Plugins erhalten Sie in |app|, indem Sie zu :guilabel:`Einstellungen Erweitert ->Plugins` gehen."

# 58c718a9aa824c72b044f5c0813dadd7
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:9
msgid ""
"Here, we will teach you how to create your own plugins to add new features "
"to |app|."
msgstr "Hier werden Sie lernen, wie sie ihr eigenes Plugin erzeugen, um neue Funktionen zu |app| hinzuzufügen."

# 99dc07f6bb364c348ebbd9be62b6a4c3
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:0
msgid "Contents"
msgstr "Inhalt"

# d5dbc566e1cb4c43ab8be11427bb9f99
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:16
msgid "This only applies to calibre releases >= 0.8.60"
msgstr "Dies gilt nur für calibre Versionen >= 0.8.60"

# 48f55e24780844a09ae4c7e120ba9ce4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:19
msgid "Anatomy of a |app| plugin"
msgstr "Aufbau eines |app| Plugin"

# f7ad21f6f20140049da41c0463e8f7e6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:21
msgid ""
"A |app| plugin is very simple, it's just a zip file that contains some "
"python code and any other resources like image files needed by the plugin. "
"Without further ado, let's see a basic example."
msgstr ""

# f17d2419045a462c962a4c779add4ba1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:25
msgid ""
"Suppose you have an installation of |app| that you are using to self publish"
" various e-documents in EPUB and MOBI formats. You would like all files "
"generated by |app| to have their publisher set as \"Hello world\", here's "
"how to do it. Create a file named :file:`__init__.py` (this is a special "
"name and must always be used for the main file of your plugin) and enter the"
" following Python code into it:"
msgstr ""

# c892ff5946bd4a67b969339d3a3497ff
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:33
msgid ""
"That's all. To add this code to |app| as a plugin, simply run the following "
"in the directory in which you created :file:`__init__.py`::"
msgstr ""

# 5cf2e995d94f46388cf2f001a5302e49
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:39
msgid ""
"On OS X, the command line tools are inside the |app| bundle, for example, if"
" you installed calibre in :file:`/Applications` the command line tools are "
"in :file:`/Applications/calibre.app/Contents/console.app/Contents/MacOS/`."
msgstr "Unter OS X befinden sich die Kommandozeilen-Tools innerhalb des |app| Programmpakets. Wenn calibre unter :file:`/Applications` installiert wurde, befinden sich die Kommandozeilen-Tools im Verzeichnis :file:`/Applications/calibre.app/Contents/console.app/Contents/MacOS/`."

# 3566a677fbea483b969080b912b88d89
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:43
msgid ""
"You can download the Hello World plugin from `helloworld_plugin.zip  <http"
"://calibre-ebook.com/downloads/helloworld_plugin.zip>`_."
msgstr ""

# c13d6e7593d5420f9f07c40565fcd60b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:46
msgid ""
"Every time you use calibre to convert a book, the plugin's :meth:`run` "
"method will be called and the converted book will have its publisher set to "
"\"Hello World\". This is a trivial plugin, lets move on to a more complex "
"example that actually adds a component to the user interface."
msgstr ""

# 7c55faa599f04f7697464eeb1933b2ca
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:51
msgid "A User Interface plugin"
msgstr ""

# 26e7912570364c4c91db443cd3dfa42d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:53
msgid ""
"This plugin will be spread over a few files (to keep the code clean). It "
"will show you how to get resources (images or data files) from the plugin "
"zip file, allow users to configure your plugin, how to create elements in "
"the |app| user interface and how to access and query the books database in "
"|app|."
msgstr ""

# b17a40aa5f614059868641cb58bf1859
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:58
msgid ""
"You can download this plugin from `interface_demo_plugin.zip <http"
"://calibre-ebook.com/downloads/interface_demo_plugin.zip>`_"
msgstr ""

# 20230297c0744fad97ba76a3dd354e12
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:62
msgid ""
"The first thing to note is that this zip file has a lot more files in it, "
"explained below, pay particular attention to ``plugin-import-name-"
"interface_demo.txt``."
msgstr ""

# 5c2756b7d90f48c58a9c87ccc49071a2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:78
msgid "**plugin-import-name-interface_demo.txt**"
msgstr ""

# 82c2dadd727f4cd09009318b2b862565
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:66
msgid ""
"An empty text file used to enable the multi-file plugin magic. This file "
"must be present in all plugins that use more than one .py file. It should be"
" empty and its filename must be of the form: plugin-import-"
"name-**some_name**.txt The presence of this file allows you to import code "
"from the .py files present inside the zip file, using a statement like::"
msgstr ""

# b1812885da854822a7ed2ad372921e3a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:72
msgid ""
"The prefix ``calibre_plugins`` must always be present. ``some_name`` comes "
"from the filename of the empty text file. ``some_module`` refers to  "
":file:`some_module.py` file inside the zip file. Note that this importing is"
" just as powerful as regular python imports. You can create packages and "
"subpackages of .py modules inside the zip file, just like you would normally"
" (by defining __init__.py in each sub directory), and everything should Just"
" Work."
msgstr ""

# 9fcddca547e64462bb3208f5ef9c2cf0
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:77
msgid ""
"The name you use for ``some_name`` enters a global namespace shared by all "
"plugins, **so make it as unique as possible**. But remember that it must be "
"a valid python identifier (only alphabets, numbers and the underscore)."
msgstr ""

# 56d41fa76b7c48f7aa6c9a8a2e1c755c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:81
msgid "**__init__.py**"
msgstr "**__init__.py**"

# 9c430103bdfa410a8c8d6a9c9f9f2a82
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:81
msgid "As before, the file that defines the plugin class"
msgstr ""

# dd02c1a1556740f783a6f2c449317a99
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:84
msgid "**main.py**"
msgstr "**main.py**"

# 99348f457835430ab9bcdfeb38956c0e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:84
msgid "This file contains the actual code that does something useful"
msgstr ""

# eb9516ffb20b48058ffa44b3996978e1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:87
msgid "**ui.py**"
msgstr "**ui.py**"

# 1da88f3f0e884a67a77a6617bad0859f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:87
msgid "This file defines the interface part of the plugin"
msgstr ""

# 3f9303f38f89476c9731322e4b9142af
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:90
msgid "**images/icon.png**"
msgstr "**images/icon.png**"

# b352436691a34311901255d5557e24ea
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:90
msgid "The icon for this plugin"
msgstr "Das Symbol für dieses Plugin"

# 9f7c5a008e1c410da9dca6e036813d98
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:93
msgid "**about.txt**"
msgstr ""

# b36ffc00cc824542acade2031455f6b5
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:93
msgid "A text file with information about the plugin"
msgstr "Eine Textdatei mit Informationen über das Plugin"

# e5871f96b1de4e3eaeb3e76b800fdd22
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:98
msgid "**translations**"
msgstr "**Übersetzungen**"

# d56893560f4b43568779dcaa5de50801
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:96
msgid ""
"A folder containing .mo files with the translations of the user interface of"
" your plugin into different languages. See below for details."
msgstr ""

# 488fced43d914b29840684bd398d7fef
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:100
msgid "Now let's look at the code."
msgstr ""

# 17b557807b874516923399840604ed9c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:103
msgid "__init__.py"
msgstr "__init__.py"

# 28d9cfbd5fa043619cc5de1405423adc
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:105
msgid "First, the obligatory ``__init__.py`` to define the plugin metadata:"
msgstr ""

# 47c5bebfca174056b4d11a6db8075f70
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:110
msgid ""
"The only noteworthy feature is the field :attr:`actual_plugin`. Since |app| "
"has both command line and GUI interfaces, GUI plugins like this one should "
"not load any GUI libraries in __init__.py. The actual_plugin field does this"
" for you, by telling |app| that the actual plugin is to be found in another "
"file inside your zip archive, which will only be loaded in a GUI context."
msgstr ""

# cbbead80505846e4a8823db1d6544582
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:115
msgid ""
"Remember that for this to work, you must have a plugin-import-name-"
"some_name.txt file in your plugin zip file, as discussed above."
msgstr ""

# 90d2302396f64082896aaa983da8abcf
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:118
msgid ""
"Also there are a couple of methods for enabling user configuration of the "
"plugin. These are discussed below."
msgstr ""

# 5aec6e9302434385901b187830a44f49
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:121
msgid "ui.py"
msgstr "ui.py"

# e9f622c585454a71a9784ba19942b467
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:123
msgid ""
"Now let's look at ui.py which defines the actual GUI plugin. The source code"
" is heavily commented and should be self explanatory:"
msgstr ""

# 3848e487512d4408b33bd34bd0a1a877
# b3619370cbb84709972af1f526cbf5da
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:129
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:213
msgid "main.py"
msgstr "main.py"

# df9cd189b52a4b739d1e8aa9827acfdc
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:131
msgid "The actual logic to implement the Interface Plugin Demo dialog."
msgstr ""

# 1dbb630d7d9e45a39cf33fa543b3fa6f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:137
msgid "Getting resources from the plugin zip file"
msgstr ""

# 5a5218b17ab940269778032b605aa599
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:139
msgid ""
"|app|'s plugin loading system defines a couple of built-in functions that "
"allow you to conveniently get files from the plugin zip file."
msgstr ""

# 9b95d4d13d124beb992088612976d2c1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:146
msgid "**get_resources(name_or_list_of_names)**"
msgstr ""

# 1d1dc052370c4f2ca4bcdc0a77c74422
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:142
msgid ""
"This function should be called with a list of paths to files inside the zip "
"file. For example to access the file icon.png in the directory images in the"
" zip file, you would use: ``images/icon.png``. Always use a forward slash as"
" the path separator, even on windows. When you pass in a single name, the "
"function will return the raw bytes of that file or None if the name was not "
"found in the zip file. If you pass in more than one name then it returns a "
"dict mapping the names to bytes. If a name is not found, it will not be "
"present in the returned dict."
msgstr ""

# 91b3c9966c6346f193a12f09fd253ecb
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:150
msgid "**get_icons(name_or_list_of_names)**"
msgstr ""

# 7f5b377a3ccd430da9ae2e08dc1db8e5
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:149
msgid ""
"A convenience wrapper for get_resources() that creates QIcon objects from "
"the raw bytes returned by get_resources. If a name is not found in the zip "
"file the corresponding QIcon will be null."
msgstr ""

# b762d9df9e194c8591a662727a7c1043
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:153
msgid "Enabling user configuration of your plugin"
msgstr ""

# 6d288f68bf04431aae4a22834e12792a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:155
msgid ""
"To allow users to configure your plugin, you must define three methods in "
"your base plugin class, '**is_customizable**, **config_widget** and "
"**save_settings** as shown below:"
msgstr ""

# fd5aa61b0ccb41d1a0b38137b1cb0227
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:166
msgid ""
"|app| has many different ways to store configuration data (a legacy of its "
"long history). The recommended way is to use the **JSONConfig** class, which"
" stores your configuration information in a .json file."
msgstr ""

# 85fbf24046d84a41a32709d17979c257
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:168
msgid ""
"The code to manage configuration data in the demo plugin is in config.py:"
msgstr ""

# 92e16cda70e443ce9376246dc99da647
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:173
msgid ""
"The ``prefs`` object is now available throughout the plugin code by a "
"simple::"
msgstr ""

# 25c7a58548c84ac69b4313211bdfdc35
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:178
msgid "You can see the ``prefs`` object being used in main.py:"
msgstr ""

# 6d40cbdb1a6f436cbe5ccf5b5bc8cf00
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:185
msgid "Edit Book plugins"
msgstr ""

# 7b030c02c7244bdca8ec3d491575ddfa
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:187
msgid ""
"Now let's change gears for a bit and look at creating a plugin to add tools "
"to the |app| book editor. The plugin is available here: "
"`editor_demo_plugin.zip  <http://calibre-"
"ebook.com/downloads/editor_demo_plugin.zip>`_."
msgstr ""

# 7acf17c8b6e043c38adde54b8752c595
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:191
msgid ""
"The first step, as for all plugins is to create the import name empty txt "
"file, as described :ref:`above <import_name_txt>`. We shall name the file "
"``plugin-import-name-editor_plugin_demo.txt``."
msgstr ""

# 8b3d2a4eb1ce41c890177e3fe5636433
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:195
msgid ""
"Now we create the mandatory ``__init__.py`` file that contains metadata "
"about the plugin -- its name, author, version, etc."
msgstr ""

# cfffc77de88946bc8b7c18e87d476a6b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:201
msgid ""
"A single editor plugin can provide multiple tools each tool corresponds to a"
" single button in the toolbar and entry in the :guilabel:`Plugins` menu in "
"the editor. These can have sub-menus in case the tool has multiple related "
"actions."
msgstr ""

# 597e535c9eab41dcb44505003ac868d2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:205
msgid ""
"The tools must all be defined in the file ``main.py`` in your plugin. Every "
"tool is a class that inherits from the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class. Let's look at "
"``main.py`` from the demo plugin, the source code is heavily commented and "
"should be self-explanatory. Read the API documents of the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class for more details."
msgstr ""

# 9b0afee04e0e49109eb7591bbea515f8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:215
msgid ""
"Here we will see the definition of a single tool that will multiply all font"
" sizes in the book by a number provided by the user. This tool demonstrates "
"various important concepts that you will need in developing your own "
"plugins, so you should read the (heavily commented) source code carefully."
msgstr ""

# 6fa5389a659b4edfa860fc44e51f83a6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:223
msgid ""
"Let's break down ``main.py``. We see that it defines a single tool, named "
"*Magnify fonts*. This tool will ask the user for a number and multiply all "
"font sizes in the book by that number."
msgstr ""

# 9a91bbd3f0314835815c98c869b1d05f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:227
msgid ""
"The first important thing is the tool name which you must set to some "
"relatively unique string as it will be used as the key for this tool."
msgstr ""

# 947d1ceb50aa4631b1f2db44c84bd038
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:230
msgid ""
"The next important entry point is the "
":meth:`calibre.gui2.tweak_book.plugin.Tool.create_action`. This method "
"creates the QAction objects that appear in the plugins toolbar and plugin "
"menu. It also, optionally, assigns a keyboard shortcut that the user can "
"customize. The triggered signal from the QAction is connected to the "
"ask_user() method that asks the user for the font size multiplier, and then "
"runs the magnification code."
msgstr ""

# e9ca769e69d442f0800438c2728d7155
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:238
msgid ""
"The magnification code is well commented and fairly simple. The main things "
"to note are that you get a reference to the editor window as ``self.gui`` "
"and the editor *Boss* as ``self.boss``. The *Boss* is the object that "
"controls the editor user interface. It has many useful methods, that are "
"documented in the :class:`calibre.gui2.tweak_book.boss.Boss` class."
msgstr ""

# 3afa5e727429415c850168805a10a695
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:244
msgid ""
"Finally, there is ``self.current_container`` which is a reference to the "
"book being edited as a "
":class:`calibre.ebooks.oeb.polish.container.Container` object. This "
"represents the book as a collection of its constituent HTML/CSS/image files "
"and has convenience methods for doing many useful things. The container "
"object and various useful utility functions that can be reused in your "
"plugin code are documented in :ref:`polish_api`."
msgstr ""

# dd60e8bf70aa4af79d1c552d22022a53
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:253
msgid "Adding translations to your plugin"
msgstr ""

# 5106bd198cba4555a4765f4804a246e0
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:255
msgid ""
"You can have all the user interface strings in your plugin translated and "
"displayed in whatever language is set for the main calibre user interface."
msgstr ""

# aa10168fd841413d8e5ddd47e3ea7a38
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:258
msgid ""
"The first step is to go through your plugin's source code and mark all user "
"visible strings as translatable, by surrounding them in _(). For example::"
msgstr ""

# ee054fbf22124c34a860ab8e2bf1e561
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:263
msgid ""
"Then use some program to generate .po files from your plugin source code. "
"There should be one .po file for every language you want to translate into. "
"For example: de.po for German, fr.po for French and so on. You can use the "
"`poedit <http://www.poedit.net/>`_ program for this."
msgstr ""

# 95282c1808e24eca8e2925b7add3be01
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:268
msgid ""
"Send these .po files to your translators. Once you get them back, compile "
"them into .mo files. You can again use poedit for that, or just do::"
msgstr ""

# 3847aa8e0bf54209befdd2f5065ad44e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:273
msgid "Put the .mo files into the ``translations`` folder in your plugin."
msgstr ""

# d8eb7b92843047ea8d70445ac53d255d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:275
msgid ""
"The last step is to simply call the function `load_translations()` at the "
"top of your plugin's .py files. For performance reasons you should only call"
" this function in those .py files that actually have translatable strings. "
"So in a typical User Interface plugin you would call it at the top of "
"``ui.py`` but not ``__init__.py``."
msgstr ""

# e72cafebcf9a4323991f29f1bd136da0
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:281
msgid ""
"You can test the translations of your plugins by changing the user interface"
" language in calibre under Preferences->Look & Feel or by running calibre "
"like this::"
msgstr ""

# 684bb89e1caf4918b7cd54c899ff05ae
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:287
msgid ""
"Replace ``de`` with the language code of the language you want to test."
msgstr ""

# 70e38f1812334126b469323c7ebeb22f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:290
msgid "The plugin API"
msgstr ""

# 23e991a9fada41d9a8724464074bd43d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:292
msgid ""
"As you may have noticed above, a plugin in |app| is a class. There are "
"different classes for the different types of plugins in |app|. Details on "
"each class, including the base class of all plugins can be found in "
":ref:`plugins`."
msgstr ""

# 34d5d420b93f4810a5976ac3c90df6b5
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:295
msgid ""
"Your plugin is almost certainly going to use code from |app|. To learn how "
"to find various bits of functionality in the |app| code base, read the "
"section on the |app| :ref:`code_layout`."
msgstr ""

# 18f97cd85c5e4badbc6b5deec6d0421d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:300
msgid "Debugging plugins"
msgstr ""

# 6118a61449d9423f99d0eda943dbc8ce
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:302
msgid ""
"The first, most important step is to run |app| in debug mode. You can do "
"this from the command line with::"
msgstr ""

# ad2ed84b2ddc4ec2a8fab7cdf31fa5b6
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:306
msgid ""
"Or from within calibre by right-clicking the preferences button or using the"
" `Ctrl+Shift+R` keyboard shortcut."
msgstr ""

# 1f12a6da55734fde836840d501c1737e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:308
msgid ""
"When running from the command line, debug output will be printed to the "
"console, when running from within |app| the output will go to a txt file."
msgstr ""

# be8c2de4343c451383d0dd9242ba1297
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:310
msgid ""
"You can insert print statements anywhere in your plugin code, they will be "
"output in debug mode. Remember, this is python, you really shouldn't need "
"anything more than print statements to debug ;) I developed all of |app| "
"using just this debugging technique."
msgstr ""

# c2d26e29175042a19db69b8f72b13b9a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:312
msgid ""
"You can quickly test changes to your plugin by using the following command "
"line::"
msgstr ""

# c7bc99be6e9f43278275a098ede830e5
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:317
msgid ""
"This will shutdown a running calibre, wait for the shutdown to complete, "
"then update your plugin in |app| and relaunch |app|."
msgstr ""

# f1ca9868647649eaafbc8c51b4177507
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:320
msgid "More plugin examples"
msgstr ""

# c2378c042a1b43b684b0c0507165692e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:322
msgid ""
"You can find a list of many, sophisticated |app| plugins `here "
"<http://www.mobileread.com/forums/showthread.php?t=118764>`_."
msgstr ""

# 043f9442b60a43518b58aecf9563ff69
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:325
msgid "Sharing your plugins with others"
msgstr ""

# 4208c560e3284725a6358cc0edb1fc77
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:327
msgid ""
"If you would like to share the plugins you have created with other users of "
"|app|, post your plugin in a new thread in the `calibre plugins forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=237>`_."
msgstr ""
