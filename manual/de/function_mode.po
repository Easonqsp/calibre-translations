# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Ettore Atalan <atalanttore@googlemail.com>, 2014
# Rouven Wachhaus <rouvenwachhaus@live.de>, 2015
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-10 10:07+0530\n"
"PO-Revision-Date: 2015-02-27 17:50+0000\n"
"Last-Translator: Rouven Wachhaus <rouvenwachhaus@live.de>\n"
"Language-Team: German (http://www.transifex.com/projects/p/calibre/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 57838cce46c646c1ac59db6ff99d78ff
#: ../../home/kovid/work/calibre/manual/function_mode.rst:2
msgid "Function Mode for Search & Replace in the Editor"
msgstr "Funktionsmodus f√ºr Suchen & Ersetzen im Editor"

# fc9be8220f69422ab07613bc24ed0380
#: ../../home/kovid/work/calibre/manual/function_mode.rst:4
msgid ""
"The Search & Replace tool in the editor support a *function mode*. In this "
"mode, you can combine regular expressions (see :doc:`regexp`) with "
"arbitrarily powerful python functions to do all sorts of advanced text "
"processing."
msgstr ""

# 91d11da3f53342c9b7cdd763d117a6ee
#: ../../home/kovid/work/calibre/manual/function_mode.rst:9
msgid ""
"In the standard *regexp* mode for search and replace, you specify both a "
"regular expression to search for as well as a template that is used to "
"replace all found matches. In function mode, instead of using a fixed "
"template, you specify an arbitrary function, in the `python programming "
"language <https://docs.python.org/2.7/>`_. This allows you to do lots of "
"things that are not possible with simple templates."
msgstr ""

# 837c552e337340959416bd47d22978a0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:16
msgid ""
"Techniques for using function mode and the syntax will be described by means"
" of examples, showing you how to create functions to perform progressively "
"more complex tasks."
msgstr ""

# 2bb83680266140b0b34293d9bc9321bb
#: ../../home/kovid/work/calibre/manual/function_mode.rst:26
msgid "Automatically fixing the case of headings in the document"
msgstr ""

# 8b9bd743a4d14f95a89526ab675ca9b9
#: ../../home/kovid/work/calibre/manual/function_mode.rst:28
msgid ""
"Here, we will leverage one of the builtin functions in the editor to "
"automatically change the case of all text inside heading tags to title "
"case::"
msgstr ""

# ce8c6d8f7b8e46eaa1a51432225a8abe
#: ../../home/kovid/work/calibre/manual/function_mode.rst:33
msgid ""
"For the function, simply choose the :guilabel:`Title-case text (ignore "
"tags)` builtin function. The will change titles that look like: ``<h1>some "
"TITLE</h1>`` to ``<h1>Some Title</h1>``. It will work even if there are "
"other HTML tags inside the heading tags."
msgstr ""

# 6c2c7ce149ef48dfa74b216e4e5954ba
#: ../../home/kovid/work/calibre/manual/function_mode.rst:40
msgid "Your first custom function - smartening hyphens"
msgstr ""

# 1fad1bc2bd8644af95608be748ce191e
#: ../../home/kovid/work/calibre/manual/function_mode.rst:42
msgid ""
"The real power of function mode comes from being able to create your own "
"functions to process text in arbitrary ways. The Smarten Punctuation tool in"
" the editor leaves individual hyphens alone, so you can use the this "
"function to replace them with em-dashes."
msgstr ""

# eb761e4e580a41ec83e3d4b12fc54c72
#: ../../home/kovid/work/calibre/manual/function_mode.rst:47
msgid ""
"To create a new function, simply click the Create/Edit button to create a "
"new function and copy the python code from below."
msgstr ""

# 99db7c290ad54614a401758e42f7a787
#: ../../home/kovid/work/calibre/manual/function_mode.rst:55
msgid ""
"Every Search & Replace custom function must have a unique name and consist "
"of a python function named replace, that accepts all the arguments shown "
"above. For the moment, we wont worry about all the different arguments to "
"``replace()`` function. Just focus on the ``match`` argument. It represents "
"a match when running a search and replace. Its full documentation in "
"available `here <https://docs.python.org/2.7/library/re.html#match-"
"objects>`_. ``match.group()`` simply returns all the matched text and all we"
" do is replace hyphens in that text with em-dashes, first replacing double "
"hyphens and then single hyphens."
msgstr ""

# 15e596f6816d4ca0b4f59b98d5a00603
#: ../../home/kovid/work/calibre/manual/function_mode.rst:65
msgid "Use this function with the find regular expression::"
msgstr ""

# 067ec115a8cb4ff0ac8bc6c760207411
#: ../../home/kovid/work/calibre/manual/function_mode.rst:69
msgid ""
"And it will replace all hyphens with em-dashes, but only in actual text and "
"not inside HTML tag definitions."
msgstr ""

# 85d7694bada04955859e65d4d1742f1b
#: ../../home/kovid/work/calibre/manual/function_mode.rst:74
msgid ""
"The power of function mode - using a spelling dictionary to fix mis-"
"hyphenated words"
msgstr ""

# 0dcb0e9b0ae8411eb23bdfd4d30326de
#: ../../home/kovid/work/calibre/manual/function_mode.rst:76
msgid ""
"Often, ebooks created from scans of printed books contain mis-hyphenated "
"words -- words that were split at the end of the line on the printed page. "
"We will write a simple function to automatically find and fix such words."
msgstr ""

# 370d7ff6003045f781419ee9e6fbe181
#: ../../home/kovid/work/calibre/manual/function_mode.rst:101
msgid "Use this function with the same find expression as before, namely::"
msgstr ""

# 87a7aa4c23974cd089301ad7bc525996
#: ../../home/kovid/work/calibre/manual/function_mode.rst:105
msgid ""
"And it will magically fix all mis-hyphenated words in the text of the book. "
"The main trick is to use one of the useful extra arguments to the replace "
"function, ``dictionaries``.  This refers to the dictionaries the editor "
"itself uses to spell check text in the book. What this function does is look"
" for words separated by a hyphen, remove the hyphen and check if the "
"dictionary recognizes the composite word, if it does, the original words are"
" replaced by the hyphen free composite word."
msgstr ""

# 7c803302fae44ba19548e2218397240d
#: ../../home/kovid/work/calibre/manual/function_mode.rst:113
msgid ""
"Note that one limitation of this technique is it will only work for mono-"
"lingual books, because, by default, ``dictionaries.recognized()`` uses the "
"main language of the book."
msgstr ""

# c38d2bea6d664e2495e365aa48248f4f
#: ../../home/kovid/work/calibre/manual/function_mode.rst:119
msgid "Auto numbering sections"
msgstr "Automatische Abschnittsnumerierung"

# 8afb44fac85c483cbfc2c9b3de25611c
#: ../../home/kovid/work/calibre/manual/function_mode.rst:121
msgid ""
"Now we will see something a little different. Suppose your HTML file has "
"many sections, each with a heading in an :code:`<h2>` tag that looks like "
":code:`<h2>Some text</h2>`. You can create a custom function that will "
"automatically number these headings with consecutive section numbers, so "
"that they look like :code:`<h2>1. Some text</h2>`."
msgstr ""

# bdb241fbc4534400a3291352c0579959
#: ../../home/kovid/work/calibre/manual/function_mode.rst:137
msgid "Use it with the find expression::"
msgstr ""

# 90181740423646de9faedc07b3fbab43
#: ../../home/kovid/work/calibre/manual/function_mode.rst:141
msgid ""
"Place the cursor at the top of the file and click :guilabel:`Replace all`."
msgstr ""

# f5150a89d867447fab6066d45345a495
#: ../../home/kovid/work/calibre/manual/function_mode.rst:143
msgid ""
"This function uses another of the useful extra arguments to ``replace()``: "
"the ``number`` argument. When doing a :guilabel:`Replace All` number is "
"automatically incremented for every successive match."
msgstr ""

# 2945148b963640c58cb855370b4aaa23
#: ../../home/kovid/work/calibre/manual/function_mode.rst:147
msgid ""
"Another new feature is the use of ``replace.file_order`` -- setting that to "
"``'spine'`` means that if this search is run on multiple HTML files, the "
"files are processed in the order in which they appear in the book. See "
":ref:`file_order_replace_all` for details."
msgstr ""

# ee4734c34a0d4880aca22579fbefdce1
#: ../../home/kovid/work/calibre/manual/function_mode.rst:154
msgid "Auto create a Table of Contents"
msgstr "Inhaltsverzeichnis automatisch erstellen"

# 50789829bb16458b81c16444d14d6b62
#: ../../home/kovid/work/calibre/manual/function_mode.rst:156
msgid ""
"Finally, lets try something a little more ambitious. Suppose your book has "
"headings in ``h1`` and ``h2`` tags that look like ``<h1 id=\"someid\">Some "
"Text</h1>``. We will auto-generate an HTML Table of Contents based on these "
"headings. Create the custom function below:"
msgstr ""

# e6140ba0da6c47a0990c90d23ea493c7
#: ../../home/kovid/work/calibre/manual/function_mode.rst:199
msgid "And use it with the find expression::"
msgstr ""

# be5581eb6a99425981298b21036fb379
#: ../../home/kovid/work/calibre/manual/function_mode.rst:203
msgid ""
"Run the search on :guilabel:`All text files` and at the end of the search, a"
" window will popup with \"Debug Output from your function\" which will have "
"the HTML Table of Contents, ready to be pasted into :file:`toc.html`."
msgstr ""

# 0414f01e12074a3abb8cdfe292ad4219
#: ../../home/kovid/work/calibre/manual/function_mode.rst:207
msgid ""
"The function above is heavily commented, so it should be easy to follow. The"
" key new feature is the use of another useful extra argument to the "
"``replace()`` function, the ``data`` object. The ``data`` object is a python"
" *dict* that persists between all successive invocations of ``replace()`` "
"during a single :guilabel:`Replace All` operation."
msgstr ""

# 9b0dfbe4308142efb12cacfbbac5d34b
#: ../../home/kovid/work/calibre/manual/function_mode.rst:213
msgid ""
"Another new feature is the use of ``call_after_last_match`` -- setting that "
"to ``True`` on the ``replace()`` function means that the editor will call "
"``replace()`` one extra time after all matches have been found. For this "
"extra call, the match object will be ``None``."
msgstr ""

# 607f2a0113b94227b23e652f67be04f8
#: ../../home/kovid/work/calibre/manual/function_mode.rst:218
msgid ""
"This was just a demonstration to show you the power of function mode, if you"
" really needed to generate a Table of Contents from headings in your book, "
"you would be better off using the dedicated Table of Contents tool in "
":guilabel:`Tools->Table of Contents`."
msgstr ""

# 2b5497d777104608ab07d5d7db998f88
#: ../../home/kovid/work/calibre/manual/function_mode.rst:224
msgid "The API for the function mode"
msgstr "Die API f√ºr den Funktionsmodus"

# b3219f990afe436a9b0e6aa607b4a36b
#: ../../home/kovid/work/calibre/manual/function_mode.rst:226
msgid ""
"All function mode functions must be python functions named replace, with the"
" following signature::"
msgstr ""

# 54f2657c49504751a8aa977861541ae7
#: ../../home/kovid/work/calibre/manual/function_mode.rst:232
msgid ""
"When a find/replace is run, for every match that is found, the ``replace()``"
" function will be called, it must return the replacement string for that "
"match. If no replacements are to be done, it should return ``match.group()``"
" which is the original string. The various arguments to the ``replace()`` "
"function are documented below."
msgstr ""

# d910499804384904aaadbf5916b3da4a
#: ../../home/kovid/work/calibre/manual/function_mode.rst:239
msgid "The ``match`` argument"
msgstr ""

# cd82cebf91f845d782ea78c8b91da3e7
#: ../../home/kovid/work/calibre/manual/function_mode.rst:241
msgid ""
"The ``match`` argument represents the currently found match. It is a `python"
" Match object <https://docs.python.org/2.7/library/re.html#match-objects>`_."
" It's most useful method is ``group()`` which can be used to get the matched"
" text corresponding to individual capture groups in the search regular "
"expression."
msgstr ""

# 801067ef0685457791a1eb698f5359c0
#: ../../home/kovid/work/calibre/manual/function_mode.rst:248
msgid "The ``number`` argument"
msgstr ""

# c89a329183284a598d10dd8e78077e66
#: ../../home/kovid/work/calibre/manual/function_mode.rst:250
msgid ""
"The ``number`` argument is the number of the current match. When you run "
":guilabel:`Replace All`, every successive match will cause ``replace()`` to "
"be called with an increasing number. The first match has number 1."
msgstr ""

# 213e329fdf22432cbd6325af44aa13b6
#: ../../home/kovid/work/calibre/manual/function_mode.rst:255
msgid "The ``file_name`` argument"
msgstr ""

# c2fc24932dfb428c817d10113c132c39
#: ../../home/kovid/work/calibre/manual/function_mode.rst:257
msgid ""
"This is the filename of the file in which the current match was found. When "
"searching inside marked text, the ``file_name`` is empty. The ``file_name`` "
"is in canonical form, a path relative to the root of the book, using ``/`` "
"as the path separator."
msgstr ""

# 0c8d2c4f2af74298b1f2dd9abb621045
#: ../../home/kovid/work/calibre/manual/function_mode.rst:263
msgid "The ``metadata`` argument"
msgstr ""

# a30e8c71f14a40b6a6852b667039b813
#: ../../home/kovid/work/calibre/manual/function_mode.rst:265
msgid ""
"This represents the metadata of the current book, such as title, authors, "
"language, etc. It is an object of class "
":class:`calibre.ebooks.metadata.book.base.Metadata`. Useful attributes "
"include, ``title``, ``authors`` (a list of authors) and ``language`` (the "
"language code)."
msgstr ""

# 40c44b1ed0f343d89e0b046c9dc65399
#: ../../home/kovid/work/calibre/manual/function_mode.rst:271
msgid "The ``dictionaries`` argument"
msgstr ""

# fd2068fd2b8e4276849fcf65b7346e9f
#: ../../home/kovid/work/calibre/manual/function_mode.rst:273
msgid ""
"This represents the collection of dictionaries used for spell checking the "
"current book. It's most useful method is ``dictionaries.recognized(word)`` "
"which will return ``True`` if the passed in word is recognized by the "
"dictionary for the current book's language."
msgstr ""

# f50c390966364f508f0857c0b8f78c7d
#: ../../home/kovid/work/calibre/manual/function_mode.rst:279
msgid "The ``data`` argument"
msgstr ""

# c7b861164222486a843d4fccaf6365ec
#: ../../home/kovid/work/calibre/manual/function_mode.rst:281
msgid ""
"This a simple python ``dict``. When you run :guilabel:`Replace All`, every "
"successive match will cause ``replace()`` to be called with the same "
"``dict`` as data. You can thus use it to store arbitrary data between "
"invocations of ``replace()`` during a :guilabel:`Replace All` operation."
msgstr ""

# 1c6f7ed334f34999950354b0de0a0764
#: ../../home/kovid/work/calibre/manual/function_mode.rst:288
msgid "The ``functions`` argument"
msgstr ""

# 4decca621d1947bd9741e101743bf0e6
#: ../../home/kovid/work/calibre/manual/function_mode.rst:290
msgid ""
"The ``functions`` argument gives you access to all other user defined "
"functions. This is useful for code re-use. You can define utility functions "
"in one place and re-use them in all your other functions. For example, "
"suppose you create a function name ``My Function`` like this:"
msgstr ""

# ddd9366e95c04fcfbbcaa0d0e6171713
#: ../../home/kovid/work/calibre/manual/function_mode.rst:303
msgid ""
"Then, in another function, you can access the ``utility()`` function like "
"this:"
msgstr ""

# da6dcb4e76ec4da0adf7f94bef152eb7
#: ../../home/kovid/work/calibre/manual/function_mode.rst:311
msgid ""
"You can also use the functions object to store persistent data, that can be "
"re-used by other functions. For example, you could have one function that "
"when run with :guilabel:`Replace All` collects some data and another "
"function that uses it when it is run afterwards. Consider the following two "
"functions:"
msgstr ""

# e3d55f902403475cb2bfd03c8accb274
#: ../../home/kovid/work/calibre/manual/function_mode.rst:331
msgid "Debugging your functions"
msgstr ""

# 5379416513dd4a5285a2ae69a411b54d
#: ../../home/kovid/work/calibre/manual/function_mode.rst:333
msgid ""
"You can debug the functions you create by using the standard ``print()`` "
"function from python. The output of print will be displayed in a popup "
"window after the Find/replace has completed. You saw an example of using "
"``print()`` to output an entire table of contents above."
msgstr ""

# 26fc757c89704c218e9cf67ec30c307b
#: ../../home/kovid/work/calibre/manual/function_mode.rst:341
msgid "Choose file order when running on multiple HTML files"
msgstr ""

# 56063d48adf745db924fec7d03ec9472
#: ../../home/kovid/work/calibre/manual/function_mode.rst:343
msgid ""
"When you run a :guilabel:`Replace All` on multiple HTML files, the order in "
"which the files are processes depends on what files you have open for "
"editing. You can force the search to process files in the order in which the"
" appear by setting the ``file_order`` attribute on your function, like this:"
msgstr ""

# 79b2a9c9a0b247459b228d2aeafe1004
#: ../../home/kovid/work/calibre/manual/function_mode.rst:355
msgid ""
"``file_order`` accepts two values, ``spine`` and ``spine-reverse`` which "
"cause the search to process multiple files in the order they appear in the "
"book, either forwards or backwards, respectively."
msgstr ""

# 6e803a5b54cf49629f192ef2bcc9e57f
#: ../../home/kovid/work/calibre/manual/function_mode.rst:360
msgid ""
"Having your function called an extra time after the last match is found"
msgstr ""

# 3ed2c7940d9c4ca5995b9b1f92c3861f
#: ../../home/kovid/work/calibre/manual/function_mode.rst:362
msgid ""
"Sometimes, as in the auto generate table of contents example above, it is "
"useful to have your function called an extra time after the last match is "
"found. You can do this by setting the ``call_after_last_match`` attribute on"
" your function, like this:"
msgstr ""
