# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Paulo_Neto <layoutbr@lexxa.com.br>, 2014
# Leonardo Augusto Suzin <leonardosuzin@gmail.com>, 2014
# Paulo_Neto <layoutbr@lexxa.com.br>, 2014
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-26 09:31+0530\n"
"PO-Revision-Date: 2014-12-29 02:00+0000\n"
"Last-Translator: Leonardo Augusto Suzin <leonardosuzin@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/projects/p/calibre/language/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

# 353be82320b64eb89c81d9a284e15929
#: ../../home/kovid/work/calibre/manual/xpath.rst:4
msgid "XPath Tutorial"
msgstr "Tutorial do XPath"

# 136c7fd9265e45dab1d704e9541c88bd
#: ../../home/kovid/work/calibre/manual/xpath.rst:6
msgid ""
"In this tutorial, you will be given a gentle introduction to `XPath "
"<http://en.wikipedia.org/wiki/XPath>`_, a query language that can be used to"
" select arbitrary parts of `HTML <http://en.wikipedia.org/wiki/HTML>`_ "
"documents in calibre. XPath is a widely used standard, and googling it will "
"yield a ton of information. This tutorial, however, focuses on using XPath "
"for ebook related tasks like finding chapter headings in an unstructured "
"HTML document."
msgstr ""

# 84434b554c5046caaf9e0d4598637d33
#: ../../home/kovid/work/calibre/manual/xpath.rst:0
msgid "Contents"
msgstr "Conteúdo"

# a9ead016201c49a683613582483b53d3
#: ../../home/kovid/work/calibre/manual/xpath.rst:19
msgid "Selecting by tagname"
msgstr "Selecionar por nome de etiqueta"

# 07316c7ed2504b7994f0bf6b94ffaa7d
#: ../../home/kovid/work/calibre/manual/xpath.rst:21
msgid ""
"The simplest form of selection is to select tags by name. For example, "
"suppose you want to select all the ``<h2>`` tags in a document. The XPath "
"query for this is simply::"
msgstr ""

# 3dda45db57724065ad1c0defdcb632d6
#: ../../home/kovid/work/calibre/manual/xpath.rst:27
msgid ""
"The prefix `//` means *search at any level of the document*. Now suppose you"
" want to search for ``<span>`` tags that are inside ``<a>`` tags. That can "
"be achieved with::"
msgstr ""

# 2b83aa250612490d8e4a4a6383acbcf7
#: ../../home/kovid/work/calibre/manual/xpath.rst:33
msgid ""
"If you want to search for tags at a particular level in the document, change"
" the prefix::"
msgstr "Se você quiser buscar por etiquetas em um determinado nível do documento, mude o prefixo::"

# 7664b15a2bbb41c9b9680f38cd2d117c
#: ../../home/kovid/work/calibre/manual/xpath.rst:39
msgid ""
"This will match only ``<p>A very short ebook to demonstrate the use of "
"XPath.</p>`` in the :ref:`sample_ebook` but not any of the other ``<p>`` "
"tags. The ``h:`` prefix in the above examples is needed to match XHTML tags."
" This is because internally, calibre represents all content as XHTML. In "
"XHTML tags have a *namespace*, and ``h:`` is the namespace prefix for HTML "
"tags."
msgstr ""

# 376e3b68e49f4716990a00690eeb79f3
#: ../../home/kovid/work/calibre/manual/xpath.rst:45
msgid ""
"Now suppose you want to select both ``<h1>`` and ``<h2>`` tags. To do that, "
"we need a XPath construct called *predicate*. A :dfn:`predicate` is simply a"
" test that is used to select tags. Tests can be arbitrarily powerful and as "
"this tutorial progresses, you will see more powerful examples. A predicate "
"is created by enclosing the test expression in square brackets::"
msgstr ""

# d4ed7743de054a4fb5b822318b8a3e6b
#: ../../home/kovid/work/calibre/manual/xpath.rst:53
msgid ""
"There are several new features in this XPath expression. The first is the "
"use of the wildcard ``*``. It means *match any tag*. Now look at the test "
"expression ``name()='h1' or name()='h2'``. :term:`name()` is an example of a"
" *built-in function*. It simply evaluates to the name of the tag. So by "
"using it, we can select tags whose names are either `h1` or `h2`. Note that "
"the :term:`name()` function ignores namespaces so that there is no need for "
"the ``h:`` prefix. XPath has several useful built-in functions. A few more "
"will be introduced in this tutorial."
msgstr "Existem vários novos recursos nesta expressão do XPath. A primeira é o uso do caractere universal ``*``. Significa *corresponder qualquer etiqueta*. Agora veja a expressão de teste``name()='h1' ou name()='h2'``. :term:`name()` é um exemplo de uma *função interna*. Ela simplesmente resulta no nome da etiqueta. Então, usando-a, podemos selecionar etiquetas cujos nomes são `h1` ou `h2`. Observe que a função :term:`name()` ignora espaços de nomes de modo a que não há necessidade para o prefixo ``h:``. O XPath tem várias funções internas úteis. Um pouco mais será apresentado neste tutorial."

# 4dde4ab6d1ed44d3a3aaae054d92d0a1
#: ../../home/kovid/work/calibre/manual/xpath.rst:62
msgid "Selecting by attributes"
msgstr "Selecionar por atributos"

# 2d8e39325d5a4a90920e44fc8f84111b
#: ../../home/kovid/work/calibre/manual/xpath.rst:64
msgid ""
"To select tags based on their attributes, the use of predicates is "
"required::"
msgstr "Para selecionar etiquetas baseadas em seus conteúdos, é necessário o uso de predicados: "

# 548ba4ab62af411b80f9035a3eb4d915
#: ../../home/kovid/work/calibre/manual/xpath.rst:70
msgid ""
"Here, the ``@`` operator refers to the attributes of the tag. You can use "
"some of the `XPath built-in functions`_ to perform more sophisticated "
"matching on attribute values."
msgstr ""

# 6a3bbd967f8245a980ed1cc6c001f82f
#: ../../home/kovid/work/calibre/manual/xpath.rst:76
msgid "Selecting by tag content"
msgstr "Selecionar por conteúdo de etiqueta"

# 0ee1924d06e84068a87c406b07760e83
#: ../../home/kovid/work/calibre/manual/xpath.rst:78
msgid ""
"Using XPath, you can even select tags based on the text they contain. The "
"best way to do this is to use the power of *regular expressions* via the "
"built-in function :term:`re:test()`::"
msgstr ""

# e6428fefbed245f191f553abc254be82
#: ../../home/kovid/work/calibre/manual/xpath.rst:84
msgid ""
"Here the ``.`` operator refers to the contents of the tag, just as the ``@``"
" operator referred to its attributes."
msgstr ""

# 20d69f91d08f46b0a6a54d6de7ac9126
#: ../../home/kovid/work/calibre/manual/xpath.rst:90
msgid "Sample ebook"
msgstr "Exemplo de e-book"

# 8583cbc310da483fb6c96f3772645c66
#: ../../home/kovid/work/calibre/manual/xpath.rst:96
msgid "XPath built-in functions"
msgstr "Funções internas do XPath"

# 8d27bf22eabd4cb5a4ae7e8beabd5659
#: ../../home/kovid/work/calibre/manual/xpath.rst:99
msgid "name()"
msgstr "name()"

# b92eaf85e38c40cfb0c34c0c66c50bbb
#: ../../home/kovid/work/calibre/manual/xpath.rst:101
msgid "The name of the current tag."
msgstr "O nome da etiqueta atual."

# 415b63b4cd3c4ecbac5299969ec857e4
#: ../../home/kovid/work/calibre/manual/xpath.rst:102
msgid "contains()"
msgstr "contains()"

# 37f1704ea0434324a4f4e635ab3acd1e
#: ../../home/kovid/work/calibre/manual/xpath.rst:104
msgid "``contains(s1, s2)`` returns `true` if s1 contains s2."
msgstr "``contains(s1, s2)`` retorna `true` se s1 contém s2."

# 528ab873159845f5b0071e5c97008058
#: ../../home/kovid/work/calibre/manual/xpath.rst:105
msgid "re:test()"
msgstr "re:test()"

# 8c29b1ba3e8440b19a946a9675a06ec1
#: ../../home/kovid/work/calibre/manual/xpath.rst:107
msgid ""
"``re:test(src, pattern, flags)`` returns `true` if the string `src` matches "
"the regular expression `pattern`. A particularly useful flag is ``i``, it "
"makes matching case insensitive. A good primer on the syntax for regular "
"expressions can be found at `regexp syntax "
"<https://docs.python.org/2.7/library/re.html>`_"
msgstr ""
