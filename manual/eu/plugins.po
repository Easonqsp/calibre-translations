# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-10 10:07+0530\n"
"PO-Revision-Date: 2015-03-10 04:38+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Basque (http://www.transifex.com/projects/p/calibre/language/eu/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: eu\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# c820a5aab2d14da5b04b3452c2511746
#: ../../home/kovid/work/calibre/manual/plugins.rst:4
msgid "API Documentation for plugins"
msgstr ""

# 13d9e9e485424eb9b6abb7b8af2dff88
#: ../../home/kovid/work/calibre/manual/plugins.rst:9
msgid ""
"Defines various abstract base classes that can be subclassed to create "
"powerful plugins. The useful classes are:"
msgstr ""

# 8efa504a247d4a62afba81e4d6f87d8c
#: ../../home/kovid/work/calibre/manual/plugins.rst:19
msgid "Plugin"
msgstr ""

# d09ab87efced4fc6ac293f08e300a48b
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:1
msgid "A calibre plugin. Useful members include:"
msgstr ""

# d8b76aeceb0c493e8991292ef9bbe203
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:4
msgid "``self.plugin_path``: Stores path to the zip file that contains"
msgstr ""

# cd4d9552dc4c4f52b4b255bfe77b6eb3
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:4
msgid "this plugin or None if it is a builtin plugin"
msgstr ""

# 1069d261995d45a0bfd0a398b63e4faa
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:7
msgid "``self.site_customization``: Stores a customization string entered"
msgstr ""

# af6b42b58d5d40bf82f9d716a3ec2284
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:7
msgid "by the user."
msgstr ""

# 66cef8fbfebd4c2ea40c92f08e920b6c
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:9
msgid "Methods that should be overridden in sub classes:"
msgstr ""

# bd0ad9a7d1424cc082ecf6b99bf5e3e5
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:11
msgid ":meth:`initialize`"
msgstr ""

# 8ebec674f19a40b69bf1296a3d40e87a
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:12
msgid ":meth:`customization_help`"
msgstr ""

# 82e49fd979ed4cb7a296bfb43aba8cd9
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:14
msgid "Useful methods:"
msgstr ""

# 2d93e60065f5421995602bbfeb5204ed
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:16
msgid ":meth:`temporary_file`"
msgstr ""

# af4e118cd290403581dd42556427da96
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:17
msgid ":meth:`__enter__`"
msgstr ""

# d4667ce43fc747bf971eed39180821e6
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin:18
msgid ":meth:`load_resources`"
msgstr ""

# 08f6dae3effe4e9294ba68bcc762fcf7
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.supported_platforms:1
msgid ""
"List of platforms this plugin works on. For example: ``['windows', 'osx', "
"'linux']``"
msgstr ""

# b9ec8fc151874179b4a1bd2f267d9b56
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.name:1
msgid ""
"The name of this plugin. You must set it something other than Trivial Plugin"
" for it to work."
msgstr ""

# cb0e77edcc2a4a59849712da6aa9c7af
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.version:1
msgid "The version of this plugin as a 3-tuple (major, minor, revision)"
msgstr ""

# 06e762a7e5f14ef3b3b33270cfbff356
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.description:1
msgid "A short string describing what this plugin does"
msgstr ""

# a693d7b09e134f6198516583019d379d
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.author:1
msgid "The author of this plugin"
msgstr ""

# 6289111977634dff9c86b3a96e250e61
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.priority:1
msgid ""
"When more than one plugin exists for a filetype, the plugins are run in "
"order of decreasing priority i.e. plugins with higher priority will be run "
"first. The highest possible priority is ``sys.maxint``. Default priority is "
"1."
msgstr ""

# ee93de01e825455b9602acc3af4b7223
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.minimum_calibre_version:1
msgid "The earliest version of calibre this plugin requires"
msgstr ""

# be840af567334db3ad531e5907d1b7be
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.can_be_disabled:1
msgid ""
"If False, the user will not be able to disable this plugin. Use with care."
msgstr ""

# 040a54c3e45144629b27026b75cd64cb
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.type:1
msgid "The type of this plugin. Used for categorizing plugins in the GUI"
msgstr ""

# 36596c6d39b24c388ced694a82bbc58a
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.initialize:1
msgid ""
"Called once when calibre plugins are initialized.  Plugins are re-"
"initialized every time a new plugin is added. Also note that if the plugin "
"is run in a worker process, such as for adding books, then the plugin will "
"be initialized for every new worker process."
msgstr ""

# 1002fd54651d4aef9691ad28abc57eda
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.initialize:6
msgid ""
"Perform any plugin specific initialization here, such as extracting "
"resources from the plugin zip file. The path to the zip file is available as"
" ``self.plugin_path``."
msgstr ""

# 05643460d05b4aa382e114159e6264c4
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.initialize:10
msgid ""
"Note that ``self.site_customization`` is **not** available at this point."
msgstr ""

# d99e2e044c7244c99d6917677560799d
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.config_widget:1
msgid ""
"Implement this method and :meth:`save_settings` in your plugin to use a "
"custom configuration dialog, rather then relying on the simple string based "
"default customization."
msgstr ""

# 35c68e16999a423a975887616a5a7d00
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.config_widget:5
msgid ""
"This method, if implemented, must return a QWidget. The widget can have an "
"optional method validate() that takes no arguments and is called immediately"
" after the user clicks OK. Changes are applied if and only if the method "
"returns True."
msgstr ""

# e82f810c7129466a822bff8f3e094f07
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.config_widget:10
msgid ""
"If for some reason you cannot perform the configuration at this time, return"
" a tuple of two strings (message, details), these will be displayed as a "
"warning dialog to the user and the process will be aborted."
msgstr ""

# 841e3c8a18734b9996d24a8a8c5f9ea0
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.save_settings:1
msgid "Save the settings specified by the user with config_widget."
msgstr ""

# 6618ef8a62894267bd17594cc5797e8f
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.save_settings:3
msgid "The widget returned by :meth:`config_widget`."
msgstr ""

# 0251448dedbb48029d127a823faed5eb
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.do_user_config:1
msgid ""
"This method shows a configuration dialog for this plugin. It returns True if"
" the user clicks OK, False otherwise. The changes are automatically applied."
msgstr ""

# 2a23b9f9b0b04a4e88b3b963e99a4070
# 97627ed9594c4bde8ebd23c83031842e
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.load_resources:1
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.load_resources:1
msgid ""
"If this plugin comes in a ZIP file (user added plugin), this method will "
"allow you to load resources from the ZIP file."
msgstr ""

# 839091809cb44bf384b4bb78338a6259
# ef69258948de472bb2785a37ec5611a6
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.load_resources:4
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.load_resources:4
msgid "For example to load an image::"
msgstr ""

# 18b4af88ca304faa8f2b91de4e82c1b5
# caf76a0a759a454d8f5ba3a2cb611b35
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.load_resources:10
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.load_resources:10
msgid "List of paths to resources in the zip file using / as separator"
msgstr ""

# 545c07d58fc8442c87d4cb5db03053f3
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.load_resources:12
msgid ""
"A dictionary of the form ``{name: file_contents}``. Any names that were not "
"found in the zip file will not be present in the dictionary."
msgstr ""

# ddf0d5ce2a944882aa7350c93a71cf55
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.customization_help:1
msgid ""
"Return a string giving help on how to customize this plugin. By default "
"raise a :class:`NotImplementedError`, which indicates that the plugin does "
"not require customization."
msgstr ""

# 5641b1a67074409ab2dd56fc95a300c4
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.customization_help:5
msgid ""
"If you re-implement this method in your subclass, the user will be asked to "
"enter a string as customization for this plugin. The customization string "
"will be available as ``self.site_customization``."
msgstr ""

# f0aed18853ca4b3ba23cdbd4515fc28b
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.customization_help:10
msgid ""
"Site customization could be anything, for example, the path to a needed "
"binary on the user's computer."
msgstr ""

# ad9423596fb946f8bb600281d31c897f
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.customization_help:13
msgid "If True return HTML help, otherwise return plain text help."
msgstr ""

# 657e56b76e2b47baa0b16b3ec3f79109
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.temporary_file:1
msgid ""
"Return a file-like object that is a temporary file on the file system. This "
"file will remain available even after being closed and will only be removed "
"on interpreter shutdown. Use the ``name`` member of the returned object to "
"access the full path to the created temporary file."
msgstr ""

# f215fd1d1fa2496cb587e2a29134080f
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.temporary_file:6
msgid "The suffix that the temporary file will have."
msgstr ""

# 56fb654fff794c5db6fd08a870b45ea8
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.Plugin.cli_main:1
msgid ""
"This method is the main entry point for your plugins command line interface."
" It is called when the user does: calibre-debug -r \"Plugin Name\". Any "
"arguments passed are present in the args variable."
msgstr ""

# 3e42f6306bf2412d95883f5c71035852
#: ../../home/kovid/work/calibre/manual/plugins.rst:28
msgid "FileTypePlugin"
msgstr ""

# 00f10e5bbac64a85809759b6ea3aeee1
# c670a801956648c4a4ab5daedea06992
# 88c6656121fb488b8d02a6a01dda7fdf
# 318d25287f3349239060a1b95b7f3dc2
# 7798b3472ac246c9b7e544da91070552
# b54b3ee33d9f43dc9552bbecd1dba9cb
# fd8cbe86840d4312a59fe4e43c8ae268
# cdbdd04a1f3b4df19f603870073d007b
# cea580844ee44ed8985a73e80ea7946c
# 0c79416db1d649548fc2aac3fc46cdb9
# d0c232d989c3413aa40c7dd0f5c9f7cc
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
msgid "Bases: :class:`calibre.customize.Plugin`"
msgstr ""

# 7fc5ee5c5f2c43a2b62db8b44e473fad
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin:1
msgid "A plugin that is associated with a particular set of file types."
msgstr ""

# 5cef84535c474398807c2bdc0a901d32
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.file_types:1
msgid ""
"Set of file types for which this plugin should be run. For example: "
"``{'lit', 'mobi', 'prc'}``"
msgstr ""

# e405f9cece9e4e8e8945861cdf4fdb75
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.on_import:1
msgid "If True, this plugin is run when books are added to the database"
msgstr ""

# 9111252e28514b99a03240ff7fd4753e
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.on_postimport:1
msgid "If True, this plugin is run after books are added to the database"
msgstr ""

# 1917cb7288b94bc48912b0abe8ca42b7
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.on_preprocess:1
msgid "If True, this plugin is run just before a conversion"
msgstr ""

# 1921587ceb1e4e4591738e8a8b7f2047
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.on_postprocess:1
msgid ""
"If True, this plugin is run after conversion on the final file produced by "
"the conversion output plugin."
msgstr ""

# 9797c1081e04480e8848a94c260c0927
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.run:1
msgid ""
"Run the plugin. Must be implemented in subclasses. It should perform "
"whatever modifications are required on the ebook and return the absolute "
"path to the modified ebook. If no modifications are needed, it should return"
" the path to the original ebook. If an error is encountered it should raise "
"an Exception. The default implementation simply return the path to the "
"original ebook."
msgstr ""

# d889664b169c4b5a8320949a57010112
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.run:9
msgid ""
"The modified ebook file should be created with the :meth:`temporary_file` "
"method."
msgstr ""

# e6a1f58d0c2146deaa6b6d793f29c8a2
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.run:12
msgid "Absolute path to the ebook."
msgstr ""

# f3ee64904c4c4c1b9217ada427cb6b6a
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.run:14
msgid "Absolute path to the modified ebook."
msgstr ""

# 1c65169ec837461db4b9016e332e9ec5
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postimport:1
msgid ""
"Called post import, i.e., after the book file has been added to the "
"database."
msgstr ""

# 0355c6e5c5a54ff59225a849ba42aa6b
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postimport:3
msgid "Database id of the added book."
msgstr ""

# dc43b12139e54c70b733f168884663f3
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postimport:4
msgid "The file type of the book that was added."
msgstr ""

# e15b73699ee54851af86d514f66bb9e6
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.FileTypePlugin.postimport:5
msgid "Library database."
msgstr ""

# df6706ff9854409bb6752069dc903ced
#: ../../home/kovid/work/calibre/manual/plugins.rst:39
msgid "Metadata plugins"
msgstr ""

# 39aae4f490db45eaa49d9e5d6f8396ad
# 832ae25fdef742eea4d8e40dcbdb40fd
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataReaderPlugin:1
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataWriterPlugin:1
msgid "A plugin that implements reading metadata from a set of file types."
msgstr ""

# ad3c7e387ecd4b0dbcd204f89c21097c
# 1ebb4bf20405440d85d26cb72c069223
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataReaderPlugin.file_types:1
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataWriterPlugin.file_types:1
msgid ""
"Set of file types for which this plugin should be run For example: "
"``set(['lit', 'mobi', 'prc'])``"
msgstr ""

# 8bdf5dc37215474db57840e04a55028f
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataReaderPlugin.get_metadata:1
msgid ""
"Return metadata for the file represented by stream (a file like object that "
"supports reading). Raise an exception when there is an error with the input "
"data. :param type: The type of file. Guaranteed to be one of the entries in "
":attr:`file_types`. :return: A "
":class:`calibre.ebooks.metadata.book.Metadata` object"
msgstr ""

# 36317cef7a8d46779437088b87c9457a
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.MetadataWriterPlugin.set_metadata:1
msgid ""
"Set metadata for the file represented by stream (a file like object that "
"supports reading). Raise an exception when there is an error with the input "
"data. :param type: The type of file. Guaranteed to be one of the entries in "
":attr:`file_types`. :param mi: A "
":class:`calibre.ebooks.metadata.book.Metadata` object"
msgstr ""

# 753ff3b735a34e85a8d9489a68bf5584
#: ../../home/kovid/work/calibre/manual/plugins.rst:54
msgid "Catalog plugins"
msgstr ""

# 0d72822e1e524dfa9ec5791df6edb685
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin:1
msgid "A plugin that implements a catalog generator."
msgstr ""

# f224800b320c442a9b283586fd7698cd
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.file_types:1
msgid ""
"Output file type for which this plugin should be run For example: 'epub' or "
"'xml'"
msgstr ""

# 893ce03eedbd4bfb9d6408bf043a743a
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.cli_options:1
msgid ""
"CLI parser options specific to this plugin, declared as namedtuple Option::"
msgstr ""

# 8ad169d07cc04ca28f22a7ef13d4795d
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.initialize:1
msgid ""
"If plugin is not a built-in, copy the plugin's .ui and .py files from the "
"zip file to $TMPDIR. Tab will be dynamically generated and added to the "
"Catalog Options dialog in calibre.gui2.dialogs.catalog.py:Catalog"
msgstr ""

# 5b9c3b1c2ee54bbc852113bdbfcede69
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.run:1
msgid ""
"Run the plugin. Must be implemented in subclasses. It should generate the "
"catalog in the format specified in file_types, returning the absolute path "
"to the generated catalog file. If an error is encountered it should raise an"
" Exception."
msgstr ""

# 2c7db9a7c93746948981c44fe0da16ed
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.run:7
msgid ""
"The generated catalog file should be created with the :meth:`temporary_file`"
" method."
msgstr ""

# cf262dfefad948c8aee16f9d29f0d2b3
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.run:10
msgid "Absolute path to the generated catalog file."
msgstr ""

# 916d5ee45f75441396e7901fa556c3bc
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.run:11
msgid "A dictionary of keyword arguments"
msgstr ""

# fde71e4365ea438cb163b1e3d08ddcf1
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.CatalogPlugin.run:12
msgid "A LibraryDatabase2 object"
msgstr ""

# 1528bcdcdefe40f599b7f97a912a67c8
#: ../../home/kovid/work/calibre/manual/plugins.rst:64
msgid "Metadata download plugins"
msgstr ""

# 5d46fc7211a64bcfb2691401c67ae5b2
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.capabilities:1
msgid ""
"Set of capabilities supported by this plugin. Useful capabilities are: "
"'identify', 'cover'"
msgstr ""

# 893be70761e34279a083548f562ab7fb
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.touched_fields:1
msgid ""
"List of metadata fields that can potentially be download by this plugin "
"during the identify phase"
msgstr ""

# 52011a6e24bd4a1b89fd627a053acc77
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.has_html_comments:1
msgid "Set this to True if your plugin returns HTML formatted comments"
msgstr ""

# a460dd0a6d274c66a4ba79a8668fc0c2
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of
#: calibre.ebooks.metadata.sources.base.Source.supports_gzip_transfer_encoding:1
msgid ""
"Setting this to True means that the browser object will add Accept-Encoding:"
" gzip to all requests. This can speedup downloads but make sure that the "
"source actually supports gzip transfer encoding correctly first"
msgstr ""

# b6e7d2ff5eed4b55a3304ae8e92501d6
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of
#: calibre.ebooks.metadata.sources.base.Source.cached_cover_url_is_reliable:1
msgid ""
"Cached cover URLs can sometimes be unreliable (i.e. the download could fail "
"or the returned image could be bogus. If that is often the case with this "
"source set to False"
msgstr ""

# 504293bb83224d13a1271e857198c746
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.options:1
msgid ""
"A list of :class:`Option` objects. They will be used to automatically "
"construct the configuration widget for this plugin"
msgstr ""

# dc527116bc524e1a811052c408e96caa
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.config_help_message:1
msgid ""
"A string that is displayed at the top of the config widget for this plugin"
msgstr ""

# 0776eb6602b04d29916daca170e51677
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.can_get_multiple_covers:1
msgid "If True this source can return multiple covers for a given query"
msgstr ""

# 4146ec110de74a91afc5b7c5c7593df4
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.auto_trim_covers:1
msgid ""
"If set to True covers downloaded by this plugin are automatically trimmed."
msgstr ""

# a8a0c8bff00443ad96105de652dcc957
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.prefer_results_with_isbn:1
msgid ""
"If set to True, and this source returns multiple results for a query, some "
"of which have ISBNs and some of which do not, the results without ISBNs will"
" be ignored"
msgstr ""

# e77e033c2ecf4c50992d871493e6e0dc
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.is_configured:1
msgid ""
"Return False if your plugin needs to be configured before it can be used. "
"For example, it might need a username/password/API key."
msgstr ""

# c4acfe0f13a7439a8fae134b64332588
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_author_tokens:1
msgid ""
"Take a list of authors and return a list of tokens useful for an AND search "
"query. This function tries to return tokens in first name middle names last "
"name order, by assuming that if a comma is in the author name, the name is "
"in lastname, other names form."
msgstr ""

# efd8d475d4ac4f05b34b887b2c9a9376
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_title_tokens:1
msgid ""
"Take a title and return a list of tokens useful for an AND search query. "
"Excludes connectives(optionally) and punctuation."
msgstr ""

# 10f34f43c4f54abc834d65792652418a
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.split_jobs:1
msgid "Split a list of jobs into at most num groups, as evenly as possible"
msgstr ""

# cf916e605a394a6b981fd58b67db5f51
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.test_fields:1
msgid ""
"Return the first field from self.touched_fields that is null on the mi "
"object"
msgstr ""

# 721934758e004da7835382ae5a93fa08
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.clean_downloaded_metadata:1
msgid ""
"Call this method in your plugin's identify method to normalize metadata "
"before putting the Metadata object into result_queue. You can of course, use"
" a custom algorithm suited to your metadata source."
msgstr ""

# 254ef05dc8334410b853af4db8907bd4
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_book_url:1
msgid ""
"Return a 3-tuple or None. The 3-tuple is of the form: (identifier_type, "
"identifier_value, URL). The URL is the URL for the book identified by "
"identifiers at this source. identifier_type, identifier_value specify the "
"identifier corresponding to the URL. This URL must be browseable to by a "
"human using a browser. It is meant to provide a clickable link for the user "
"to easily visit the books page at this source. If no URL is found, return "
"None. This method must be quick, and consistent, so only implement it if it "
"is possible to construct the URL from a known scheme given identifiers."
msgstr ""

# 939a9363640f4b78af6b1c0ebf60df4f
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_book_url_name:1
msgid "Return a human readable name from the return value of get_book_url()."
msgstr ""

# e4ad102cfd704e7da09ad973ba1a93fe
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_book_urls:1
msgid ""
"Override this method if you would like to return multiple urls for this "
"book. Return a list of 3-tuples. By default this method simply calls "
":func:`get_book_url`."
msgstr ""

# aa7bb074a8574278bd1e58503c332365
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_cached_cover_url:1
msgid ""
"Return cached cover URL for the book identified by the identifiers dict or "
"None if no such URL exists."
msgstr ""

# 3266033e2ad24b8b80fa262fe708fab8
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.get_cached_cover_url:4
msgid ""
"Note that this method must only return validated URLs, i.e. not URLS that "
"could result in a generic cover image or a not found error."
msgstr ""

# 1ae9a812ea1f4313a0eaac0af2a3df2c
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify_results_keygen:1
msgid ""
"Return a function that is used to generate a key that can sort Metadata "
"objects by their relevance given a search query (title, authors, "
"identifiers)."
msgstr ""

# 046a54efa4644426b63cbb669e4d07b0
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify_results_keygen:5
msgid "These keys are used to sort the results of a call to :meth:`identify`."
msgstr ""

# 0aa0e2f4dc9b4d58a7c4b0ec4aa17dbd
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify_results_keygen:7
msgid ""
"For details on the default algorithm see "
":class:`InternalMetadataCompareKeyGen`. Re-implement this function in your "
"plugin if the default algorithm is not suitable."
msgstr ""

# e151bee2163944669bec84e31ab45037
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:1
msgid "Identify a book by its title/author/isbn/etc."
msgstr ""

# 77040a8be8cf475a8e1db9787c416702
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:3
msgid ""
"If identifiers(s) are specified and no match is found and this metadata "
"source does not store all related identifiers (for example, all ISBNs of a "
"book), this method should retry with just the title and author (assuming "
"they were specified)."
msgstr ""

# 2efa45f65cc74e3dbe6c4ece5ddd7826
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:8
msgid ""
"If this metadata source also provides covers, the URL to the cover should be"
" cached so that a subsequent call to the get covers API with the same "
"ISBN/special identifier does not need to get the cover URL again. Use the "
"caching API for this."
msgstr ""

# 7adea6f6471749a598bf8007581e16af
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:13
msgid ""
"Every Metadata object put into result_queue by this method must have a "
"`source_relevance` attribute that is an integer indicating the order in "
"which the results were returned by the metadata source for this query. This "
"integer will be used by :meth:`compare_identify_results`. If the order is "
"unimportant, set it to zero for every result."
msgstr ""

# 46db6cdfc460429fa26013c1a7affe93
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:19
msgid ""
"Make sure that any cover/isbn mapping information is cached before the "
"Metadata object is put into result_queue."
msgstr ""

# 01193cd768b14254a10af9d70230d807
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:22
msgid "A log object, use it to output debugging information/errors"
msgstr ""

# 9b352c0bbf0947d8b2cac13fc3c3eb51
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:23
msgid ""
"A result Queue, results should be put into it. Each result is a Metadata "
"object"
msgstr ""

# ba83ef4e224f4fcdb82d26fef428d545
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:25
msgid ""
"If abort.is_set() returns True, abort further processing and return as soon "
"as possible"
msgstr ""

# 11fed1473b13426fac8bfcba187b56eb
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:27
msgid "The title of the book, can be None"
msgstr ""

# 19583f065b994edba7f1ed98f739b720
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:28
msgid "A list of authors of the book, can be None"
msgstr ""

# 768061c7b7c8426ebe5a6e49c8167da0
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:29
msgid "A dictionary of other identifiers, most commonly {'isbn':'1234...'}"
msgstr ""

# d42616a58fe843dfbc7b42e95db9005e
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:31
msgid ""
"Timeout in seconds, no network request should hang for longer than timeout."
msgstr ""

# 69019704233645d79fdd692591feacfb
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.identify:33
msgid ""
"None if no errors occurred, otherwise a unicode representation of the error "
"suitable for showing to the user"
msgstr ""

# f1c212fada6c4bf6affaadb6733d4dee
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.download_cover:1
msgid ""
"Download a cover and put it into result_queue. The parameters all have the "
"same meaning as for :meth:`identify`. Put (self, cover_data) into "
"result_queue."
msgstr ""

# e75764b2cbc94d1f9939aa26b956f2c8
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.download_cover:5
msgid ""
"This method should use cached cover URLs for efficiency whenever possible. "
"When cached data is not present, most plugins simply call identify and use "
"its results."
msgstr ""

# 7ca32eff76c8440f96c970087c45a194
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.Source.download_cover:9
msgid ""
"If the parameter get_best_cover is True and this plugin can get multiple "
"covers, it should only get the \"best\" one."
msgstr ""

# b2445cc2c43e4904967ad7762a5bde9a
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:1
msgid ""
"Generate a sort key for comparison of the relevance of Metadata objects, "
"given a search query. This is used only to compare results from the same "
"metadata source, not across different sources."
msgstr ""

# f8235240d0144a3e884a8f9b6652fd80
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:5
msgid ""
"The sort key ensures that an ascending order sort is a sort by order of "
"decreasing relevance."
msgstr ""

# be61d8e621eb4f319388d9a3290dfd65
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:8
msgid "The algorithm is:"
msgstr ""

# b3235118d35f464ab235e40755728ba5
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:10
msgid ""
"Prefer results that have at least one identifier the same as for the query"
msgstr ""

# cd86fca33ee1428184141d3a0b6399be
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:11
msgid "Prefer results with a cached cover URL"
msgstr ""

# 7db06b84807941caa6ce5b132e7ef8da
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:12
msgid "Prefer results with all available fields filled in"
msgstr ""

# e3b72eaf11c14dd49871945345eb916a
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:13
msgid ""
"Prefer results with the same language as the current user interface language"
msgstr ""

# 2fd99feb70a843629b47d9f065cd6541
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:14
msgid "Prefer results that are an exact title match to the query"
msgstr ""

# 1c27641c4f5e44e096bd7b91e64aa86b
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:15
msgid "Prefer results with longer comments (greater than 10% longer)"
msgstr ""

# 75ed6316ba434c0da77dbf29fd41ce7a
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:16
msgid ""
"Use the relevance of the result as reported by the metadata source's search"
msgstr ""

# 5124cf0763b54831a4d89287d021c5ff
#: ../../home/kovid/work/calibre/src/calibre/ebooks/metadata/sources/base.pydocstring
#: of calibre.ebooks.metadata.sources.base.InternalMetadataCompareKeyGen:17
msgid "engine"
msgstr ""

# 1a49e42fff524baa8a307d5640a2ad73
#: ../../home/kovid/work/calibre/manual/plugins.rst:76
msgid "Conversion plugins"
msgstr ""

# 12f7488432ff4dfbaa8d3946b707062a
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin:1
msgid ""
"InputFormatPlugins are responsible for converting a document into "
"HTML+OPF+CSS+etc. The results of the conversion *must* be encoded in UTF-8. "
"The main action happens in :meth:`convert`."
msgstr ""

# e5fd63b5aac84b6da44d9fbf8aee1cc9
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.file_types:1
msgid ""
"Set of file types for which this plugin should be run For example: "
"``set(['azw', 'mobi', 'prc'])``"
msgstr ""

# c0c6aee97418488fb909b165d040bd32
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.is_image_collection:1
msgid ""
"If True, this input plugin generates a collection of images, one per HTML "
"file. This can be set dynamically, in the convert method if the input files "
"can be both image collections and non-image collections. If you set this to "
"True, you must implement the get_images() method that returns a list of "
"images."
msgstr ""

# c80e1a59de7b4158b478c7d35ba3d7a0
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.core_usage:1
msgid ""
"Number of CPU cores used by this plugin A value of -1 means that it uses all"
" available cores"
msgstr ""

# 34b100b35b104692a79f00627fac2e18
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.for_viewer:1
msgid ""
"If set to True, the input plugin will perform special processing to make its"
" output suitable for viewing"
msgstr ""

# a57485e50fba4809bb3848a4fe15c2e5
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.output_encoding:1
msgid ""
"The encoding that this input plugin creates files in. A value of None means "
"that the encoding is undefined and must be detected individually"
msgstr ""

# 85256f36b20643a4b83c7b82a0a7c880
# dede00c6786449d3b48d5582a02433ca
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.common_options:1
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.common_options:1
msgid ""
"Options shared by all Input format plugins. Do not override in sub-classes. "
"Use :attr:`options` instead. Every option must be an instance of "
":class:`OptionRecommendation`."
msgstr ""

# 956f492bf53c4bc29977ef74009eb1c7
# b52481259e9347edb93b640ef962fa3f
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.options:1
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.options:1
msgid ""
"Options to customize the behavior of this plugin. Every option must be an "
"instance of :class:`OptionRecommendation`."
msgstr ""

# e74affe6778349029b2f85a81e4d50a0
# e2df75266410430aac4301d9d1d77e69
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.recommendations:1
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.recommendations:1
msgid ""
"A set of 3-tuples of the form (option_name, recommended_value, "
"recommendation_level)"
msgstr ""

# 768caec4400b43a3909b6c09dd203a16
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.get_images:1
msgid ""
"Return a list of absolute paths to the images, if this input plugin "
"represents an image collection. The list of images is in the same order as "
"the spine and the TOC."
msgstr ""

# c121d94589eb4087b78b1900eb6e57db
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:1
msgid ""
"This method must be implemented in sub-classes. It must return the path to "
"the created OPF file or an :class:`OEBBook` instance. All output should be "
"contained in the current directory. If this plugin creates files outside the"
" current directory they must be deleted/marked for deletion before this "
"method returns."
msgstr ""

# 37014caae08f4799871c3f4436032f8a
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:8
msgid "A file like object that contains the input file."
msgstr ""

# 1f6c6f7bff5c4cb7ad4f3ffcf0e755f7
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:9
msgid ""
"Options to customize the conversion process. Guaranteed to have attributes "
"corresponding to all the options declared by this plugin. In addition, it "
"will have a verbose attribute that takes integral values from zero upwards. "
"Higher numbers mean be more verbose. Another useful attribute is "
"``input_profile`` that is an instance of "
":class:`calibre.customize.profiles.InputProfile`."
msgstr ""

# dec3313ed97d42b9ae1810097edf42d6
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:17
msgid ""
"The extension (without the .) of the input file. It is guaranteed to be one "
"of the `file_types` supported by this plugin."
msgstr ""

# 8027def0c450474eafacefa059119865
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:20
msgid ""
"A :class:`calibre.utils.logging.Log` object. All output should use this "
"object."
msgstr ""

# 5e969147dcca45c4acb5d43dd2c80242
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.convert:22
msgid ""
"A dictionary of various information that the input plugin can get easily "
"that would speed up the subsequent stages of the conversion."
msgstr ""

# bbeb128e60b343c6a0deccad732f93e6
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.postprocess_book:1
msgid ""
"Called to allow the input plugin to perform postprocessing after the book "
"has been parsed."
msgstr ""

# 1c74a976c37744f3a3c6c3b694456cf7
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.InputFormatPlugin.specialize:1
msgid ""
"Called to allow the input plugin to specialize the parsed book for a "
"particular output format. Called after postprocess_book and before any "
"transforms are performed on the parsed book."
msgstr ""

# dc4acbd6583b4a5c9d8b54ae2d7d5df7
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of
#: calibre.customize.conversion.InputFormatPlugin.gui_configuration_widget:1
msgid ""
"Called to create the widget used for configuring this plugin in the calibre "
"GUI. The widget must be an instance of the PluginWidget class. See the "
"builting input plugins for examples."
msgstr ""

# 4e2b27ab12bf4e81a09680c696061b50
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin:1
msgid ""
"OutputFormatPlugins are responsible for converting an OEB document "
"(OPF+HTML) into an output ebook."
msgstr ""

# 037d0ba87ee643fb9b5cbafa796295ee
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin:4
msgid ""
"The OEB document can be assumed to be encoded in UTF-8. The main action "
"happens in :meth:`convert`."
msgstr ""

# cbc5ca3ad9c947fab1284b0f72e637a9
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.file_type:1
msgid ""
"The file type (extension without leading period) that this plugin outputs"
msgstr ""

# bf04cbb29ba7464fa9d13db44fea1a77
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.convert:1
msgid ""
"Render the contents of `oeb_book` (which is an instance of "
":class:`calibre.ebooks.oeb.OEBBook` to the file specified by output."
msgstr ""

# 49b2542b439b44ac96af5de215e749da
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.convert:4
msgid ""
"Either a file like object or a string. If it is a string it is the path to a"
" directory that may or may not exist. The output plugin should write its "
"output into that directory. If it is a file like object, the output plugin "
"should write its output into the file."
msgstr ""

# 3c73edf479ac49e9acfec936b9eb5bb2
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.convert:8
msgid ""
"The input plugin that was used at the beginning of the conversion pipeline."
msgstr ""

# d64a1107ac004d738fab9e1afb38a3e3
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.convert:10
msgid ""
"Conversion options. Guaranteed to have attributes corresponding to the "
"OptionRecommendations of this plugin."
msgstr ""

# 233d3413e92042cea7f4217de9b88e4d
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of calibre.customize.conversion.OutputFormatPlugin.convert:12
msgid "The logger. Print debug/info messages etc. using this."
msgstr ""

# f036c6bac3c94064a6f36629b7f13661
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of
#: calibre.customize.conversion.OutputFormatPlugin.specialize_css_for_output:1
msgid ""
"Can be used to make changes to the css during the CSS flattening process."
msgstr ""

# 832268a6299643da9824a1fee7203662
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of
#: calibre.customize.conversion.OutputFormatPlugin.specialize_css_for_output:4
msgid "The item (HTML file) being processed"
msgstr ""

# 5e77d90cc4444ecab6b8dc091d0c9dc9
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of
#: calibre.customize.conversion.OutputFormatPlugin.specialize_css_for_output:5
msgid ""
"A Stylizer object containing the flattened styles for item. You can get the "
"style for any element by stylizer.style(element)."
msgstr ""

# 0b3bf29b4b924d4a9e33d0d7ddb9cc76
#: ../../home/kovid/work/calibre/src/calibre/customize/conversion.pydocstring
#: of
#: calibre.customize.conversion.OutputFormatPlugin.gui_configuration_widget:1
msgid ""
"Called to create the widget used for configuring this plugin in the calibre "
"GUI. The widget must be an instance of the PluginWidget class. See the "
"builtin output plugins for examples."
msgstr ""

# bf45a9b5ca2349419d6ca5b6e64b0267
#: ../../home/kovid/work/calibre/manual/plugins.rst:91
msgid "Device Drivers"
msgstr ""

# b080c0bd254345caa6a214a351acecf9
#: ../../home/kovid/work/calibre/manual/plugins.rst:95
msgid ""
"The base class for all device drivers is :class:`DevicePlugin`. However, if "
"your device exposes itself as a USBMS drive to the operating system, you "
"should use the USBMS class instead as it implements all the logic needed to "
"support these kinds of devices."
msgstr ""

# 66e3665733064c0192b994890c2f8e8d
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin:1
msgid ""
"Defines the interface that should be implemented by backends that "
"communicate with an ebook reader."
msgstr ""

# 1e69515c6e704bd68c06224c55033e54
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.FORMATS:1
msgid "Ordered list of supported formats"
msgstr ""

# 6ee2010401d64a7082ef3009e6bfa316
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.VENDOR_ID:1
msgid ""
"VENDOR_ID can be either an integer, a list of integers or a dictionary If it"
" is a dictionary, it must be a dictionary of dictionaries, of the form::"
msgstr ""

# ccb70bea2a95410d904e8b2a9673b87e
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.PRODUCT_ID:1
msgid "An integer or a list of integers"
msgstr ""

# 1f5ff8efe0c441bfa71bea5d2c0d2a9f
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.BCD:1
msgid ""
"BCD can be either None to not distinguish between devices based on BCD, or "
"it can be a list of the BCD numbers of all devices supported by this driver."
msgstr ""

# 6360d3a167cc46ab88afc9a680601f0e
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.THUMBNAIL_HEIGHT:1
msgid "Height for thumbnails on the device"
msgstr ""

# fe4edc9c37dc452b903063e22031f96d
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.THUMBNAIL_COMPRESSION_QUALITY:1
msgid ""
"Width for thumbnails on the device. Setting this will force thumbnails to "
"this size, not preserving aspect ratio. If it is not set, then the aspect "
"ratio will be preserved and the thumbnail will be no higher than "
"THUMBNAIL_HEIGHT Compression quality for thumbnails. Set this closer to 100 "
"to have better quality thumbnails with fewer compression artifacts. Of "
"course, the thumbnails get larger as well."
msgstr ""

# bfb6537aa0d44ee6a4d527ed3105f993
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.WANTS_UPDATED_THUMBNAILS:1
msgid ""
"Set this to True if the device supports updating cover thumbnails during "
"sync_booklists. Setting it to true will ask device.py to refresh the cover "
"thumbnails during book matching"
msgstr ""

# 3659f332e3b94aabbecf746a6c190a37
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.CAN_SET_METADATA:1
msgid "Whether the metadata on books can be set via the GUI."
msgstr ""

# fe488fa150654875bdd6d14888843eca
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.CAN_DO_DEVICE_DB_PLUGBOARD:1
msgid "Whether the device can handle device_db metadata plugboards"
msgstr ""

# 9c66f55adbbd4b40a29ec6c5de829e81
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.path_sep:1
msgid "Path separator for paths to books on device"
msgstr ""

# 997de0e4a81d4847895eb8584c8c8ae8
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.icon:1
msgid "Icon for this device"
msgstr ""

# 56f3c4ed15c84fb3a32c92d20142488d
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.OPEN_FEEDBACK_MESSAGE:1
msgid ""
"GUI displays this as a message if not None. Useful if opening can take a "
"long time"
msgstr ""

# 20a32de479d0442fb6e4c7f7e60a13d9
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.VIRTUAL_BOOK_EXTENSIONS:1
msgid ""
"Set of extensions that are \"virtual books\" on the device and therefore "
"cannot be viewed/saved/added to library For example: ``frozenset(['kobo'])``"
msgstr ""

# 07c14b9c5d9741c6ab6e10905ec10335
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.NUKE_COMMENTS:1
msgid ""
"Whether to nuke comments in the copy of the book sent to the device. If not "
"None this should be short string that the comments will be replaced by."
msgstr ""

# a9b6821882034d15aee3cda619f41246
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.MANAGES_DEVICE_PRESENCE:1
msgid ""
"If True indicates that  this driver completely manages device detection, "
"ejecting and so forth. If you set this to True, you *must* implement the "
"detect_managed_devices and debug_managed_device_detection methods. A driver "
"with this set to true is responsible for detection of devices, managing a "
"blacklist of devices, a list of ejected devices and so forth. calibre will "
"periodically call the detect_managed_devices() method and if it returns a "
"detected device, calibre will call open(). open() will be called every time "
"a device is returned even is previous calls to open() failed, therefore the "
"driver must maintain its own blacklist of failed devices. Similarly, when "
"ejecting, calibre will call eject() and then assuming the next call to "
"detect_managed_devices() returns None, it will call post_yank_cleanup()."
msgstr ""

# c29b5db0819c4212bc39e13f198f05f2
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.SLOW_DRIVEINFO:1
msgid ""
"If set the True, calibre will call the :meth:`get_driveinfo()` method after "
"the books lists have been loaded to get the driveinfo."
msgstr ""

# e56169042a9d4c5aa4d3767f540e72b7
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.ASK_TO_ALLOW_CONNECT:1
msgid ""
"If set to True, calibre will ask the user if they want to manage the device "
"with calibre, the first time it is detected. If you set this to True you "
"must implement :meth:`get_device_uid()` and "
":meth:`ignore_connected_device()` and :meth:`get_user_blacklisted_devices` "
"and :meth:`set_user_blacklisted_devices`"
msgstr ""

# b6beae9994ea40e6b636495df15cacf0
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.user_feedback_after_callback:1
msgid ""
"Set this to a dictionary of the form {'title':title, 'msg':msg, "
"'det_msg':detailed_msg} to have calibre popup a message to the user after "
"some callbacks are run (currently only upload_books). Be careful to not spam"
" the user with too many messages. This variable is checked after *every* "
"callback, so only set it when you really need to."
msgstr ""

# 10f8c2015e934f92ad0fda4b0abf9b26
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_usb_connected:1
msgid ""
"Return True, device_info if a device handled by this plugin is currently "
"connected."
msgstr ""

# e22ca40e0b3c498680e51f2116e1dba4
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_usb_connected:3
msgid "List of devices currently connected"
msgstr ""

# 30c023b1d6284f0dbe2e12176ddeafba
# b603d303c6a741008e6e531d6588f499
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.detect_managed_devices:1
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.debug_managed_device_detection:1
msgid "Called only if MANAGES_DEVICE_PRESENCE is True."
msgstr ""

# 42b657da215b46b686435e03158f8e74
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.detect_managed_devices:3
msgid ""
"Scan for devices that this driver can handle. Should return a device object "
"if a device is found. This object will be passed to the open() method as the"
" connected_device. If no device is found, return None. The returned object "
"can be anything, calibre does not use it, it is only passed to open()."
msgstr ""

# 439d1e0f6c504f72a702ebc6b2a581ca
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.detect_managed_devices:9
msgid ""
"This method is called periodically by the GUI, so make sure it is not too "
"resource intensive. Use a cache to avoid repeatedly scanning the system."
msgstr ""

# 416ce72c28b142789a5a3016ee1f7a09
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.detect_managed_devices:13
msgid "Set of USB devices found on the system."
msgstr ""

# 799ccdef31eb4c5ba14a8b38b564478b
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.detect_managed_devices:15
msgid ""
"If True and the driver uses a cache to prevent repeated scanning, the cache "
"must be flushed."
msgstr ""

# 91928b2ff3514c3ca172d16f457afbfd
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.debug_managed_device_detection:3
msgid ""
"Should write information about the devices detected on the system to output,"
" which is a file like object."
msgstr ""

# ac0c18e107ef47acb5875e710563fe1d
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.debug_managed_device_detection:6
msgid ""
"Should return True if a device was detected and successfully opened, "
"otherwise False."
msgstr ""

# 66948dbf1118400f842f8b161f529383
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.reset:1
msgid "The key to unlock the device"
msgstr ""

# adc61d4a2f5d469091a15b8f9363cbf3
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.reset:2
msgid "If true the packet stream to/from the device is logged"
msgstr ""

# 21cb19309d9b443ba82668ab3b6f0993
# c08aabd7585e440980310545e9c5e267
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.reset:3
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_progress_reporter:3
msgid ""
"Function that is called with a % progress (number between 0 and 100) for "
"various tasks If it is called with -1 that means that the task does not have"
" any progress information"
msgstr ""

# 2154be8858d245dc9747066ad0d87cb3
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.reset:7
msgid "Device information from the device scanner"
msgstr ""

# 111db8376f3f47d4bdda64c8c762cab3
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.can_handle_windows:1
msgid ""
"Optional method to perform further checks on a device to see if this driver "
"is capable of handling it. If it is not it should return False. This method "
"is only called after the vendor, product ids and the bcd have matched, so it"
" can do some relatively time intensive checks. The default implementation "
"returns True. This method is called only on windows. See also "
":meth:`can_handle`."
msgstr ""

# 94b72a50142645b99d342574914e44ab
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.can_handle_windows:8
msgid ""
"On windows a device ID string. On Unix a tuple of ``(vendor_id, product_id, "
"bcd)``."
msgstr ""

# eab378b2357f41b2b1c0b918a40e71ac
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.can_handle:1
msgid "Unix version of :meth:`can_handle_windows`"
msgstr ""

# 5f4e060bb69f445dbb4f4b42fc432159
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.can_handle:3
msgid "Is a tuple of (vid, pid, bcd, manufacturer, product, serial number)"
msgstr ""

# 2dceb7ca58f64dc8bab7feb52f8f1e78
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.open:1
msgid ""
"Perform any device specific initialization. Called after the device is "
"detected but before any other functions that communicate with the device. "
"For example: For devices that present themselves as USB Mass storage "
"devices, this method would be responsible for mounting the device or if the "
"device has been automounted, for finding out where it has been mounted. The "
"method :meth:`calibre.devices.usbms.device.Device.open` has an "
"implementation of this function that should serve as a good example for USB "
"Mass storage devices."
msgstr ""

# dcc7b0d5824c4889b203b0cc9509a9e4
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.open:11
msgid ""
"This method can raise an OpenFeedback exception to display a message to the "
"user."
msgstr ""

# 04622922694c41ab9a1122ba07139829
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.open:14
msgid ""
"The device that we are trying to open. It is a tuple of (vendor id, product "
"id, bcd, manufacturer name, product name, device serial number). However, "
"some devices have no serial number and on windows only the first three "
"fields are present, the rest are None."
msgstr ""

# 86aa25921cb64704bdaed7a17b6ad0df
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.open:20
msgid ""
"The UUID of the current calibre library. Can be None if there is no library "
"(for example when used from the command line)."
msgstr ""

# 594fe2cc5cd44c76b18b8ecb5c7d0902
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.eject:1
msgid ""
"Un-mount / eject the device from the OS. This does not check if there are "
"pending GUI jobs that need to communicate with the device."
msgstr ""

# 82bb70b2b4564127bd6b6c2478f570ea
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.eject:4
msgid ""
"NOTE: That this method may not be called on the same thread as the rest of "
"the device methods."
msgstr ""

# 9205e374e8e84ff088c4385548596ba3
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.post_yank_cleanup:1
msgid "Called if the user yanks the device without ejecting it first."
msgstr ""

# c51bd386b5944fdb851ac20e04e92a43
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_progress_reporter:1
msgid "Set a function to report progress information."
msgstr ""

# d159cb10944847d781f284ebd39d7f06
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_device_information:1
msgid "Ask device for device information. See L{DeviceInfoQuery}."
msgstr ""

# e44a914f64714317a1b6734afa1131a7
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_device_information:3
msgid ""
"(device name, device version, software version on device, mime type) The "
"tuple can optionally have a fifth element, which is a drive information "
"dictionary. See usbms.driver for an example."
msgstr ""

# 1a1577de991748069377c208a4e77e79
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_driveinfo:1
msgid ""
"Return the driveinfo dictionary. Usually called from "
"get_device_information(), but if loading the driveinfo is slow for this "
"driver, then it should set SLOW_DRIVEINFO. In this case, this method will be"
" called by calibre after the book lists have been loaded. Note that it is "
"not called on the device thread, so the driver should cache the drive info "
"in the books() method and this function should return the cached data."
msgstr ""

# 4ad2e4266c72450589a2805d59ae5958
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.card_prefix:1
msgid ""
"Return a 2 element list of the prefix to paths on the cards. If no card is "
"present None is set for the card's prefix. E.G. ('/place', '/place2') (None,"
" 'place2') ('place', None) (None, None)"
msgstr ""

# c6b8f3d83d5a4fff93de9e3c5eff5172
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.total_space:4
msgid "Get total space available on the mountpoints:"
msgstr ""

# d42aee6271ed4f358b58dc721c471602
# c3c877b39a614ba79d4158b04b88f114
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.total_space:2
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.free_space:2
msgid "Main memory"
msgstr "Memoria nagusia"

# 8611ab30f54b46b7abd5b78e1f2299d7
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.total_space:3
msgid "Memory Card A"
msgstr ""

# b55d75f2c31643b89cd04dc84bd4dd46
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.total_space:4
msgid "Memory Card B"
msgstr ""

# 0511a1bc6ed14a71a01f74e88a16dc75
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.total_space:6
msgid ""
"A 3 element list with total space in bytes of (1, 2, 3). If a particular "
"device doesn't have any of these locations it should return 0."
msgstr ""

# 704cfe74cdd84b598fc5e14e1d2fd65d
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.free_space:4
msgid "Get free space available on the mountpoints:"
msgstr ""

# 8128b387785b43018368bcce3f8c8b5c
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.free_space:3
msgid "Card A"
msgstr "A txartela"

# 0096c864bdf1428eb18b0b5a1d9b7188
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.free_space:4
msgid "Card B"
msgstr "B txartela"

# 1d41195caf0945f49164ad2b3b606064
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.free_space:6
msgid ""
"A 3 element list with free space in bytes of (1, 2, 3). If a particular "
"device doesn't have any of these locations it should return -1."
msgstr ""

# 8d4863cb5f604bd186dbf5628448e123
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.books:1
msgid "Return a list of ebooks on the device."
msgstr ""

# b07a18d6da16409080ccc4c5f6eee680
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.books:3
msgid ""
"If 'carda' or 'cardb' return a list of ebooks on the specific storage card, "
"otherwise return list of ebooks in main memory of device. If a card is "
"specified and no books are on the card return empty list."
msgstr ""

# 6b8eaccbacc6410fb9ac7503a49e6867
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.books:8
msgid "A BookList."
msgstr ""

# 62efd58e01264045afa809cdad715dc9
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.upload_books:1
msgid ""
"Upload a list of books to the device. If a file already exists on the "
"device, it should be replaced. This method should raise a "
":class:`FreeSpaceError` if there is not enough free space on the device. The"
" text of the FreeSpaceError must contain the word \"card\" if ``on_card`` is"
" not None otherwise it must contain the word \"memory\"."
msgstr ""

# f4410f4de4fa421caf2718dece53bdcf
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.upload_books:7
msgid "A list of paths"
msgstr ""

# 47c45bb41b1543c5a2a35c7b041de488
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.upload_books:8
msgid ""
"A list of file names that the books should have once uploaded to the device."
" len(names) == len(files)"
msgstr ""

# cd8cb4ff92f1461780acb8df24ca3f52
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.upload_books:10
msgid ""
"If not None, it is a list of :class:`Metadata` objects. The idea is to use "
"the metadata to determine where on the device to put the book. len(metadata)"
" == len(files). Apart from the regular cover (path to cover), there may also"
" be a thumbnail attribute, which should be used in preference. The thumbnail"
" attribute is of the form (width, height, cover_data as jpeg)."
msgstr ""

# 9daa8565186d4c1c9e1cac00af66e687
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.upload_books:17
msgid ""
"A list of 3-element tuples. The list is meant to be passed to "
":meth:`add_books_to_metadata`."
msgstr ""

# 6b9a06ee9beb463998478d91042b7181
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.add_books_to_metadata:1
msgid ""
"Add locations to the booklists. This function must not communicate with the "
"device."
msgstr ""

# 774b23c6a1cc46d3a80ac759d4200561
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.add_books_to_metadata:4
msgid "Result of a call to L{upload_books}"
msgstr ""

# 0b65fb52e9914dd69a26557abb71a7da
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.add_books_to_metadata:5
msgid "List of :class:`Metadata` objects, same as for :meth:`upload_books`."
msgstr ""

# 7f8dc0cc8a7642ed9455adc50c13e8e5
# f71e7365cabe49308a482e143cf0b4e4
# 31aedaa59ea345b188bf738c51206dca
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.add_books_to_metadata:7
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.remove_books_from_metadata:5
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.sync_booklists:3
msgid ""
"A tuple containing the result of calls to (:meth:`books(oncard=None)`, "
":meth:`books(oncard='carda')`, :meth`books(oncard='cardb')`)."
msgstr ""

# e1859c44dc9b4940af23ffad147738e3
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.delete_books:1
msgid "Delete books at paths on device."
msgstr ""

# 561d230027b944b8b40277599e58a712
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.remove_books_from_metadata:1
msgid ""
"Remove books from the metadata list. This function must not communicate with"
" the device."
msgstr ""

# 79f244d1f9aa42cba6dffb8c20bbe916
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.remove_books_from_metadata:4
msgid "paths to books on the device."
msgstr ""

# 739b6cb5ad23434bb52877bfc5facd1a
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.sync_booklists:1
msgid "Update metadata on device."
msgstr ""

# eda38ad68a5143229a20ca4d5541f334
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_file:1
msgid "Read the file at ``path`` on the device and write it to outfile."
msgstr ""

# e01cc509d07f4fa79c4daf73d602c451
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_file:3
msgid "file object like ``sys.stdout`` or the result of an :func:`open` call."
msgstr ""

# 04c9c20c949b48ba9129912442997987
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.config_widget:1
msgid ""
"Should return a QWidget. The QWidget contains the settings for the device "
"interface"
msgstr ""

# 31834d03d60041c38dcfb4596e0d6e8a
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.save_settings:1
msgid ""
"Should save settings to disk. Takes the widget created in "
":meth:`config_widget` and saves all settings to disk."
msgstr ""

# 8fa53753b4b14074a0698a10971ad2d7
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.settings:1
msgid ""
"Should return an opts object. The opts object should have at least one "
"attribute `format_map` which is an ordered list of formats for the device."
msgstr ""

# 9d98fae9e74e4e409b587dffd1e62b2c
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_plugboards:1
msgid ""
"provide the driver the current set of plugboards and a function to select a "
"specific plugboard. This method is called immediately before add_books and "
"sync_booklists."
msgstr ""

# 2cc2249b917c46b78f8243796b86b037
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_plugboards:6
msgid "pb_func is a callable with the following signature::"
msgstr ""

# fe245ad3b22046e5a353ac5884f50b16
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_plugboards:6
msgid "def pb_func(device_name, format, plugboards)"
msgstr ""

# 4a11a4af29b74d87ac91e65415d6eb33
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_plugboards:8
msgid ""
"You give it the current device name (either the class name or "
"DEVICE_PLUGBOARD_NAME), the format you are interested in (a 'real' format or"
" 'device_db'), and the plugboards (you were given those by set_plugboards, "
"the same place you got this method)."
msgstr ""

# caa6aa1ffe834119bc0a461731821540
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_plugboards:13
msgid "None or a single plugboard instance."
msgstr ""

# 0e82062961b14ed7b9b7a6af2dc72f0e
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_driveinfo_name:1
msgid ""
"Set the device name in the driveinfo file to 'name'. This setting will "
"persist until the file is re-created or the name is changed again."
msgstr ""

# 154058e01d614906be84874c705d4cdf
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_driveinfo_name:4
msgid ""
"Non-disk devices should implement this method based on the location codes "
"returned by the get_device_information() method."
msgstr ""

# 35638b3dc7d04aacacb7312d627c148d
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.prepare_addable_books:1
msgid ""
"Given a list of paths, returns another list of paths. These paths point to "
"addable versions of the books."
msgstr ""

# ccb7e5b7068b4503a8344e3e37507aac
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.prepare_addable_books:4
msgid ""
"If there is an error preparing a book, then instead of a path, the position "
"in the returned list for that book should be a three tuple: (original_path, "
"the exception instance, traceback)"
msgstr ""

# 424450013fb64f5ba308b50e204c451c
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.startup:1
msgid ""
"Called when calibre is is starting the device. Do any initialization "
"required. Note that multiple instances of the class can be instantiated, and"
" thus __init__ can be called multiple times, but only one instance will have"
" this method called. This method is called on the device thread, not the GUI"
" thread."
msgstr ""

# 77f2e93f6a7b4279b5fe0342835924bd
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.shutdown:1
msgid ""
"Called when calibre is shutting down, either for good or in preparation to "
"restart. Do any cleanup required. This method is called on the device "
"thread, not the GUI thread."
msgstr ""

# 841f4a2f0f9e4137a8534e4f7204e025
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_device_uid:1
msgid ""
"Must return a unique id for the currently connected device (this is called "
"immediately after a successful call to open()). You must implement this "
"method if you set ASK_TO_ALLOW_CONNECT = True"
msgstr ""

# ad51f99a38d84c87ba2b386b62e3d2b5
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.ignore_connected_device:1
msgid ""
"Should ignore the device identified by uid (the result of a call to "
"get_device_uid()) in the future. You must implement this method if you set "
"ASK_TO_ALLOW_CONNECT = True. Note that this function is called immediately "
"after open(), so if open() caches some state, the driver should reset that "
"state."
msgstr ""

# d776e7888ca54d979f13876ab1d06a92
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_user_blacklisted_devices:1
msgid ""
"Return map of device uid to friendly name for all devices that the user has "
"asked to be ignored."
msgstr ""

# 3e09e47ffced4270bfb49ae42cbeb545
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_user_blacklisted_devices:1
msgid "Set the list of device uids that should be ignored by this driver."
msgstr ""

# 94cd3cc42c4e450e90e351db796faa51
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.specialize_global_preferences:1
msgid ""
"Implement this method if your device wants to override a particular "
"preference. You must ensure that all call sites that want a preference that "
"can be overridden use device_prefs['something'] instead of "
"prefs['something']. Your method should call "
"device_prefs.set_overrides(pref=val, pref=val, ...). Currently used for: "
"metadata management (prefs['manage_device_metadata'])"
msgstr ""

# f456a94fc5ca45d78b25e79eb7cb6024
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_library_info:1
msgid ""
"Implement this method if you want information about the current calibre "
"library. This method is called at startup and when the calibre library "
"changes while connected."
msgstr ""

# 51d227d557b14905ab6e8d7019911b6a
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_dynamically_controllable:1
msgid ""
"Called by the device manager when starting plugins. If this method returns a"
" string, then a) it supports the device manager's dynamic control interface,"
" and b) that name is to be used when talking to the plugin."
msgstr ""

# 5882dc277ded4c528d2ef8e3ac859a21
# b5fe3afcba2b41fcab2ba24dc9c9949d
# d9d6fbc9c10b40868809988fc2d4d1fb
# b86a210126ce4d149f3738c817c19c51
# 4450a0e2603c4fec8b48b916c9ab628b
# 940f379c4d6649bba939b5154d907426
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_dynamically_controllable:5
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.start_plugin:5
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.stop_plugin:6
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_option:5
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_option:4
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_running:3
msgid ""
"This method can be called on the GUI thread. A driver that implements this "
"method must be thread safe."
msgstr ""

# 53618b2702f445869b1969235624e9e9
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.start_plugin:1
msgid ""
"This method is called to start the plugin. The plugin should begin to accept"
" device connections however it does that. If the plugin is already accepting"
" connections, then do nothing."
msgstr ""

# 211dac472121479d80f31f9052c50bd7
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.stop_plugin:1
msgid ""
"This method is called to stop the plugin. The plugin should no longer accept"
" connections, and should cleanup behind itself. It is likely that this "
"method should call shutdown. If the plugin is already not accepting "
"connections, then do nothing."
msgstr ""

# 39ccb45a0cfb4e3ea26cd8805ba206b1
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.get_option:1
msgid ""
"Return the value of the option indicated by opt_string. This method can be "
"called when the plugin is not started. Return None if the option does not "
"exist."
msgstr ""

# 29ceb206c4e74898b5b8b2856f3378bf
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.set_option:1
msgid ""
"Set the value of the option indicated by opt_string. This method can be "
"called when the plugin is not started."
msgstr ""

# 70755ef51df04a29a322c4a79398f5bd
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.is_running:1
msgid "Return True if the plugin is started, otherwise false"
msgstr ""

# d64d89ea2d34488591fbd311507a6e1f
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.synchronize_with_db:1
msgid ""
"Called during book matching when a book on the device is matched with a book"
" in calibre's db. The method is responsible for syncronizing data from the "
"device to calibre's db (if needed)."
msgstr ""

# b6c10440f2d64930b58b1ea24d6b510f
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.synchronize_with_db:5
msgid ""
"The method must return a two-value tuple. The first value is a set of "
"calibre book ids changed if calibre's database was changed or None if the "
"database was not changed. If the first value is an empty set then the "
"metadata for the book on the device is updated with calibre's metadata and "
"given back to the device, but no GUI refresh of that book is done. This is "
"useful when the calibre data is correct but must be sent to the device."
msgstr ""

# 04912dca44d54c72ba53365eb9d30484
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.synchronize_with_db:13
msgid ""
"The second value is itself a 2-value tuple. The first value in the tuple "
"specifies whether a book format should be sent to the device. The intent is "
"to permit verifying that the book on the device is the same as the book in "
"calibre. This value must be None if no book is to be sent, otherwise return "
"the base file name on the device (a string like foobar.epub). Be sure to "
"include the extension in the name. The device subsystem will construct a "
"send_books job for all books with not- None returned values. Note: other "
"than to later retrieve the extension, the name is ignored in cases where the"
" device uses a template to generate the file name, which most do. The second"
" value in the returned tuple indicated whether the format is future-dated. "
"Return True if it is, otherwise return False. Calibre will display a dialog "
"to the user listing all future dated books."
msgstr ""

# f14bccbabe844d17a6345dc16d54e1fe
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.synchronize_with_db:27
msgid ""
"Extremely important: this method is called on the GUI thread. It must be "
"threadsafe with respect to the device manager's thread."
msgstr ""

# 56a7a60996df427daf7e46227d2dbabc
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.DevicePlugin.synchronize_with_db:30
msgid ""
"book_id: the calibre id for the book in the database. book_metadata: the "
"Metadata object for the book coming from the device. first_call: True if "
"this is the first call during a sync, False otherwise"
msgstr ""

# 3b28bc7db2d64cdfb8b18020146af44b
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
msgid "Bases: :class:`list`"
msgstr ""

# c4e00ee6344e4c5f9100bfe8554c4b5d
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:1
msgid "A list of books. Each Book object must have the fields"
msgstr ""

# 726750465e4847aa8ab8fc12c27066dc
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:3
msgid "title"
msgstr ""

# 93d1ac52109b4aa69199c1c3d4a6a7fd
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:4
msgid "authors"
msgstr ""

# 8b61727751354e9b9e95f45586dfe7f8
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:5
msgid "size (file size of the book)"
msgstr ""

# 085948c2374f4b9e9bc2fafc5f704b84
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:6
msgid "datetime (a UTC time tuple)"
msgstr ""

# 2d3ae742279c4902a8b79078e8d4ed49
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:7
msgid "path (path on the device to the book)"
msgstr ""

# 46543b23ac354c6698773a61e157d6f1
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:8
msgid ""
"thumbnail (can be None) thumbnail is either a str/bytes object with the "
"image data or it should have an attribute image_path that stores an absolute"
" (platform native) path to the image"
msgstr ""

# 3d56188f3f544c07b32a5bb1fa410799
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList:11
msgid "tags (a list of strings, can be empty)."
msgstr ""

# d1c684bd8bb74375a6edef03b89c3bd6
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.supports_collections:1
msgid "Return True if the device supports collections for this book list."
msgstr ""

# 4ab01413ebc54b2aa06c1d79d43bdfde
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.add_book:1
msgid ""
"Add the book to the booklist. Intent is to maintain any device-internal "
"metadata. Return True if booklists must be sync'ed"
msgstr ""

# 03c23cefb96e40438c171cdea037ad97
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.remove_book:1
msgid ""
"Remove a book from the booklist. Correct any device metadata at the same "
"time"
msgstr ""

# f0b262634dba4af884f30831734119dc
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.get_collections:1
msgid ""
"Return a dictionary of collections created from collection_attributes. Each "
"entry in the dictionary is of the form collection name:[list of books]"
msgstr ""

# d2e124e9280f4e939f7ff4963938595b
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.get_collections:5
msgid ""
"The list of books is sorted by book title, except for collections created "
"from series, in which case series_index is used."
msgstr ""

# 3879bd166ebf4f2186cbb77d08127810
#: ../../home/kovid/work/calibre/src/calibre/devices/interface.pydocstring of
#: calibre.devices.interface.BookList.get_collections:8
msgid "A list of attributes of the Book object"
msgstr ""

# e21d03e05ffd4bba87710b70b8af0f30
#: ../../home/kovid/work/calibre/manual/plugins.rst:109
msgid "USB Mass Storage based devices"
msgstr ""

# 0fece757009142aba5eff86cad9c95e7
#: ../../home/kovid/work/calibre/manual/plugins.rst:111
msgid ""
"The base class for such devices is "
":class:`calibre.devices.usbms.driver.USBMS`. This class in turn inherits "
"some of its functionality from its bases, documented below. A typical basic "
"USBMS based driver looks like this:"
msgstr ""

# 15cbf9ab9cb64ac28cf1b10f12d84bb9
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
msgid ""
"Bases: :class:`calibre.devices.usbms.deviceconfig.DeviceConfig`, "
":class:`calibre.devices.interface.DevicePlugin`"
msgstr ""

# b5e9066f0cb34a3ea00e84119a0f5b5e
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device:1
msgid ""
"This class provides logic common to all drivers for devices that export "
"themselves as USB Mass Storage devices. Provides implementations for "
"mounting/ejecting of USBMS devices on all platforms."
msgstr ""

# c41a978858e24a768039307b696ccf98
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.WINDOWS_MAIN_MEM:1
msgid ""
"String identifying the main memory of the device in the windows PnP id "
"strings This can be None, string, list of strings or compiled regex"
msgstr ""

# 9d18ce04a1814e88a0fd6d1a0d77761b
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.WINDOWS_CARD_A_MEM:1
msgid ""
"String identifying the first card of the device in the windows PnP id "
"strings This can be None, string, list of strings or compiled regex"
msgstr ""

# 280ea2ee9204433eb235f77edb892596
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.WINDOWS_CARD_B_MEM:1
msgid ""
"String identifying the second card of the device in the windows PnP id "
"strings This can be None, string, list of strings or compiled regex"
msgstr ""

# f082383c044c4ab7ae3f466629aefdea
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.OSX_MAIN_MEM_VOL_PAT:1
msgid ""
"Used by the new driver detection to disambiguate main memory from storage "
"cards. Should be a regular expression that matches the main memory mount "
"point assigned by OS X"
msgstr ""

# 93685f0a62354cc89ebc0620d315c192
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.MAX_PATH_LEN:1
msgid "The maximum length of paths created on the device"
msgstr ""

# 09770c50b1364fc584989a33b43e6069
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.NEWS_IN_FOLDER:1
msgid "Put news in its own folder"
msgstr ""

# 73fe5e3403604d47a07170db73934e13
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.windows_sort_drives:1
msgid ""
"Called to disambiguate main memory and storage card for devices that do not "
"distinguish between them on the basis of `WINDOWS_CARD_NAME`. For e.g.: The "
"EB600"
msgstr ""

# 9f3b2d4a6d514e54962645bc2cc0adfe
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.sanitize_callback:1
msgid ""
"Callback to allow individual device drivers to override the path "
"sanitization used by :meth:`create_upload_path`."
msgstr ""

# b04b326231324355a7dda5b180a33778
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.filename_callback:1
msgid ""
"Callback to allow drivers to change the default file name set by "
":meth:`create_upload_path`."
msgstr ""

# c5e60cdf1fdf41c39601f83cb575518a
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.sanitize_path_components:1
msgid ""
"Perform any device specific sanitization on the path components for files to"
" be uploaded to the device"
msgstr ""

# f9d6ef3376de45b89daeb302cab61386
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.get_annotations:1
msgid "Resolve path_map to annotation_map of files found on the device"
msgstr ""

# 8843554399004e469c835a62045cc399
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/device.pydocstring
#: of calibre.devices.usbms.device.Device.add_annotation_to_library:1
msgid "Add an annotation to the calibre library"
msgstr ""

# 057f5006b24c47a0b22c37da41556ab7
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
msgid ""
"Bases: :class:`calibre.devices.usbms.cli.CLI`, "
":class:`calibre.devices.usbms.device.Device`"
msgstr ""

# 43bfed63227b4e06a6a4f6a0330ad366
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS:1
msgid ""
"The base class for all USBMS devices. Implements the logic for "
"sending/getting/updating metadata/caching metadata/etc."
msgstr ""

# c2293a0d3f7a43be9c7de5405b2aae31
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_cover:1
msgid "Upload book cover to the device. Default implementation does nothing."
msgstr ""

# 15859634957a4ff697f36d45eb5466bc
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_cover:3
msgid "The full path to the directory where the associated book is located."
msgstr ""

# 4e823cf10c2e4047af9bfad0574f1f9c
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_cover:4
msgid "The name of the book file without the extension."
msgstr ""

# 1499f2df429d4cecbe51259b1d8acd47
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_cover:5
msgid "metadata belonging to the book. Use metadata.thumbnail for cover"
msgstr ""

# 8a59a31939234ee4bb54e40eb85e6d55
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.upload_cover:7
msgid "The full path to the ebook file"
msgstr ""

# c346da001d2a489cb4be0ea838e54bf0
#: ../../home/kovid/work/calibre/src/calibre/devices/usbms/driver.pydocstring
#: of calibre.devices.usbms.driver.USBMS.normalize_path:1
msgid "Return path with platform native path separators"
msgstr ""

# 3b8bca1ccc804724995962fab37be8ac
#: ../../home/kovid/work/calibre/manual/plugins.rst:157
msgid "User Interface Actions"
msgstr ""

# c0c6fa216b13464aa52e88c882ecbb46
#: ../../home/kovid/work/calibre/manual/plugins.rst:159
msgid ""
"If you are adding your own plugin in a zip file, you should subclass both "
"InterfaceActionBase and InterfaceAction. The :meth:`load_actual_plugin` "
"method of you InterfaceActionBase subclass must return an instantiated "
"object of your InterfaceBase subclass."
msgstr ""

# e2942bb2347a448bb3454552eb661ce3
#: ../../home/kovid/work/calibre/manual/<autodoc>:1
msgid "Bases: :class:`PyQt5.QtCore.QObject`"
msgstr ""

# bb6079cd7d5e4694a9dd2cdd569750bd
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:1
msgid ""
"A plugin representing an \"action\" that can be taken in the graphical user "
"interface. All the items in the toolbar and context menus are implemented by"
" these plugins."
msgstr ""

# af9375dae1d747b686b34f261160363f
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:5
msgid ""
"Note that this class is the base class for these plugins, however, to "
"integrate the plugin with calibre's plugin system, you have to make a "
"wrapper class that references the actual plugin. See the "
":mod:`calibre.customize.builtins` module for examples."
msgstr ""

# 07ac12f084b345a9825dd2ae7995c582
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:10
msgid ""
"If two :class:`InterfaceAction` objects have the same name, the one with "
"higher priority takes precedence."
msgstr ""

# caa5a176eb4641479145b1563faacf63
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:13
msgid ""
"Sub-classes should implement the :meth:`genesis`, :meth:`library_changed`, "
":meth:`location_selected` :meth:`shutting_down` and "
":meth:`initialization_complete` methods."
msgstr ""

# 10a4691201204f4f92366f1694f29e07
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:17
msgid ""
"Once initialized, this plugin has access to the main calibre GUI via the "
":attr:`gui` member. You can access other plugins by name, for example::"
msgstr ""

# acd8e618debe470dab1a891ec6a567e7
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:22
msgid ""
"To access the actual plugin, use the :attr:`interface_action_base_plugin` "
"attribute, this attribute only becomes available after the plugin has been "
"initialized. Useful if you want to use methods from the plugin class like "
"do_user_config()."
msgstr ""

# b98f6fa41da44d97ac0afdaacdc4f859
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction:27
msgid ""
"The QAction specified by :attr:`action_spec` is automatically create and "
"made available as ``self.qaction``."
msgstr ""

# 76d93d7da59c4d4b8f44bee124d08c53
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.name:1
msgid ""
"The plugin name. If two plugins with the same name are present, the one with"
" higher priority takes precedence."
msgstr ""

# 80415e0dbfcf45b9bf7f8aacbdd490f9
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.priority:1
msgid ""
"The plugin priority. If two plugins with the same name are present, the one "
"with higher priority takes precedence."
msgstr ""

# 58ca69ab6cbb40259fba977652c08c04
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.popup_type:1
msgid "The menu popup type for when this plugin is added to a toolbar"
msgstr ""

# 1da7628727df46d3817082c913ef6c34
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.auto_repeat:1
msgid ""
"Whether this action should be auto repeated when its shortcut key is held "
"down."
msgstr ""

# a25522afd271442c9dfb130bf00085e3
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.action_spec:1
msgid ""
"Of the form: (text, icon_path, tooltip, keyboard shortcut) icon, tooltip and"
" keyboard shortcut can be None shortcut must be a string, None or tuple of "
"shortcuts. If None, a keyboard shortcut corresponding to the action is not "
"registered. If you pass an empty tuple, then the shortcut is registered with"
" no default key binding."
msgstr ""

# 58f38d17c60e45bf84d0b36800f9a9b6
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.action_add_menu:1
msgid "If True, a menu is automatically created and added to self.qaction"
msgstr ""

# fb52e344047541f299b64a948c667083
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.action_menu_clone_qaction:1
msgid ""
"If True, a clone of self.qaction is added to the menu of self.qaction If you"
" want the text of this action to be different from that of self.qaction, set"
" this variable to the new text"
msgstr ""

# 9e2f438300b24cc1890d89004e98ee4b
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.dont_add_to:1
msgid ""
"Set of locations to which this action must not be added. See "
":attr:`all_locations` for a list of possible locations"
msgstr ""

# a69dc63144aa474ea3f2cd130dcc59ec
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.dont_remove_from:1
msgid ""
"Set of locations from which this action must not be removed. See "
":attr:`all_locations` for a list of possible locations"
msgstr ""

# c7dbe4bf446642929375a7f6a9c90004
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.action_type:1
msgid ""
"Type of action 'current' means acts on the current view 'global' means an "
"action that does not act on the current view, but rather on calibre as a "
"whole"
msgstr ""

# 1a377d43d00e4c39bdb341e163c2afa6
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.accepts_drops:1
msgid ""
"If True, then this InterfaceAction will have the opportunity to interact "
"with drag and drop events. See the methods, :meth:`accept_enter_event`, "
":meth`:accept_drag_move_event`, :meth:`drop_event` for details."
msgstr ""

# c6ab548db0d944969009f3d713958634
# df5156417a0c478daf9e6d76ba6d93cb
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.accept_enter_event:1
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.accept_drag_move_event:1
msgid ""
"This method should return True iff this interface action is capable of "
"handling the drag event. Do not call accept/ignore on the event, that will "
"be taken care of by the calibre UI."
msgstr ""

# 356611a9376141b880b8f7f390cc2554
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.drop_event:1
msgid ""
"This method should perform some useful action and return True iff this "
"interface action is capable of handling the drop event. Do not call "
"accept/ignore on the event, that will be taken care of by the calibre UI. "
"You should not perform blocking/long operations in this function. Instead "
"emit a signal or use QTimer.singleShot and return quickly. See the builtin "
"actions for examples."
msgstr ""

# 87665b8f39084c5ea85649a444bae0d6
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:1
msgid ""
"Convenience method to easily add actions to a QMenu. Returns the created "
"QAction, This action has one extra attribute calibre_shortcut_unique_name "
"which if not None refers to the unique name under which this action is "
"registered with the keyboard manager."
msgstr ""

# cb28244af3954bb4a097ab1e91f96530
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:6
msgid "The QMenu the newly created action will be added to"
msgstr ""

# 20c31881fbd8470688b28b1d43e992da
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:7
msgid ""
"A unique name for this action, this must be globally unique, so make it as "
"descriptive as possible. If in doubt add a uuid to it."
msgstr ""

# 87def76cc6c847698cca9279c6e90d00
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:10
msgid "The text of the action."
msgstr ""

# bf630b2a16484a028ea918bf0e9dec11
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:11
msgid ""
"Either a QIcon or a file name. The file name is passed to the I() builtin, "
"so you do not need to pass the full path to the images directory."
msgstr ""

# e8395fde5bfd40de8a6ade385a89680d
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:14
msgid ""
"A string, a list of strings, None or False. If False, no keyboard shortcut "
"is registered for this action. If None, a keyboard shortcut with no default "
"keybinding is registered. String and list of strings register a shortcut "
"with default keybinding as specified."
msgstr ""

# be1e155ac47246349af0dff5bdeec7f0
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:18
msgid "A description for this action. Used to set tooltips."
msgstr ""

# 1988b3b05e4542e89235e6e16f66ecbc
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:20
msgid ""
"A callable which is connected to the triggered signal of the created action."
msgstr ""

# 17f98afdc3a24f3e9df2c97b25f58566
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.create_menu_action:22
msgid ""
"The test displayed to the user when customizing the keyboard shortcuts for "
"this action. By default it is set to the value of ``text``."
msgstr ""

# b82de7468e46400f8986cced097c7230
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.load_resources:12
msgid ""
"A dictionary of the form ``{name : file_contents}``. Any names that were not"
" found in the zip file will not be present in the dictionary."
msgstr ""

# b7f89cbf314c4f899ef53b4fbfc6bc36
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.genesis:1
msgid ""
"Setup this plugin. Only called once during initialization. self.gui is "
"available. The action specified by :attr:`action_spec` is available as "
"``self.qaction``."
msgstr ""

# cc975b68eadb47449831fb1349a346e3
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.location_selected:1
msgid ""
"Called whenever the book list being displayed in calibre changes. Currently "
"values for loc are: ``library, main, card and cardb``."
msgstr ""

# 7c79b444a338426f89a34bc4830f3b80
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.location_selected:4
msgid ""
"This method should enable/disable this action and its sub actions as "
"appropriate for the location."
msgstr ""

# 4c137955606b49708575278139597b1b
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.library_changed:1
msgid "Called whenever the current library is changed."
msgstr ""

# e4c1c47ac2c24da48ca7d02e7f681a6d
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.library_changed:3
msgid "The LibraryDatabase corresponding to the current library."
msgstr ""

# e3180ab306204a3eb40011a2b8081dfb
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.gui_layout_complete:1
msgid ""
"Called once per action when the layout of the main GUI is completed. If your"
" action needs to make changes to the layout, they should be done here, "
"rather than in :meth:`initialization_complete`."
msgstr ""

# cde6b0ee85bf496084fbf03316497cb0
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.initialization_complete:1
msgid ""
"Called once per action when the initialization of the main GUI is completed."
msgstr ""

# 62ea435532f94458b3f363099b004af0
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.shutting_down:1
msgid ""
"Called once per plugin when the main GUI is in the process of shutting down."
" Release any used resources, but try not to block the shutdown for long "
"periods of time."
msgstr ""

# 305a2654d59447688c7f8f439c668d10
#: ../../home/kovid/work/calibre/src/calibre/gui2/actions/__init__.pydocstring
#: of calibre.gui2.actions.InterfaceAction.shutting_down:5
msgid ""
"False to halt the shutdown. You are responsible for telling the user why the"
" shutdown was halted."
msgstr ""

# 0f5b4c7eeca54870a35d00b747d1827c
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.InterfaceActionBase.load_actual_plugin:1
msgid "This method must return the actual interface action plugin object."
msgstr ""

# 9b52c9e366c247c89333a021a32450d7
#: ../../home/kovid/work/calibre/manual/plugins.rst:174
msgid "Preferences Plugins"
msgstr ""

# 4750af9c749d4b088bd7feea7895b0f7
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin:1
msgid "A plugin representing a widget displayed in the Preferences dialog."
msgstr ""

# 6f22a43778b44e328fadc40240f51c08
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin:3
msgid ""
"This plugin has only one important method :meth:`create_widget`. The various"
" fields of the plugin control how it is categorized in the UI."
msgstr ""

# 8d277638a3f3444db8c964cbfbedaac1
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.config_widget:1
msgid ""
"Import path to module that contains a class named ConfigWidget which "
"implements the ConfigWidgetInterface. Used by :meth:`create_widget`."
msgstr ""

# 3ad6da389f304e9c974a00a3d679827f
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.category_order:1
msgid ""
"Where in the list of categories the :attr:`category` of this plugin should "
"be."
msgstr ""

# d975cadae5d64060b4df894537b5a1a4
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.name_order:1
msgid ""
"Where in the list of names in a category, the :attr:`gui_name` of this "
"plugin should be"
msgstr ""

# 7e091492480148f7aefb2c49cc0f2804
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.category:1
msgid "The category this plugin should be in"
msgstr ""

# 9a0ae37bbb5d40b182f06b3de39dba88
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.gui_category:1
msgid "The category name displayed to the user for this plugin"
msgstr ""

# a02e0b2a61934bdab2216d2209c37ceb
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.gui_name:1
msgid "The name displayed to the user for this plugin"
msgstr ""

# 1bd89efe0ce545ef87cacb950bb1654e
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.icon:1
msgid "The icon for this plugin, should be an absolute path"
msgstr ""

# 0001f0bb5daf40c688ac390a0a4db9b7
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.description:1
msgid "The description used for tooltips and the like"
msgstr ""

# 781ba70acdea422db132cc6f0d3f952e
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.create_widget:1
msgid ""
"Create and return the actual Qt widget used for setting this group of "
"preferences. The widget must implement the "
":class:`calibre.gui2.preferences.ConfigWidgetInterface`."
msgstr ""

# 928ff97961d7405f92cd5d0ac2764106
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.PreferencesPlugin.create_widget:5
msgid ""
"The default implementation uses :attr:`config_widget` to instantiate the "
"widget."
msgstr ""

# 80b32e12aad347168dfe3192b0e0452e
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface:1
msgid ""
"This class defines the interface that all widgets displayed in the "
"Preferences dialog must implement. See :class:`ConfigWidgetBase` for a base "
"class that implements this interface and defines various convenience methods"
" as well."
msgstr ""

# 874d3a8396d247268f84e68182eb8276
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.changed_signal:1
msgid ""
"This signal must be emitted whenever the user changes a value in this widget"
msgstr ""

# 74ec95ef69b04070b6180774ba0f6773
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of
#: calibre.gui2.preferences.ConfigWidgetInterface.supports_restoring_to_defaults:1
msgid "Set to True iff the :meth:`restore_to_defaults` method is implemented."
msgstr ""

# 3679fc467b954b61bcec569da67b9046
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.restore_defaults_desc:1
msgid "The tooltip for the Restore to defaults button"
msgstr ""

# 8265b1c831f2482fa2b7a25d41904237
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.restart_critical:1
msgid ""
"If True the Preferences dialog will not allow the user to set any more "
"preferences. Only has effect if :meth:`commit` returns True."
msgstr ""

# a4e4ca774aba4b299b8891e28e4e1456
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.genesis:1
msgid ""
"Called once before the widget is displayed, should perform any necessary "
"setup."
msgstr ""

# fe36f9422ff440dc885619d7037a9d9b
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.genesis:4
msgid "The main calibre graphical user interface"
msgstr ""

# 198a405d17f84419823ab5dc3e557fd8
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.initialize:1
msgid ""
"Should set all config values to their initial values (the values stored in "
"the config files)."
msgstr ""

# 9fd0453f36614a1095af83ba3e2f37bc
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.restore_defaults:1
msgid "Should set all config values to their defaults."
msgstr ""

# 9c18c5cbdfa74fe5821108b2751a9e6a
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.commit:1
msgid ""
"Save any changed settings. Return True if the changes require a restart, "
"False otherwise. Raise an :class:`AbortCommit` exception to indicate that an"
" error occurred. You are responsible for giving the user feedback about what"
" the error is and how to correct it."
msgstr ""

# 9169ce375d9b4c92a9217997a5873c8f
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetInterface.refresh_gui:1
msgid ""
"Called once after this widget is committed. Responsible for causing the gui "
"to reread any changed settings. Note that by default the GUI re-initializes "
"various elements anyway, so most widgets won't need to use this method."
msgstr ""

# 8d981d2ef7c343ff856ddc982d417e1e
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase:1
msgid ""
"Base class that contains code to easily add standard config widgets like "
"checkboxes, combo boxes, text fields and so on. See the :meth:`register` "
"method."
msgstr ""

# d1994042afc3440ab44bd14677455007
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase:5
msgid ""
"This class automatically handles change notification, resetting to default, "
"translation between gui objects and config objects, etc. for registered "
"settings."
msgstr ""

# 445fcaee928345f38d120bae1b2b737a
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase:9
msgid ""
"If your config widget inherits from this class but includes setting that are"
" not registered, you should override the :class:`ConfigWidgetInterface` "
"methods and call the base class methods inside the overrides."
msgstr ""

# 60a123c1f72d454f9a7da84b08905927
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:1
msgid "Register a setting."
msgstr ""

# b106f60f33ff4703809bc7de93c3ed05
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:3
msgid "The setting name"
msgstr ""

# 4f78403ccf184b18aa743fe0adecbb48
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:4
msgid "The config object that reads/writes the setting"
msgstr ""

# a81f78577a1248e4a712058ad49e9115
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:5
msgid ""
"The name of the GUI object that presents an interface to change the setting."
" By default it is assumed to be ``'opt_' + name``."
msgstr ""

# ce5fe838b9b14a73a4eb52e6d2be6b7d
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:8
msgid ""
"If this setting is a multiple choice (combobox) based setting, the list of "
"choices. The list is a list of two element tuples of the form: ``[(gui name,"
" value), ...]``"
msgstr ""

# aa633764894842b795f824efb6819ae7
#: ../../home/kovid/work/calibre/src/calibre/gui2/preferences/__init__.pydocstring
#: of calibre.gui2.preferences.ConfigWidgetBase.register:11
msgid ""
"The class responsible for managing this setting. The default class handles "
"almost all cases, so this param is rarely used."
msgstr ""

# d56e8207fd344558b7358ad24da65914
#: ../../home/kovid/work/calibre/manual/plugins.rst:190
msgid "Viewer plugins"
msgstr ""

# cf81dd74594548a28ed62a361edda14d
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.ViewerPlugin.type:1
msgid "These plugins are used to add functionality to the calibre viewer."
msgstr ""

# c4093fda7dd5491f96f062752247dac0
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.ViewerPlugin.load_fonts:1
msgid ""
"This method is called once at viewer startup. It should load any fonts it "
"wants to make available. For example::"
msgstr ""

# d918263621d34c86816a3cfa74d4b72c
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.ViewerPlugin.load_javascript:1
msgid ""
"This method is called every time a new HTML document is loaded in the "
"viewer. Use it to load javascript libraries into the viewer. For example::"
msgstr ""

# be304d25f40c4f4c98d6ddc1d78e46c3
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.ViewerPlugin.run_javascript:1
msgid ""
"This method is called every time a document has finished loading. Use it in "
"the same way as load_javascript()."
msgstr ""

# 5b6ebe5c623043f198b83fdd8d0900d8
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.ViewerPlugin.customize_ui:1
msgid ""
"This method is called once when the viewer is created. Use it to make any "
"customizations you want to the viewer's user interface. For example, you can"
" modify the toolbars via ui.tool_bar and ui.tool_bar2."
msgstr ""

# ddc01a9577194634b6af682c9f01af8a
#: ../../home/kovid/work/calibre/src/calibre/customize/__init__.pydocstring of
#: calibre.customize.ViewerPlugin.customize_context_menu:1
msgid ""
"This method is called every time the context (right-click) menu is shown. "
"You can use it to customize the context menu. ``event`` is the context menu "
"event and hit_test_result is the QWebHitTestResult for this event in the "
"currently loaded document."
msgstr ""
