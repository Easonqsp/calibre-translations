# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-21 08:59+0530\n"
"PO-Revision-Date: 2014-06-25 00:11+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/calibre/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# c459a8de55b14a7ab8b6624f316ff515
#: ../../server.rst:6
msgid "Integrating the |app| content server into other servers"
msgstr ""

# 54520287d11246aa8c1077510bda560a
#: ../../server.rst:8
msgid ""
"Here, we will show you how to integrate the |app| content server into "
"another server. The most common reason for this is to make use of SSL or "
"more sophisticated authentication. There are two main techniques: Running "
"the |app| content server as a standalone process and using a reverse proxy "
"to connect it with your main server or running the content server in process"
" in your main server with WSGI. The examples below are all for Apache 2.x on"
" linux, but should be easily adaptable to other platforms."
msgstr ""

# 75960361cd6f47b5945af8642ffde291
#: ../../server.rst:0
msgid "Contents"
msgstr "Contenido"

# 3ce8fb1fd6434083ad1bf92ee170aa32
#: ../../server.rst:14
msgid "This only applies to calibre releases >= 0.7.25"
msgstr ""

# 931f0b839a3e4f5982772aa4a3f0c38d
#: ../../server.rst:17
msgid "Using a reverse proxy"
msgstr ""

# 5f9757a084c144718f7fd05adca05100
#: ../../server.rst:19
msgid ""
"A reverse proxy is when your normal server accepts incoming requests and "
"passes them onto the calibre server. It then reads the response from the "
"calibre server and forwards it to the client. This means that you can simply"
" run the calibre server as normal without trying to integrate it closely "
"with your main server, and you can take advantage of whatever authentication"
" systems you main server has in place. This is the simplest approach as it "
"allows you to use the binary calibre install with no external "
"dependencies/system integration requirements. Below, is an example of how to"
" achieve this with Apache as your main server, but it will work with any "
"server that supports Reverse Proxies."
msgstr ""

# 96bc0bdfda714899967818c855eb56d4
#: ../../server.rst:21
msgid "First start the |app| content server as shown below::"
msgstr ""

# 5a50415933a34c0d9dd147c250d1200b
#: ../../server.rst:25
msgid ""
"The key parameter here is ``--url-prefix /calibre``. This causes the content"
" server to serve all URLs prefixed by calibre. To see this in action, visit "
"``http://localhost:8080/calibre`` in your browser. You should see the normal"
" content server website, but now it will run under /calibre."
msgstr ""

# e48cd637440c4a7a9722bab06e30d9f0
#: ../../server.rst:27
msgid ""
"Now suppose you are using Apache as your main server. First enable the proxy"
" modules in apache, by adding the following to :file:`httpd.conf`::"
msgstr ""

# fbd3daab2b31443aa0b6f671da0ffb50
#: ../../server.rst:32
msgid ""
"The exact technique for enabling the proxy modules will vary depending on "
"your Apache installation. Once you have the proxy modules enabled, add the "
"following rules to httpd.conf (or if you are using virtual hosts to the conf"
" file for the virtual host in question::"
msgstr ""

# a3a1bfd805c24a279f049ede140fec3b
#: ../../server.rst:40
msgid ""
"That's all, you will now be able to access the |app| Content Server under "
"the /calibre URL in your apache server. The above rules pass all requests "
"under /calibre to the calibre server running on port 8080 and thanks to the "
"--url-prefix option above, the calibre server handles them transparently."
msgstr ""

# 43db6970148a49bdbc57e7ebdb6bc669
#: ../../server.rst:42
msgid ""
"If you are willing to devote an entire VirtualHost to the content server, "
"then there is no need to use --url-prefix and RewriteRule, instead just use "
"the ProxyPass directive."
msgstr ""

# acf5a5b3457f415daf2a7318415a9e88
#: ../../server.rst:44
msgid ""
"The server engine calibre uses, CherryPy, can have trouble with proxying and"
" KeepAlive requests, so turn them off in Apache, with the SetEnv directives "
"shown above."
msgstr ""

# f378a595e6664b368b1f78ddaf6c8f5b
#: ../../server.rst:47
msgid "In process"
msgstr ""

# 40883ba65bfe4893b71ef1e4c857d70b
#: ../../server.rst:49
msgid ""
"The calibre content server can be run directly, in process, inside a host "
"server like Apache using the WSGI framework."
msgstr ""

# b54dfc5645484abfae0b63b40f0554b5
#: ../../server.rst:51
msgid ""
"For this to work, all the dependencies needed by calibre must be installed "
"on your system. Doing so is highly non-trivial and you are encouraged not to"
" use in process servers. You will not get any assistance with debugging in "
"process server problems."
msgstr ""

# 8da40d7ad55643a783db2f0e1203e489
#: ../../server.rst:53
msgid ""
"First, we have to create a WSGI *adapter* for the calibre content server. "
"Here is a template you can use for the purpose. Replace the paths as "
"directed in the comments"
msgstr ""

# d4fdbabc387149f18929054f1a3bb34f
#: ../../server.rst:103
msgid ""
"Save this adapter as :file:`calibre-wsgi-adpater.py` somewhere your server "
"will have access to it."
msgstr ""

# 69f9a3a008d347b9aa13aa26886d067e
#: ../../server.rst:105
msgid ""
"Let's suppose that we want to use WSGI in Apache. First enable WSGI in "
"Apache by adding the following to :file:`httpd.conf`::"
msgstr ""

# 07e246f871fa4443b8541eaefbe6313d
#: ../../server.rst:109
msgid ""
"The exact technique for enabling the wsgi module will vary depending on your"
" Apache installation. Once you have the proxy modules enabled, add the "
"following rules to httpd.conf (or if you are using virtual hosts to the conf"
" file for the virtual host in question::"
msgstr ""

# 2af27fe469144abe9527b0d5efaf46fc
#: ../../server.rst:113
msgid ""
"Change the path to :file:`calibre-wsgi-adapter.py` to wherever you saved it "
"previously (make sure Apache has access to it)."
msgstr ""

# e8983a0c5ea34163b249afe25a4cbc9c
#: ../../server.rst:115
msgid ""
"That's all, you will now be able to access the |app| Content Server under "
"the /calibre URL in your apache server."
msgstr ""

# 7e9cdf96b3f341c7aa18f5a49f45bfdc
#: ../../server.rst:117
msgid ""
"For more help with using mod_wsgi in Apache, see `mod_wsgi "
"<http://code.google.com/p/modwsgi/wiki/WhereToGetHelp>`_."
msgstr ""
