# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-21 08:59+0530\n"
"PO-Revision-Date: 2014-06-25 00:11+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/calibre/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# e23a1b8484194ed5b1be154bbd13cf3d
#: ../../develop.rst:6
msgid "Setting up a |app| development environment"
msgstr "Configurar un entorno de desarrollo de |app|"

# 16be9628f0bf4137b03a8ca7cf291df4
#: ../../develop.rst:8
msgid ""
"|app| is completely open source, licensed under the `GNU GPL v3 "
"<http://www.gnu.org/copyleft/gpl.html>`_. This means that you are free to "
"download and modify the program to your heart's content. In this section, "
"you will learn how to get a |app| development environment set up on the "
"operating system of your choice. |app| is written primarily in `Python "
"<http://www.python.org>`_ with some C/C++ code for speed and system "
"interfacing. Note that |app| is not compatible with Python 3 and requires at"
" least Python 2.7."
msgstr ""

# edb100cc60cc4db09fa9da0078eec877
#: ../../develop.rst:0
msgid "Contents"
msgstr "Contenido"

# e0fe7dd5bbc64bd4a0ee079bf75ec364
#: ../../develop.rst:19
msgid "Design philosophy"
msgstr ""

# ab1b6626606a47baa996007a85f053f1
#: ../../develop.rst:21
msgid ""
"|app| has its roots in the Unix world, which means that its design is highly"
" modular. The modules interact with each other via well defined interfaces. "
"This makes adding new features and fixing bugs in |app| very easy, resulting"
" in a frenetic pace of development. Because of its roots, |app| has a "
"comprehensive command line interface for all its functions, documented in "
":ref:`cli`."
msgstr ""

# f66eecb4597b4c79842e76a67ad69382
#: ../../develop.rst:26
msgid ""
"The modular design of |app| is expressed via ``Plugins``. There is a "
":ref:`tutorial <customize>` on writing |app| plugins. For example, adding "
"support for a new device to |app| typically involves writing less than a 100"
" lines of code in the form of a device driver plugin. You can browse the "
"`built-in drivers "
"<http://bazaar.launchpad.net/%7Ekovid/calibre/trunk/files/head%3A/src/calibre/devices/>`_."
" Similarly, adding support for new conversion formats involves writing "
"input/output format plugins. Another example of the modular design is the "
":ref:`recipe system <news>` for fetching news. For more examples of plugins "
"designed to add features to |app|, see the `plugin index "
"<http://www.mobileread.com/forums/showthread.php?p=1362767#post1362767>`_."
msgstr ""

# 854062dcce884fe3b2f83e27107984a9
#: ../../develop.rst:36
msgid "Code layout"
msgstr ""

# 7eaffd4f848349e2a74f847294890783
#: ../../develop.rst:38
msgid ""
"All the |app| python code is in the ``calibre`` package. This package "
"contains the following main sub-packages"
msgstr ""

# 169fbd4590b2427ab9deed133abdf69a
#: ../../develop.rst:40
msgid ""
"devices - All the device drivers. Just look through some of the built-in "
"drivers to get an idea for how they work."
msgstr ""

# 76ee0f242f694970b16ccd2dfceaf806
#: ../../develop.rst:42
msgid ""
"For details, see: ``devices.interface`` which defines the interface "
"supported by device drivers and ``devices.usbms`` which defines a generic "
"driver that connects to a USBMS device. All USBMS based drivers in |app| "
"inherit from it."
msgstr ""

# 02960bbf06cb4f238ab18521d8885f99
#: ../../develop.rst:45
msgid ""
"ebooks  - All the ebook conversion/metadata code. A good starting point is "
"``calibre.ebooks.conversion.cli`` which is the module powering the :command"
":`ebook-convert` command. The conversion process is controlled via "
"``conversion.plumber``. The format independent code is all in ``ebooks.oeb``"
" and the format dependent code is in ``ebooks.format_name``."
msgstr ""

# b9f0ab7bfcda4c05a9348b99516e593b
#: ../../develop.rst:49
msgid ""
"Metadata reading, writing, and downloading is all in ``ebooks.metadata``"
msgstr ""

# 278f6cf0ac7a4e05b8b1c9788fc7c8df
#: ../../develop.rst:50
msgid ""
"Conversion happens in a pipeline, for the structure of the pipeline, see "
":ref:`conversion-introduction`. The pipeline consists of an input plugin, "
"various transforms and an output plugin. The code that constructs and drives"
" the pipeline is in :file:`plumber.py`. The pipeline works on a "
"representation of an ebook that is like an unzipped epub, with manifest, "
"spine, toc, guide, html content, etc. The class that manages this "
"representation is OEBBook in ``ebooks.oeb.base``. The various "
"transformations that are applied to the book during conversions live in "
":file:`oeb/transforms/*.py`. And the input and output plugins live in "
":file:`conversion/plugins/*.py`."
msgstr ""

# db9fb00c64564db89ecfc172e6495189
#: ../../develop.rst:60
msgid ""
"Ebook editing happens using a different container object. All the code for "
"editing is in ``ebooks.oeb.polish`` in particular the container object is in"
" ``ebooks.oeb.polish.container``."
msgstr ""

# fd930e761c2e4da1b95c524519ddca7b
#: ../../develop.rst:64
msgid ""
"db - The database back-end. See ``db.cache`` for the interface to the |app| "
"library. With a DB object you can access this API via ``db.new_api``. The db"
" object itself exposes a legacy API that should not be used in new code. The"
" legacy API is in ``library.database2``."
msgstr ""

# 55a64c32e2db4a69a1c6ab1901f74989
#: ../../develop.rst:65
msgid "content server: ``library.server`` is the |app| Content Server."
msgstr ""

# a29825a082664b4398ea5c5c118dafa2
#: ../../develop.rst:66
msgid ""
"gui2 - The Graphical User Interface. GUI initialization happens in "
"``gui2.main`` and ``gui2.ui``. The ebook-viewer is in ``gui2.viewer``. The "
"ebook editor is in ``gui2.tweak_book``."
msgstr ""

# d43487f96c58477daaed3af9ce25ff0a
#: ../../develop.rst:68
msgid ""
"If you want to locate the entry points for all the various |app| "
"executables, look at the ``entry_points`` structure in `linux.py "
"<https://github.com/kovidgoyal/calibre/blob/master/src/calibre/linux.py>`_."
msgstr ""

# 3c63ac24c4f04b37824f1ae427c5e175
#: ../../develop.rst:72
msgid ""
"If you need help understanding the code, post in the `development forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=240>`_ and you will "
"most likely get help from one of |app|'s many developers."
msgstr ""

# 6271912e47a64823b2cb784a7f4cce70
#: ../../develop.rst:76
msgid "Getting the code"
msgstr ""

# b51fe19b894c4f8dbafed3433511b5b9
#: ../../develop.rst:78
msgid ""
"You can get the |app| source code in two ways, using a version control "
"system or directly downloading a `tarball <http://status.calibre-"
"ebook.com/dist/src>`_."
msgstr ""

# cc382da7bc4d44889c38ead1ccc714ce
#: ../../develop.rst:81
msgid ""
"|app| uses `Git <http://www.git-scm.com/>`_, a distributed version control "
"system. Git is available on all the platforms |app| supports.  After "
"installing Git, you can get the |app| source code with the command::"
msgstr ""

# 2c10fe4981f04c759cc7fbfa8785021b
#: ../../develop.rst:87
msgid ""
"On Windows you will need the complete path name, that will be something like"
" :file:`C:\\\\Program Files\\\\Git\\\\git.exe`."
msgstr ""

# bc375b2dff4a42a39cec59bd4abf71a4
#: ../../develop.rst:89
msgid ""
"|app| is a very large project with a very long source control history, so "
"the above can take a while (10mins to an hour depending on your internet "
"speed)."
msgstr ""

# 2253146312944e669c28cee39f0bf2a8
#: ../../develop.rst:92
msgid ""
"If you want to get the code faster, the sourcecode for the latest release is"
" always available as an `archive <http://status.calibre-"
"ebook.com/dist/src>`_."
msgstr ""

# 2fd7a3fca3564428b4ad998e85655b9f
#: ../../develop.rst:95
msgid "To update a branch to the latest code, use the command::"
msgstr ""

# fde7fca3f14240799ab1d0f54d138ee1
#: ../../develop.rst:100
msgid "Submitting your changes to be included"
msgstr ""

# c1163f33d4554a74a2a2591c8de5b6ed
#: ../../develop.rst:102
msgid ""
"If you only plan to make a few small changes, you can make your changes and "
"create a \"merge directive\" which you can then attach to a ticket in the "
"|app| `bug tracker <https://bugs.launchpad.net/calibre>`_. To do this, make "
"your changes, then run::"
msgstr ""

# 8f4d0c15e07446869fe4c5610ea86c19
#: ../../develop.rst:110
msgid ""
"This will create a :file:`my-changes` file in the current directory, simply "
"attach that to a ticket on the |app| `bug tracker "
"<https://bugs.launchpad.net/calibre>`_. Note that this will include *all* "
"the commits you have made. If you only want to send some commits, you have "
"to change ``origin/master`` above. To send only the last commit, use::"
msgstr ""

# 6732d2f4595840bb82355092182c87b1
#: ../../develop.rst:118
msgid ""
"To send the last *n* commits, replace *1* with *n*, for example, for the "
"last 3 commits::"
msgstr ""

# 0f697c2fc85c41878eade3937f8a33cc
#: ../../develop.rst:123
msgid "Be careful to not include merges when using ``HEAD~n``."
msgstr ""

# be1f909e3f5c4077b3b6642cba7ccebd
#: ../../develop.rst:125
msgid ""
"If you plan to do a lot of development on |app|, then the best method is to "
"create a `GitHub <http://github.com>`_ account. Below is a basic guide to "
"setting up your own fork of calibre in a way that will allow you to submit "
"pull requests for inclusion into the main |app| repository:"
msgstr ""

# ead3118f023d498d9464bb90a0c87b08
#: ../../develop.rst:130
msgid ""
"Setup git on your machine as described in this article: `Setup Git "
"<https://help.github.com/articles/set-up-git>`_"
msgstr ""

# cfcbfc1f06d2423c895d9fe57f40d9bb
#: ../../develop.rst:131
msgid ""
"Setup ssh keys for authentication to GitHub, as described here: `Generating "
"SSH keys <https://help.github.com/articles/generating-ssh-keys>`_"
msgstr ""

# 7a8dc431fee942439fd212fcb3b64485
#: ../../develop.rst:132
msgid ""
"Go to https://github.com/kovidgoyal/calibre and click the :guilabel:`Fork` "
"button."
msgstr ""

# f74d0a87e3444aefb1fa7d55bb9d506e
#: ../../develop.rst:133
msgid "In a Terminal do::"
msgstr ""

# 0aaa5e19f16a4215a560fee328961600
#: ../../develop.rst:137
msgid ""
"Replace <username> above with your github username. That will get your fork "
"checked out locally."
msgstr ""

# 4909ba52e01441f5becada0b23a0a976
#: ../../develop.rst:138
msgid ""
"You can make changes and commit them whenever you like. When you are ready "
"to have your work merged, do a::"
msgstr ""

# dfaa1f5f19104b5d914d06ca98dea89e
#: ../../develop.rst:142
msgid ""
"and go to ``https://github.com/<username>/calibre`` and click the "
":guilabel:`Pull Request` button to generate a pull request that can be "
"merged."
msgstr ""

# 1ef0dbcecf66415f9e8c0a918ebe402c
#: ../../develop.rst:143
msgid ""
"You can update your local copy with code from the main repo at any time by "
"doing::"
msgstr ""

# 118084f2d8dd4266a74e5436ea3c2d6a
#: ../../develop.rst:148
msgid ""
"You should also keep an eye on the |app| `development forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=240>`_. Before making "
"major changes, you should discuss them in the forum or contact Kovid "
"directly (his email address is all over the source code)."
msgstr ""

# bfaaea71b9cd416d81ea83f22643c601
#: ../../develop.rst:154
msgid "Windows development environment"
msgstr ""

# 18a8f60e164548d594cc204204e1c9be
# 15e6779ba56247d0a81a70f8d7f60575
# 3f47c97cc9e7477d9bfb63e8c6fad7c2
#: ../../develop.rst:156 ../../develop.rst:187 ../../develop.rst:219
msgid "You must also get the |app| source code separately as described above."
msgstr ""

# 554e496df0f64daf85edd06b1733329a
#: ../../develop.rst:158
msgid ""
"Install |app| normally, using the Windows installer. Then open a Command "
"Prompt and change to the previously checked out |app| code directory. For "
"example::"
msgstr ""

# 357efcf28282421c921b6549e84a081c
# 7abcfa76deaa44f6b50dac69bfb70bd8
#: ../../develop.rst:163 ../../develop.rst:231
msgid ""
"calibre is the directory that contains the src and resources sub-"
"directories."
msgstr ""

# 49be7c7e77b34dbfb0455219e0559578
#: ../../develop.rst:165
msgid ""
"The next step is to set the environment variable ``CALIBRE_DEVELOP_FROM`` to"
" the absolute path of the src directory. So, following the example above, it"
" would be ``C:\\Users\\kovid\\work\\calibre\\src``. `Here is a short guide "
"<http://docs.python.org/using/windows.html#excursus-setting-environment-"
"variables>`_ to setting environment variables on Windows."
msgstr ""

# fc7d45e5fe2a44ec85820de1dc795eff
#: ../../develop.rst:170
msgid ""
"Once you have set the environment variable, open a new command prompt and "
"check that it was correctly set by using the command::"
msgstr ""

# 088cff4f9dda491292893d117d779486
# c5471d25e1334b77a0a22509bc304994
#: ../../develop.rst:175 ../../develop.rst:242
msgid ""
"Setting this environment variable means that |app| will now load all its "
"Python code from the specified location."
msgstr ""

# 182340a896874963b8717287e5a005b2
#: ../../develop.rst:177
msgid ""
"That's it! You are now ready to start hacking on the |app| code. For "
"example, open the file :file:`src\\\\calibre\\\\__init__.py` in your "
"favorite editor and add the line::"
msgstr ""

# 2440d0a72660435b8f506e6a78b319db
# 240543a47f2047fe9a9bdb76af7039a6
#: ../../develop.rst:182 ../../develop.rst:249
msgid ""
"near the top of the file. Now run the command :command:`calibredb`. The very"
" first line of output should be ``Hello, world!``."
msgstr ""

# 55188848e7ea432aacf51adfb0053681
#: ../../develop.rst:185
msgid "OS X development environment"
msgstr ""

# ae6e94e7e9174826b499ef65768c18d4
#: ../../develop.rst:189
msgid ""
"Install |app| normally using the provided .dmg. Then open a Terminal and "
"change to the previously checked out |app| code directory, for example::"
msgstr ""

# 943a05dbe3034d3a99b03bf45d6c9aa3
#: ../../develop.rst:194
msgid ""
"calibre is the directory that contains the src and resources sub-"
"directories. Ensure you have installed the |app| commandline tools via "
":guilabel:`Preferences->Advanced->Miscellaneous` in the |app| GUI."
msgstr ""

# e9c6ba5f38824052862bf6168dc8580b
#: ../../develop.rst:196
msgid ""
"The next step is to create a bash script that will set the environment "
"variable ``CALIBRE_DEVELOP_FROM`` to the absolute path of the src directory "
"when running calibre in debug mode."
msgstr ""

# 1f7a7bcd6b13447390cb7c125768da1f
#: ../../develop.rst:198
msgid "Create a plain text file::"
msgstr ""

# 9f8cb974e987471e901958465f94df48
#: ../../develop.rst:204
msgid ""
"Save this file as ``/usr/bin/calibre-develop``, then set its permissions so "
"that it can be executed::"
msgstr ""

# 756c985609d947c8b1ab4cfd521ffbc3
#: ../../develop.rst:208
msgid "Once you have done this, run::"
msgstr ""

# 53d4d254a0f540c8b7eda6eef3aff6ca
#: ../../develop.rst:212
msgid ""
"You should see some diagnostic information in the Terminal window as calibre"
" starts up, and you should see an asterisk after the version number in the "
"GUI window, indicating that you are running from source."
msgstr ""

# ad98e2b78b304bd2b9f55e34988e73cf
#: ../../develop.rst:217
msgid "Linux development environment"
msgstr ""

# fa5b0ce942264c67970aac3cb894e027
#: ../../develop.rst:221
msgid ""
"|app| is primarily developed on Linux. You have two choices in setting up "
"the development environment. You can install the |app| binary as normal and "
"use that as a runtime environment to do your development. This approach is "
"similar to that used in Windows and OS X. Alternatively, you can install "
"|app| from source. Instructions for setting up a development environment "
"from source are in the INSTALL file in the source tree. Here we will address"
" using the binary at runtime, which is the recommended method."
msgstr ""

# b714ce97358a4390b63fd8e2d9d13122
#: ../../develop.rst:227
msgid ""
"Install the |app| using the binary installer. Then open a terminal and "
"change to the previously checked out |app| code directory, for example::"
msgstr ""

# f0307bd2082b475b9e508e2dc5b07fe2
#: ../../develop.rst:233
msgid ""
"The next step is to set the environment variable ``CALIBRE_DEVELOP_FROM`` to"
" the absolute path of the src directory. So, following the example above, it"
" would be ``/home/kovid/work/calibre/src``. How to set environment variables"
" depends on your Linux distribution and what shell you are using."
msgstr ""

# cb92d05158084242b1ba2fb0994eacfb
#: ../../develop.rst:237
msgid ""
"Once you have set the environment variable, open a new terminal and check "
"that it was correctly set by using the command::"
msgstr ""

# 8bfd58a6e83f4132be2387c3f7d1eb64
#: ../../develop.rst:244
msgid ""
"That's it! You are now ready to start hacking on the |app| code. For "
"example, open the file :file:`src/calibre/__init__.py` in your favorite "
"editor and add the line::"
msgstr ""

# eda1f3b1f2c14d3aa01b7d88563a2a33
#: ../../develop.rst:252
msgid ""
"Having separate \"normal\" and \"development\" |app| installs on the same "
"computer"
msgstr ""

# 2b2b430bfcad4607b8d99f8f4a4d85fa
#: ../../develop.rst:254
msgid ""
"The |app| source tree is very stable and rarely breaks, but if you feel the "
"need to run from source on a separate test library and run the released "
"|app| version with your everyday library, you can achieve this easily using "
".bat files or shell scripts to launch |app|. The example below shows how to "
"do this on Windows using .bat files (the instructions for other platforms "
"are the same, just use a shell script instead of a .bat file)"
msgstr ""

# 072dc3b71f1c480db57eccda015d3836
#: ../../develop.rst:259
msgid "To launch the release version of |app| with your everyday library:"
msgstr ""

# 6046dc23fe1d48bcb26c852855665b93
#: ../../develop.rst:261
msgid "calibre-normal.bat::"
msgstr ""

# 57d7cf9815664585aefb12ef63f78e34
#: ../../develop.rst:265
msgid "calibre-dev.bat::"
msgstr ""

# 885ee39cf7a6464d9f9b9021ec877e9d
#: ../../develop.rst:272
msgid "Debugging tips"
msgstr ""

# cf24416c31e44d74ac7b0cc9f33aa10d
#: ../../develop.rst:274
msgid ""
"Python is a dynamically typed language with excellent facilities for "
"introspection. Kovid wrote the core |app| code without once using a "
"debugger. There are many strategies to debug |app| code:"
msgstr ""

# 3341e6eaf48d4e0db17c3ea9abdccaec
#: ../../develop.rst:279
msgid "Using print statements"
msgstr ""

# bd0f06a210954caaa13272b85b1fe44c
#: ../../develop.rst:281
msgid ""
"This is Kovid's favorite way to debug. Simply insert print statements at "
"points of interest and run your program in the terminal. For example, you "
"can start the GUI from the terminal as::"
msgstr ""

# d2fb0622c25e4556a376e797fffb0d3b
#: ../../develop.rst:286
msgid "Similarly, you can start the ebook-viewer as::"
msgstr ""

# 651c82b02c5744459b396d3468eb2b00
#: ../../develop.rst:290
msgid "The ebook-editor can be started as::"
msgstr ""

# 046ec6cb5fe244d9aa3215221d9e71e8
#: ../../develop.rst:295
msgid "Using an interactive python interpreter"
msgstr ""

# db4effd977124a73890fe0eb6c1b1f52
#: ../../develop.rst:297
msgid ""
"You can insert the following two lines of code to start an interactive "
"python session at that point::"
msgstr ""

# e32c1200a36440d580b990cd2c6aa210
#: ../../develop.rst:302
msgid ""
"When running from the command line, this will start an interactive Python "
"interpreter with access to all locally defined variables (variables in the "
"local scope). The interactive prompt even has TAB completion for object "
"properties and you can use the various Python facilities for introspection, "
"such as :func:`dir`, :func:`type`, :func:`repr`, etc."
msgstr ""

# ec391dc6b6e54ecc939f6990c719e0b0
#: ../../develop.rst:308
msgid "Using the python debugger as a remote debugger"
msgstr ""

# 922fd82adca34084b4176a70871f52a4
#: ../../develop.rst:310
msgid ""
"You can use the builtin python debugger (pdb) as a remote debugger from the "
"command line. First, start the remote debugger at the point in the calibre "
"code you are interested in, like this::"
msgstr ""

# bed546854d9147bb8892f574f145edcf
#: ../../develop.rst:317
msgid ""
"Then run calibre, either as normal, or using one of the calibre-debug "
"commands described in the previous section. Once the above point in the code"
" is reached, calibre will freeze, waiting for the debugger to connect."
msgstr ""

# fe7fb4f9ea3041d5b0298d7ff42cbe87
#: ../../develop.rst:321
msgid ""
"Now open a terminal or command prompt and use the following command to start"
" the debugging session::"
msgstr ""

# 0ffbbc8acdc3410da706f8b1cbb3238b
#: ../../develop.rst:326
msgid ""
"You can read about how to use the python debugger in the `python stdlib docs"
" for the pdb module <https://docs.python.org/2/library/pdb.html#debugger-"
"commands>`_."
msgstr ""

# aeaa9771fea94d5fad92adeae8225644
#: ../../develop.rst:330
msgid ""
"By default, the remote debugger will try to connect on port 4444. You can "
"change it, by passing the port parameter to both the set_trace() and the "
"cli() functions above, like this: ``set_trace(port=1234)`` and "
"``cli(port=1234)``."
msgstr ""

# b8e3e87d04a846dca15c9553fa67617e
#: ../../develop.rst:336
msgid ""
"The python debugger cannot handle multiple threads, so you have to call "
"set_trace once per thread, each time with a different port number."
msgstr ""

# c03458a027d44d2484f66924430f179f
#: ../../develop.rst:340
msgid "Using the debugger in your favorite python IDE"
msgstr ""

# a027cd4cc08d403193548a161778f74a
#: ../../develop.rst:342
msgid ""
"It is possible to use the builtin debugger in your favorite python IDE, if "
"it supports remote debugging. The first step is to add the |app| src "
"checkout to the ``PYTHONPATH`` in your IDE. In other words, the directory "
"you set as ``CALIBRE_DEVELOP_FROM`` above, must also be in the "
"``PYTHONPATH`` of your IDE."
msgstr ""

# e4e7f3d5de794347bcf5a2d64400333b
#: ../../develop.rst:347
msgid ""
"Then place the IDE's remote debugger module into the :file:`src` "
"subdirectory of the |app| source code checkout. Add whatever code is needed "
"to launch the remote debugger to |app| at the point of interest, for example"
" in the main function. Then run |app| as normal. Your IDE should now be able"
" to connect to the remote debugger running inside |app|."
msgstr ""

# 9a9135647a6c41e09709442fc3f55a60
#: ../../develop.rst:354
msgid "Executing arbitrary scripts in the |app| python environment"
msgstr ""

# 7e9b0e1992ad4a84b09fa0f8ed5f6c01
#: ../../develop.rst:356
msgid ""
"The :command:`calibre-debug` command provides a couple of handy switches to "
"execute your own code, with access to the |app| modules::"
msgstr ""

# 566b5f873d824c8994301ad7363399bb
#: ../../develop.rst:361
msgid ""
"is great for testing a little snippet of code on the command line. It works "
"in the same way as the -c switch to the python interpreter::"
msgstr ""

# 139370e157da4fb29d260ed45c0117df
#: ../../develop.rst:365
msgid ""
"can be used to execute your own Python script. It works in the same way as "
"passing the script to the Python interpreter, except that the calibre "
"environment is fully initialized, so you can use all the calibre code in "
"your script. To use command line arguments with your script, use the form::"
msgstr ""

# 3b0f56db1be54df7819c609e84de157e
#: ../../develop.rst:370
msgid ""
"The ``--`` causes all subsequent arguments to be passed to your script."
msgstr ""

# 86f9989be4014e65a0dc7ac8a80a97f8
#: ../../develop.rst:374
msgid "Using |app| in your projects"
msgstr ""

# 2195c5fd228948e1962e46d4cc1a0003
#: ../../develop.rst:376
msgid ""
"It is possible to directly use |app| functions/code in your Python project. "
"Two ways exist to do this:"
msgstr ""

# 7d66c100d71842d387de067794e0b9a9
#: ../../develop.rst:379
msgid "Binary install of |app|"
msgstr ""

# 6cbff0c43e584d16a35683fea2697e90
#: ../../develop.rst:381
msgid ""
"If you have a binary install of |app|, you can use the Python interpreter "
"bundled with |app|, like this::"
msgstr ""

# 73720c3a50b042ed815f46cdd2d83825
#: ../../develop.rst:386
msgid "Source install on Linux"
msgstr ""

# b271714d7fda4f45b94a5d41cf617a95
#: ../../develop.rst:388
msgid ""
"In addition to using the above technique, if you do a source install on "
"Linux, you can also directly import |app|, as follows::"
msgstr ""

# 66f2fcb7f39247358936ab6f2c3ab5eb
#: ../../develop.rst:396
msgid ""
"It is essential that you import the init_calibre module before any other "
"|app| modules/packages as it sets up the interpreter to run |app| code."
msgstr ""
