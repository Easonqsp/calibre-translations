# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-14 08:53+0530\n"
"PO-Revision-Date: 2014-11-14 03:24+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Azerbaijani (http://www.transifex.com/projects/p/calibre/language/az/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: az\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 7aa65146f20948a1a7e2b00a379a4c6f
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:4
msgid "Writing your own plugins to extend calibre's functionality"
msgstr ""

# 7906b9598f554199b40baf39d89dfdf0
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:6
msgid ""
"calibre has a very modular design. Almost all functionality in calibre comes"
" in the form of plugins. Plugins are used for conversion, for downloading "
"news (though these are called recipes), for various components of the user "
"interface, to connect to different devices, to process files when adding "
"them to calibre and so on. You can get a complete list of all the built-in "
"plugins in calibre by going to :guilabel:`Preferences->Plugins`."
msgstr ""

# 091ada0039624d8fb05e5011b2678a81
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:8
msgid ""
"Here, we will teach you how to create your own plugins to add new features "
"to calibre."
msgstr ""

# 996f0e80d7614cc3802dc175e1286900
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:0
msgid "Contents"
msgstr ""

# e5fa2c0652044e81843a796a823218fc
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:15
msgid "This only applies to calibre releases >= 0.8.60"
msgstr ""

# 6c0ac3935eb841b691c49d197a87252b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:18
msgid "Anatomy of a calibre plugin"
msgstr ""

# 39f140aebfaa487597b7111fd44a6e04
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:20
msgid ""
"A calibre plugin is very simple, it's just a zip file that contains some "
"python code and any other resources like image files needed by the plugin. "
"Without further ado, let's see a basic example."
msgstr ""

# 3e93b8be11b745d78107aac2fac63b07
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:24
msgid ""
"Suppose you have an installation of calibre that you are using to self "
"publish various e-documents in EPUB and MOBI formats. You would like all "
"files generated by calibre to have their publisher set as \"Hello world\", "
"here's how to do it. Create a file named :file:`__init__.py` (this is a "
"special name and must always be used for the main file of your plugin) and "
"enter the following Python code into it:"
msgstr ""

# 193b30b73e264cf0a88b67debd9fa42c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:32
msgid ""
"That's all. To add this code to calibre as a plugin, simply run the "
"following in the directory in which you created :file:`__init__.py`::"
msgstr ""

# aed6ec811a87401c94181df8894dcedf
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:38
msgid ""
"On OS X, the command line tools are inside the calibre bundle, for example, "
"if you installed calibre in :file:`/Applications` the command line tools are"
" in :file:`/Applications/calibre.app/Contents/console.app/Contents/MacOS/`."
msgstr ""

# 1e718f7bec004c0d992d46eed89d275b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:42
msgid ""
"You can download the Hello World plugin from `helloworld_plugin.zip  <http"
"://calibre-ebook.com/downloads/helloworld_plugin.zip>`_."
msgstr ""

# d978ed5fbdc8477aaa3f5234c194e588
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:45
msgid ""
"Every time you use calibre to convert a book, the plugin's :meth:`run` "
"method will be called and the converted book will have its publisher set to "
"\"Hello World\". This is a trivial plugin, lets move on to a more complex "
"example that actually adds a component to the user interface."
msgstr ""

# bf3f8e0f8275480085cb2be0df1c67cf
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:50
msgid "A User Interface plugin"
msgstr ""

# 94876cab694f4845a75b95d2de2f3ad8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:52
msgid ""
"This plugin will be spread over a few files (to keep the code clean). It "
"will show you how to get resources (images or data files) from the plugin "
"zip file, allow users to configure your plugin, how to create elements in "
"the calibre user interface and how to access and query the books database in"
" calibre."
msgstr ""

# 5d642f4646c24b65b77e346561bfcd94
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:57
msgid ""
"You can download this plugin from `interface_demo_plugin.zip <http"
"://calibre-ebook.com/downloads/interface_demo_plugin.zip>`_"
msgstr ""

# 318c4421ff804dc38e7bf192fbc1046c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:61
msgid ""
"The first thing to note is that this zip file has a lot more files in it, "
"explained below, pay particular attention to ``plugin-import-name-"
"interface_demo.txt``."
msgstr ""

# f8bd6e1a418548338cf46d7e67c4dec1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:77
msgid "**plugin-import-name-interface_demo.txt**"
msgstr ""

# 6fe547ca79db46c884a510292f196ea9
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:65
msgid ""
"An empty text file used to enable the multi-file plugin magic. This file "
"must be present in all plugins that use more than one .py file. It should be"
" empty and its filename must be of the form: plugin-import-"
"name-**some_name**.txt The presence of this file allows you to import code "
"from the .py files present inside the zip file, using a statement like::"
msgstr ""

# 30f4cf49b8ce48a394a7db0d7b67e6c5
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:71
msgid ""
"The prefix ``calibre_plugins`` must always be present. ``some_name`` comes "
"from the filename of the empty text file. ``some_module`` refers to  "
":file:`some_module.py` file inside the zip file. Note that this importing is"
" just as powerful as regular python imports. You can create packages and "
"subpackages of .py modules inside the zip file, just like you would normally"
" (by defining __init__.py in each sub directory), and everything should Just"
" Work."
msgstr ""

# 6946fc0898fe43c5b7136f65763c6578
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:76
msgid ""
"The name you use for ``some_name`` enters a global namespace shared by all "
"plugins, **so make it as unique as possible**. But remember that it must be "
"a valid python identifier (only alphabets, numbers and the underscore)."
msgstr ""

# 4b830cf72edb4350acb13872d9b9345b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:80
msgid "**__init__.py**"
msgstr ""

# 13273c522aba47fdaf293ce5d9d0d462
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:80
msgid "As before, the file that defines the plugin class"
msgstr ""

# e12743965cf04291958204591054e505
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:83
msgid "**main.py**"
msgstr ""

# 36da7af4de0e4c50b8ea47be3a49e898
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:83
msgid "This file contains the actual code that does something useful"
msgstr ""

# 9f7ed474facd4141a9d74b211752cb20
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:86
msgid "**ui.py**"
msgstr ""

# 5e8fe7a228d34b2b8697bb127e375539
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:86
msgid "This file defines the interface part of the plugin"
msgstr ""

# 4edf1aa33f8e4820958cda312f66b41a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:89
msgid "**images/icon.png**"
msgstr ""

# 2414f2197200487da1075fa51a483889
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:89
msgid "The icon for this plugin"
msgstr ""

# 32696b1d37304d9f9ae2d7b368cac630
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:92
msgid "**about.txt**"
msgstr ""

# fe2363e8ecf64634a3805aa0eec561db
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:92
msgid "A text file with information about the plugin"
msgstr ""

# 994b6fbb13a848ceb57fedb04dbef947
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:97
msgid "**translations**"
msgstr ""

# 836114bf8c3d4d798b7114bf0cd2ee23
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:95
msgid ""
"A folder containing .mo files with the translations of the user interface of"
" your plugin into different languages. See below for details."
msgstr ""

# 73370f16778c48cca8965db8e9ae3d10
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:99
msgid "Now let's look at the code."
msgstr ""

# 9433432750324ba99ca618bdfa3d5b82
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:102
msgid "__init__.py"
msgstr ""

# 6b6fbc21e9da470ab6946406a70a2c8e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:104
msgid "First, the obligatory ``__init__.py`` to define the plugin metadata:"
msgstr ""

# 7898a4c34b3a4754b02fd8015b96ce9d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:109
msgid ""
"The only noteworthy feature is the field :attr:`actual_plugin`. Since "
"calibre has both command line and GUI interfaces, GUI plugins like this one "
"should not load any GUI libraries in __init__.py. The actual_plugin field "
"does this for you, by telling calibre that the actual plugin is to be found "
"in another file inside your zip archive, which will only be loaded in a GUI "
"context."
msgstr ""

# 6303b13472d44174af2a994838b2bfce
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:114
msgid ""
"Remember that for this to work, you must have a plugin-import-name-"
"some_name.txt file in your plugin zip file, as discussed above."
msgstr ""

# a5c390571e8b421795bf355b33d1eaf4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:117
msgid ""
"Also there are a couple of methods for enabling user configuration of the "
"plugin. These are discussed below."
msgstr ""

# 4bdc60ed2178439d819445d66a13d9b5
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:120
msgid "ui.py"
msgstr ""

# 79d0be94c8f846e5a3c4ce5c29555581
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:122
msgid ""
"Now let's look at ui.py which defines the actual GUI plugin. The source code"
" is heavily commented and should be self explanatory:"
msgstr ""

# 9a070d16565d40ffb4a1e239525347b7
# 87e2f02b99e64804babab68ffbf5892d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:128
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:212
msgid "main.py"
msgstr ""

# 2f4c0d6ca08449bcb55f6335bd9e2679
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:130
msgid "The actual logic to implement the Interface Plugin Demo dialog."
msgstr ""

# 3bfa61482c764e87a450f7d486d2a0d1
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:136
msgid "Getting resources from the plugin zip file"
msgstr ""

# ed7be4d2333f4c40a947db0ea6af8837
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:138
msgid ""
"calibre's plugin loading system defines a couple of built-in functions that "
"allow you to conveniently get files from the plugin zip file."
msgstr ""

# 8b93330c39c14eb785797ffd747f84de
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:145
msgid "**get_resources(name_or_list_of_names)**"
msgstr ""

# 976d8b589c9346c8910fd51ce84b82e4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:141
msgid ""
"This function should be called with a list of paths to files inside the zip "
"file. For example to access the file icon.png in the directory images in the"
" zip file, you would use: ``images/icon.png``. Always use a forward slash as"
" the path separator, even on windows. When you pass in a single name, the "
"function will return the raw bytes of that file or None if the name was not "
"found in the zip file. If you pass in more than one name then it returns a "
"dict mapping the names to bytes. If a name is not found, it will not be "
"present in the returned dict."
msgstr ""

# 85d77a3486474286ae68adcb076f67ca
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:149
msgid "**get_icons(name_or_list_of_names)**"
msgstr ""

# 07605d26eb694b6793c70b7bbd356983
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:148
msgid ""
"A convenience wrapper for get_resources() that creates QIcon objects from "
"the raw bytes returned by get_resources. If a name is not found in the zip "
"file the corresponding QIcon will be null."
msgstr ""

# acfc2dd4ed2c4c98a690ef705bd10e1e
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:152
msgid "Enabling user configuration of your plugin"
msgstr ""

# 357ba1b881884d1b9356b071e142a762
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:154
msgid ""
"To allow users to configure your plugin, you must define three methods in "
"your base plugin class, '**is_customizable**, **config_widget** and "
"**save_settings** as shown below:"
msgstr ""

# 167065be1d434effbc26226fcedd6259
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:165
msgid ""
"calibre has many different ways to store configuration data (a legacy of its"
" long history). The recommended way is to use the **JSONConfig** class, "
"which stores your configuration information in a .json file."
msgstr ""

# 35755a3b1b0f40d794406a338553eeee
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:167
msgid ""
"The code to manage configuration data in the demo plugin is in config.py:"
msgstr ""

# 69ec017e76524d2bbb8085ff5db5f9b9
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:172
msgid ""
"The ``prefs`` object is now available throughout the plugin code by a "
"simple::"
msgstr ""

# 93994e18d38840a8ae1ec57c767263a9
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:177
msgid "You can see the ``prefs`` object being used in main.py:"
msgstr ""

# 64ab19489bf744f5af5ae24f6cdf89e0
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:184
msgid "Edit Book plugins"
msgstr ""

# e1019b01ce264628bceae62605e0711a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:186
msgid ""
"Now let's change gears for a bit and look at creating a plugin to add tools "
"to the calibre book editor. The plugin is available here: "
"`editor_demo_plugin.zip  <http://calibre-"
"ebook.com/downloads/editor_demo_plugin.zip>`_."
msgstr ""

# 48adfd88788449478fcb97e61ca5fd94
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:190
msgid ""
"The first step, as for all plugins is to create the import name empty txt "
"file, as described :ref:`above <import_name_txt>`. We shall name the file "
"``plugin-import-name-editor_plugin_demo.txt``."
msgstr ""

# b74ff5c71a0f473c93aa1cac2e85bcb9
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:194
msgid ""
"Now we create the mandatory ``__init__.py`` file that contains metadata "
"about the plugin -- its name, author, version, etc."
msgstr ""

# 36d4464b11204e0f82c648295638e3ff
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:200
msgid ""
"A single editor plugin can provide multiple tools each tool corresponds to a"
" single button in the toolbar and entry in the :guilabel:`Plugins` menu in "
"the editor. These can have sub-menus in case the tool has multiple related "
"actions."
msgstr ""

# 3207ebb8273b4146adccb9513f3023ac
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:204
msgid ""
"The tools must all be defined in the file ``main.py`` in your plugin. Every "
"tool is a class that inherits from the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class. Let's look at "
"``main.py`` from the demo plugin, the source code is heavily commented and "
"should be self-explanatory. Read the API documents of the "
":class:`calibre.gui2.tweak_book.plugin.Tool` class for more details."
msgstr ""

# ee571ae1319647d48c5aec91a93170b3
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:214
msgid ""
"Here we will see the definition of a single tool that will multiply all font"
" sizes in the book by a number provided by the user. This tool demonstrates "
"various important concepts that you will need in developing your own "
"plugins, so you should read the (heavily commented) source code carefully."
msgstr ""

# f3fba7ab5d9e43e28e23a55f23ea85ef
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:222
msgid ""
"Let's break down ``main.py``. We see that it defines a single tool, named "
"*Magnify fonts*. This tool will ask the user for a number and multiply all "
"font sizes in the book by that number."
msgstr ""

# 03ffa286dbb1441597f219cc8fa53756
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:226
msgid ""
"The first important thing is the tool name which you must set to some "
"relatively unique string as it will be used as the key for this tool."
msgstr ""

# 8401acc1722f41d68161a4a587b4bad7
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:229
msgid ""
"The next important entry point is the "
":meth:`calibre.gui2.tweak_book.plugin.Tool.create_action`. This method "
"creates the QAction objects that appear in the plugins toolbar and plugin "
"menu. It also, optionally, assigns a keyboard shortcut that the user can "
"customize. The triggered signal from the QAction is connected to the "
"ask_user() method that asks the user for the font size multiplier, and then "
"runs the magnification code."
msgstr ""

# 5db60f306d994e1b9ef239ae9e0475f8
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:237
msgid ""
"The magnification code is well commented and fairly simple. The main things "
"to note are that you get a reference to the editor window as ``self.gui`` "
"and the editor *Boss* as ``self.boss``. The *Boss* is the object that "
"controls the editor user interface. It has many useful methods, that are "
"documented in the :class:`calibre.gui2.tweak_book.boss.Boss` class."
msgstr ""

# d5d24debd6304f2a97101d5c99146331
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:243
msgid ""
"Finally, there is ``self.current_container`` which is a reference to the "
"book being edited as a "
":class:`calibre.ebooks.oeb.polish.container.Container` object. This "
"represents the book as a collection of its constituent HTML/CSS/image files "
"and has convenience methods for doing many useful things. The container "
"object and various useful utility functions that can be reused in your "
"plugin code are documented in :ref:`polish_api`."
msgstr ""

# c735a0ef86df4122873f7cdc417a8bfb
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:252
msgid "Adding translations to your plugin"
msgstr ""

# b5f40b5d5ff040e79685fd7c115f3893
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:254
msgid ""
"You can have all the user interface strings in your plugin translated and "
"displayed in whatever language is set for the main calibre user interface."
msgstr ""

# a142c8eb275344ab92da6e78d147dda2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:257
msgid ""
"The first step is to go through your plugin's source code and mark all user "
"visible strings as translatable, by surrounding them in _(). For example::"
msgstr ""

# 239edcfe51f741e5afdca491e312d93a
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:262
msgid ""
"Then use some program to generate .po files from your plugin source code. "
"There should be one .po file for every language you want to translate into. "
"For example: de.po for German, fr.po for French and so on. You can use the "
"`poedit <http://poedit.net/>`_ program for this."
msgstr ""

# 582da9da294c4c728357ff083118914d
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:267
msgid ""
"Send these .po files to your translators. Once you get them back, compile "
"them into .mo files. You can again use poedit for that, or just do::"
msgstr ""

# 23a3cd4d5ef941db83b63de254116fc9
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:272
msgid "Put the .mo files into the ``translations`` folder in your plugin."
msgstr ""

# 74457b1eb239456c84b42e12236fedeb
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:274
msgid ""
"The last step is to simply call the function `load_translations()` at the "
"top of your plugin's .py files. For performance reasons you should only call"
" this function in those .py files that actually have translatable strings. "
"So in a typical User Interface plugin you would call it at the top of "
"``ui.py`` but not ``__init__.py``."
msgstr ""

# e5a6e77ef8994b71bf6cb37f09d21b3c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:280
msgid ""
"You can test the translations of your plugins by changing the user interface"
" language in calibre under Preferences->Look & Feel or by running calibre "
"like this::"
msgstr ""

# 7bc500b4667f4e0dad11cbade99825da
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:286
msgid ""
"Replace ``de`` with the language code of the language you want to test."
msgstr ""

# da6f72155586405c9fae83655c16f36c
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:289
msgid "The plugin API"
msgstr ""

# 25e2bbf6a6004b52b3e0bafa30039d0b
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:291
msgid ""
"As you may have noticed above, a plugin in calibre is a class. There are "
"different classes for the different types of plugins in calibre. Details on "
"each class, including the base class of all plugins can be found in "
":ref:`plugins`."
msgstr ""

# c14980135b024056bee9464f1c326a38
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:294
msgid ""
"Your plugin is almost certainly going to use code from calibre. To learn how"
" to find various bits of functionality in the calibre code base, read the "
"section on the calibre :ref:`code_layout`."
msgstr ""

# 2aeb7b6e97cc4beeae4f715247f85a64
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:299
msgid "Debugging plugins"
msgstr ""

# 95a8affd383d4ddf90e5383ac8411199
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:301
msgid ""
"The first, most important step is to run calibre in debug mode. You can do "
"this from the command line with::"
msgstr ""

# d4a2dd43e95c4eb184ccffcd7fea4565
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:305
msgid ""
"Or from within calibre by right-clicking the preferences button or using the"
" `Ctrl+Shift+R` keyboard shortcut."
msgstr ""

# 609ae4957bc440f89b1d5d50e24380e7
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:307
msgid ""
"When running from the command line, debug output will be printed to the "
"console, when running from within calibre the output will go to a txt file."
msgstr ""

# dc6a19434a6d454fac1de357d6097f16
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:309
msgid ""
"You can insert print statements anywhere in your plugin code, they will be "
"output in debug mode. Remember, this is python, you really shouldn't need "
"anything more than print statements to debug ;) I developed all of calibre "
"using just this debugging technique."
msgstr ""

# 6f50848a89244d4fa91a229d132909e7
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:311
msgid ""
"You can quickly test changes to your plugin by using the following command "
"line::"
msgstr ""

# 2a037f858547477f81fce71f2a66f899
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:316
msgid ""
"This will shutdown a running calibre, wait for the shutdown to complete, "
"then update your plugin in calibre and relaunch calibre."
msgstr ""

# f94ad4f1f10e481f8c2f2bcc6b89b939
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:319
msgid "More plugin examples"
msgstr ""

# 208a5aeb20dd4f9eb81bee47d773c5fe
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:321
msgid ""
"You can find a list of many, sophisticated calibre plugins `here "
"<http://www.mobileread.com/forums/showthread.php?t=118764>`_."
msgstr ""

# 191c5df2d09e436e9a2dead1aebd82d2
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:324
msgid "Sharing your plugins with others"
msgstr ""

# 61be769fb79e4440b5a70b86f0b87fa4
#: ../../home/kovid/work/calibre/manual/creating_plugins.rst:326
msgid ""
"If you would like to share the plugins you have created with other users of "
"calibre, post your plugin in a new thread in the `calibre plugins forum "
"<http://www.mobileread.com/forums/forumdisplay.php?f=237>`_."
msgstr ""
