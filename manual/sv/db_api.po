# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
# Merarom <merarom@yahoo.es>, 2014
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-10 10:07+0530\n"
"PO-Revision-Date: 2015-03-10 04:30+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Swedish (http://www.transifex.com/projects/p/calibre/language/sv/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: sv\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# fb51b32754f44f7bb830e7b419ac8311
#: ../../home/kovid/work/calibre/manual/db_api.rst:4
msgid "API Documentation for the database interface"
msgstr "API-dokumentation för databasgränssnittet"

# 01e3a9cc5a434a8096dc2c13fb1325bf
#: ../../home/kovid/work/calibre/manual/db_api.rst:9
msgid ""
"This API is thread safe (it uses a multiple reader, single writer locking "
"scheme).  You can access this API like this::"
msgstr "Detta API är trådsäkert (det används en flerläsare, singelskrivare utelåsningsschema). Du kan access detta API så här::"

# 3efc9ba6b4434b79926913e87169a519
#: ../../home/kovid/work/calibre/manual/db_api.rst:14
msgid ""
"If you are in a calibre plugin that is part of the main calibre GUI, you get"
" access to it like this instead::"
msgstr "Om du är i ett Calibre-tilläggsprogram, som är del av Calibres huvudgränssnitt, får du i stället access till det så här::"

# c444e8d6eff04aa5b1933bb077fd2ee6
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache:1
msgid ""
"An in-memory cache of the metadata.db file from a calibre library. This "
"class also serves as a threadsafe API for accessing the database. The in-"
"memory cache is maintained in normal form for maximum performance."
msgstr "En inminnesbuffer av metadata.db-filen från Calibres bibliotek. Denna klass fungerar också som ett trådsäkert API för accessa databasen. Inminnesbufferten hanteras på normalt sätt för maximal prestanda."

# 3fad6690650046279170d4af14219287
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache:5
msgid ""
"SQLITE is simply used as a way to read and write from metadata.db robustly. "
"All table reading/sorting/searching/caching logic is re-implemented. This "
"was necessary for maximum performance and flexibility."
msgstr "SQLITE används helt enkelt som ett stabilt sätt att läsa och skriva från metadata.db."

# 54445d4e5ec848f19a73f456e7ee34fd
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_books:1
msgid ""
"Add the specified books to the library. Books should be an iterable of "
"2-tuples, each 2-tuple of the form :code:`(mi, format_map)` where mi is a "
"Metadata object and format_map is a dictionary of the form :code:`{fmt: "
"path_or_stream}`, for example: :code:`{'EPUB': '/path/to/file.epub'}`."
msgstr "Lägg till angivna böcker till biblioteket. Böcker bör vara en uppräknelig mängd i multipel av 2, varje 2-mängdsgrupp i form av :code:`(mi, format_map)` var mi är ett metadataobjekt och format_map är en ordlista i formen :code:`{fmt: path_or_stream}`, till exempel :code:`{'EPUB': '/path/to/file.epub'}`."

# 16f7bf199f1b416c84064647822a3ecd
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_books:6
msgid ""
"Returns a pair of lists: :code:`ids, duplicates`. ``ids`` contains the book "
"ids for all newly created books in the database. ``duplicates`` contains the"
" :code:`(mi, format_map)` for all books that already exist in the database "
"as per the simple duplicate detection heuristic used by :meth:`has_book`."
msgstr "Returnerar ett listpar: :code:`ids, duplicates`. ``ids`` innehållande bokens identiteter för all nyligen skapade böcker i databasen. \"duplikat\" innehåller :code:`(mi, format_map)` for alla böcker som redan finns i databasen genom enkel duplikdetektionheuristik använd av :meth:`has_book`."

# a2c0a17f6e8749b887dcdfe5a10e4620
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_custom_book_data:1
msgid ""
"Add data for name where val_map is a map of book_ids to values. If "
"delete_first is True, all previously stored data for name will be removed."
msgstr "Lägg till data för namn där val_map är en karta över book_ids till värden. Om delete_first är Sann kommer alla tidigare lagrade data för namn tas bort."

# c53f1e1cd21b4e7285c622826835addb
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:1
msgid ""
"Add a format to the specified book. Return True of the format was added "
"successfully."
msgstr "Lägg ett format till angiven bok. Returnerar True om formatet lyckades   att läggas till."

# 504ff2bc54da4753922670c7a66fc73e
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:3
msgid ""
"If True replace existing format, otherwise if the format already exists, "
"return False."
msgstr "Om True ersätt existerande format, annars om formatet redan finns, returneras False"

# eb7d9c96e5da4221adacf57a23d47134
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:4
msgid ""
"If True, file type plugins are run on the format before and after being "
"added."
msgstr "Om True, körs filtypstillägg på formatet innan och efter tillägg."

# f268b0983d1d4d1195fdbf42a3a3060f
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.add_format:5
msgid "Internal use only."
msgstr "Bara för internt bruk."

# 97c4b4a0a1634c158bff298f7c2f4957
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_book_ids:1
msgid "Frozen set of all known book ids."
msgstr "Frusen uppsättning av alla kända bokidentiteter."

# 38c4bd4ec8d449bd87976a0808aa1b50
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_field_for:1
msgid "Same as field_for, except that it operates on multiple books at once"
msgstr "Samma som field_for, förutom att den opererar på flera böcker på samma gång"

# 3c496d61b4a5497fa0e213889192c208
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_field_ids:1
msgid "Frozen set of ids for all values in the field ``name``."
msgstr "Frusen uppsättning av identiteter för alla värden i fältet \"namn\"."

# 07485b2b73be4645a0f52a757cb6ef9c
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.all_field_names:1
msgid ""
"Frozen set of all fields names (should only be used for many-one and many-"
"many fields)"
msgstr "Frusen uppsättning av alla fältnamn (bör bara användas för många till en och många till många fält)"

# 251533f74d174ddbae6a54ddbb28c8af
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.author_data:1
msgid "Return author data as a dictionary with keys: name, sort, link"
msgstr "Returnerar författardata som ordlista med nycklar: namn, sort, länk"

# 570c128f39c244dfadb1821aaa035166
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.author_data:3
msgid ""
"If no authors with the specified ids are found an empty dictionary is "
"returned. If author_ids is None, data for all authors is returned."
msgstr "Om inga författare med angivna identiteter hittas returneras en tom ordlista. Om author_ids är None, returneras data för alla författare."

# 525d5be255744b719475ee5052c6de5a
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.author_sort_from_authors:1
msgid ""
"Given a list of authors, return the author_sort string for the authors, "
"preferring the author sort associated with the author over the computed "
"string."
msgstr "Givet en lista av författare, returnerar author_sort sträng för författare,  framför författarsortering associerad med författare över bearbetade strängen."

# deb7d1ba84884da18cd5cc0049b808e0
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.books_for_field:1
msgid ""
"Return all the books associated with the item identified by ``item_id``, "
"where the item belongs to the field ``name``."
msgstr "Returnerar alla böcker associerade med posten identifierad av ``item_id``, där posten tillhör fältet  ``name``."

# 65c10702d0bc43129318bd1f5ecd0aba
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.books_for_field:4
msgid ""
"Returned value is a set of book ids, or the empty set if the item or the "
"field does not exist."
msgstr "Returnerat värde är en mängd av bokidentiteter eller den tomma mängden om posten eller fältet inte finns."

# 75c34f685102479083f8a877e2f0336c
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.copy_cover_to:1
msgid ""
"Copy the cover to the file like object ``dest``. Returns False if no cover "
"exists or dest is the same file as the current cover. dest can also be a "
"path in which case the cover is copied to it if and only if the path is "
"different from the current path (taking case sensitivity into account)."
msgstr "Kopiera omslag till filen som objektet ``dest``. Returnerar Falsk om inget omslag finns eller dest är samma fil som det aktuella omslaget. dest kan också vara en sökväg i vilket fall omslaget kopieras till det om och endast om sökvägen är en annan än den aktuella sökvägen (med små bokstäver i beräkningen)."

# 34d86f66a6804672baf718d3a535ed98
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.copy_format_to:1
msgid ""
"Copy the format ``fmt`` to the file like object ``dest``. If the specified "
"format does not exist, raises :class:`NoSuchFormat` error. dest can also be "
"a path, in which case the format is copied to it, iff the path is different "
"from the current path (taking case sensitivity into account)."
msgstr "Kopiera formatet ``fmt`` till filen som posten ``dest``. Om angivet format inte existerar, ger :class:`NoSuchFormat` fel. dest kan också vara en sökväg, i så fall kopieras formatet till den, om (och endast om) sökvägen är skilt i från aktuell sökväg (med beaktning på teckenskiftläge).\n\n\nReturnerar Sann om (och endast om) formatet existerar på disk"

# 28f2bfeaaa0046af91500998c558c0f6
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:1
msgid ""
"Return the cover image or None. By default, returns the cover as a "
"bytestring."
msgstr "Returnerar omslagsbild eller inget. Som standard, returneras omslag som en oktettsträng."

# 1fbb85b8c71647079a99ae73fd3baa61
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:4
msgid ""
"WARNING: Using as_path will copy the cover to a temp file and return the "
"path to the temp file. You should delete the temp file when you are done "
"with it."
msgstr "VARNING: Att använda as_path kommer att kopiera omslaget till en temp-fil och returnera sökvägen till temp-filen. Du bör ta bort temp-filen när du är klar med den."

# af409afdeeee4684a225597f7aa54c9d
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:8
msgid ""
"If True return the image as an open file object (a SpooledTemporaryFile)"
msgstr "Om Sann returnerar bilden som ett öppet filobjekt (en SpooledTemporaryFile)"

# 6cd31e860ac44023b4bfb22e053168db
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:9
msgid "If True return the image as a QImage object"
msgstr "Om Sann returnera bilden som ett Q-bildobjekt"

# 7e61271d32474c0ba28d8fd57e9afc1c
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.cover:10
msgid "If True return the image as a path pointing to a temporary file"
msgstr "Om Sann returnera bilden som en sökväg till en temporärfil"

# 6bc7f0859fbc4172b4ae91d501fded72
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.data_for_find_identical_books:1
msgid ""
"Return data that can be used to implement :meth:`find_identical_books` in a "
"worker process without access to the db. See db.utils for an implementation."
msgstr "Returnerar uppgifter som kan användas för att implementera :meth:`find_identical_books` i en arbetsprocess utan tillgång till db. Se db.utils för en implementering"

# 5233704e3b154403ba23ebd44d337db2
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.data_for_has_book:1
msgid ""
"Return data suitable for use in :meth:`has_book`. This can be used for an "
"implementation of :meth:`has_book` in a worker process without access to the"
" db."
msgstr "Returnerar data som är lämpliga för användning i :meth:'has_book`. Detta kan användas för en implementering av :meth:`has_book` i en arbetsprocess utan tillgång till db."

# 3beda3b1847b4ec29235b4e2b859d42c
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.delete_custom_book_data:1
msgid ""
"Delete data for name. By default deletes all data, if you only want to "
"delete data for some book ids, pass in a list of book ids."
msgstr "Ta bort uppgifter om namn. Av raderar som standard all data, om du bara vill ta bort data för vissa bok ids, passera i en lista med bok ids."

# f6f3b94b302e49de9037124b80a34b60
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.embed_metadata:1
msgid ""
"Update metadata in all formats of the specified book_ids to current metadata"
" in the database."
msgstr "Uppdatera metadata i alla format av de angivna bok_ids till aktuell metadata i databasen."

# 60e73ab2f3474e7e9d5cf0b9ddc40f46
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.fast_field_for:1
msgid ""
"Same as field_for, except that it avoids the extra lookup to get the field "
"object"
msgstr "Samma som field_for, förutom att den undviker extra uppslag för att få fältobjektet"

# 6546186adc9b4c51a14edadb6e2aec2c
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_for:1
msgid ""
"Return the value of the field ``name`` for the book identified by "
"``book_id``. If no such book exists or it has no defined value for the field"
" ``name`` or no such field exists, then ``default_value`` is returned."
msgstr "Returnera värdet av fältet ``name`` för boken som identifieras av ``book_id``. Om ingen sådan bok existerar eller inte har något definierat värde för fältet ``name`` eller inget sådant fält finns, så returneras ``default_value``."

# 9ecc07fee04542608195313093b8d323
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_for:6
msgid ""
"``default_value`` is not used for title, title_sort, authors, author_sort "
"and series_index. This is because these always have values in the db. "
"``default_value`` is used for all custom columns."
msgstr "``default_value`` används inte för title, title_sort, authors, author_sort och series_index. Detta för dessa alltid har värden i databasen ``default_value`` används för anpassade kolumner."

# bd53e92cc7644b8da6ac072e5ecbe014
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_for:10
msgid ""
"The returned value for is_multiple fields are always tuples, even when no "
"values are found (in other words, default_value is ignored). The exception "
"is identifiers for which the returned value is always a dict. The returned "
"tuples are always in link order, that is, the order in which they were "
"created."
msgstr "Det returnerade värdet för is_multiple fält är alltid tupler, även om inga värden finns (med andra ord, default_value ignoreras). Undantaget är identifierare som det returnerade värdet alltid är en 'dict'. De returnerade tupler är alltid länkordning, det vill säga i vilken ordning de skapades."

# 9eadcd6ccce7450291f1bc2b839fe595
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.field_ids_for:1
msgid ""
"Return the ids (as a tuple) for the values that the field ``name`` has on "
"the book identified by ``book_id``. If there are no values, or no such book,"
" or no such field, an empty tuple is returned."
msgstr "Returnera id:ar (som en tupel) för de värden som fältet ``namn`` har på boken som identifieras av ``book_id``. Om det inte finns några värden, eller ingen sådan bok, eller något sådant fält, returneras en tom tupel tillbaka."

# b6caf483589e40d8b8c34de738d018e5
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.find_identical_books:1
msgid ""
"Finds books that have a superset of the authors in mi and the same title "
"(title is fuzzy matched). See also :meth:`data_for_find_identical_books`."
msgstr "Hittar böcker som har en övermängd av författarna i mi och samma titel (titeln är luddig matchas). Se även :meth:'data_for_find_identical_books`."

# 7b7bacc59ed74939976348fd56b73234
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:1
msgid ""
"Return the ebook format as a bytestring or `None` if the format doesn't "
"exist, or we don't have permission to write to the ebook file."
msgstr "Returnera e-bokformat som en oktettsträng eller `None` om formatet inte finns, eller att vi inte har behörighet att skriva till e-bokfilen."

# e2507694476b47c6b641b80d3124492f
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:4
msgid ""
"If True the ebook format is returned as a file object. Note that the file "
"object is a SpooledTemporaryFile, so if what you want to do is copy the "
"format to another file, use :meth:`copy_format_to` instead for performance."
msgstr "Om Sann returneras e-bokformat som ett filobjekt. Observera att filobjektet är en SpooledTemporaryFile, så om vad du vill göra är att kopiera formatet till en annan fil, använd: meth: `copy_format_to` stället för utförande."

# 5eb9d0b4049146909e433ba77b9e9538
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:8
msgid ""
"Copies the format file to a temp file and returns the path to the temp file"
msgstr "Kopierar formatet filen till en temp-fil och returnerar sökvägen till temp-fil"

# cc1f828a636846d38981ac8717f00973
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format:10
msgid ""
"If True and returning a path the filename is the same as that used in the "
"library. Note that using this means that repeated calls yield the same temp "
"file (which is re-created each time)"
msgstr "Om Sann och returneras en sökväg, filnamnet är samma som den som används i biblioteket. Observera att detta innebär att upprepade anrop ger samma temp-fil (som återskapas varje gång)"

# c9655345135c42edb4a172357837b733
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_abspath:1
msgid ""
"Return absolute path to the ebook file of format `format`. You should almost"
" never use this, as it breaks the threadsafe promise of this API. Instead "
"use, :meth:`copy_format_to`."
msgstr "Returnera absolut sökväg till e-bokfilen i formatet `format`. Du bör nästan aldrig använda det, eftersom det bryter trådsäkerhetsgarantin i detta API. Använd istället, :meth:`copy_format_to`."

# c2ff844d197741cab3b7e624b78d1727
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_abspath:5
msgid ""
"Currently used only in calibredb list, the viewer, edit book, compare_format"
" to original format, open with and the catalogs (via get_data_as_dict())."
msgstr ""

# 9e813c5457d347c58332b16432100a68
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_abspath:9
msgid ""
"Apart from the viewer, open with and edit book, I don't believe any of the "
"others do any file write I/O with the results of this call."
msgstr ""

# de5da33faf3c45bf9caa6bdac813e045
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_hash:1
msgid ""
"Return the hash of the specified format for the specified book. The kind of "
"hash is backend dependent, but is usually SHA-256."
msgstr "Returnera hash för det angivna formatet för den angivna boken. Den typ av hash är algoritmberoende, men är oftast SHA-256."

# fc2c6a25010248ef9fe546b1fa5fe1e1
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_metadata:1
msgid ""
"Return the path, size and mtime for the specified format for the specified "
"book. You should not use path unless you absolutely have to, since accessing"
" it directly breaks the threadsafe guarantees of this API. Instead use the "
":meth:`copy_format_to` method."
msgstr "Returnerar sökväg, storlek och mtime för det specifika formatet för den specifika boken. Du bör inte använda sökväg  annat om du absolut måste, eftersom direktaccess av den förstör trådsäkerhetsgarantin av detta API(gränssnitt). I stället använd :meth:`copy_format_to` metoden."

# 7ce130da5ffd465780d75b563a0b6f94
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_metadata:6
msgid ""
"If ``True`` cached values are used, otherwise a slow filesystem access is "
"done. The cache values could be out of date if access was performed to the "
"filesystem outside of this API."
msgstr "Om Sann, används buffrade värden, annars sker en långsam filsystemaccess . Buffrade värden kan vara utdaterade om access sker till filsystem utanför detta API (gränssnitt)."

# e04793f91fbd4e1da83e34c6c43b06b7
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.format_metadata:10
msgid ""
"If ``True`` The max_size field of the database is updates for this book."
msgstr "Om Sann är max_size-fältet av databasen uppdatering av denna bok."

# b65ee04888c04e39949e96a838aaeb7b
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.formats:1
msgid ""
"Return tuple of all formats for the specified book. If verify_formats is "
"True, verifies that the files exist on disk."
msgstr "Returnerar tupel av alla format för den specifika boken. Om verify_formats är Sann verifieras att filer existerar på disken."

# a27468608a5546198038ef318668196c
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_categories:1
msgid "Used internally to implement the Tag Browser"
msgstr "Används internt för att implementera etikettbläddraren"

# 043b8cafab6b45e1ba5c7d819bf9612b
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_custom_book_data:1
msgid ""
"Get data for name. By default returns data for all book_ids, pass in a list "
"of book ids if you only want some data. Returns a map of book_id to values. "
"If a particular value could not be decoded, uses default for it."
msgstr "Hämta data för namn. Som standard returneras data för alla book_ids, förse med en lista av bok identiteter om du bara vill  ha några data. Returnerar en översikt av book_id till värden. Om en speciellt värde inte kan identifieras, används i stället standardvärde för den."

# 50069c86305945028a420e9f317fc58b
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_id_map:1
msgid ""
"Return a mapping of id numbers to values for the specified field. The field "
"must be a many-one or many-many field, otherwise a ValueError is raised."
msgstr "Returnerar en översik av id nummer till värden för specifika fält. Fältet måste vara en många-en eller många-många fält, annars genereras ett ValueError."

# 3a63cccbb6eb4e2a82c7aef1ce7f20cb
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_ids_for_custom_book_data:1
msgid "Return the set of book ids for which name has data."
msgstr "Returnerar en uppsättning bok id för vilket namn har data."

# 45fa2453f4a341bc8ed130c6497138ae
# 1c31495a49394df9b038f958012ea941
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_item_id:1
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_item_ids:1
msgid "Return the item id for item_name (case-insensitive)"
msgstr "Returnerar posten id för item_name (skiftlägesokänslig)"

# e96f9905ec014265932d8e793e675890
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_item_name:1
msgid ""
"Return the item name for the item specified by item_id in the specified "
"field. See also :meth:`get_id_map`."
msgstr "Returnerar postnamnet för posten som anges av item_id i specificerat fält. Se också :meth:`get_id_map`."

# 4f1a98d76a10475b99c943a60b0a4ad4
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_metadata:1
msgid ""
"Return metadata for the book identified by book_id as a :class:`Metadata` "
"object. Note that the list of formats is not verified. If get_cover is True,"
" the cover is returned, either a path to temp file as mi.cover or if "
"cover_as_data is True then as mi.cover_data."
msgstr "Returnerar metadata för boken identifierat av book_id som ett :class:`Metadata` objekt. Notera att listan av format inte är verifierad. Om get_cover är Sann, kommer omslag att returneras, antingen som en sökväg till temporärfilen mi.cover eller om cover_as_data är Sant som mi.cover_data."

# a88315f335de4016aa3f2eba83b0d350
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_next_series_num_for:1
msgid ""
"Return the next series index for the specified series, taking into account "
"the various preferences that control next series number generation."
msgstr "Returnerar nästa serieindex för den specifika serien, med beaktning av olika förval som styr generering av nästa serienummer."

# e18bf8181df54d44b40b7807df0c809b
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_next_series_num_for:4
msgid "The series-like field (defaults to the builtin series column)"
msgstr "Serielikt fält (som standard för inbyggda seriekolumnen)"

# fbd71a1a797241f4a600958435446b87
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_next_series_num_for:5
msgid ""
"If True, returns a mapping of book_id to current series_index value instead."
msgstr "Om Sann, returnerar en översikt av book_id till aktuell serie_index-värde i stället."

# cd147316e8384098abc8bf1a79040f2c
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_proxy_metadata:1
msgid ""
"Like :meth:`get_metadata` except that it returns a ProxyMetadata object that"
" only reads values from the database on demand. This is much faster than "
"get_metadata when only a small number of fields need to be accessed from the"
" returned metadata object."
msgstr "Liksom: meth: `get_metadata` förutom att den returnerar ett ProxyMetadata-objekt som bara läser värden från databasen på förfrågan. Det är mycket snabbare än get_metadata när endast ett mindre antal fält behöver nås från returnerat metadataobjekt."

# 237a93f731bb424fa7941302d702829a
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.get_usage_count_by_id:1
msgid ""
"Return a mapping of id to usage count for all values of the specified field,"
" which must be a many-one or many-many field."
msgstr "Returnerar en översikt av id till räkningsanvändning för alla värden på det angivna området, som måste vara en många-en eller många-många fält."

# a274dbe4cb144d368ada704cd84d212d
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.has_book:1
msgid ""
"Return True iff the database contains an entry with the same title as the "
"passed in Metadata object. The comparison is case-insensitive. See also "
":meth:`data_for_has_book`."
msgstr "Returnerar Sann om och endast om databasen innehåller en post med samma titel som den angivna i metadataobjektet. Jämförelsen är skiftlägeskänsliga . Se även :meth:'data_for_has_book`."

# a570b867ea504dd7ac066c29d6e394d4
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.has_format:1
msgid "Return True iff the format exists on disk"
msgstr "Returnerar Sann om (och endast om) formatet existerar på disk"

# ce98c17758d64f39ba04989e35c1a608
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.has_id:1
msgid "Return True iff the specified book_id exists in the db"
msgstr "Returnerar Sann om (och endast om) specificerat bok_id existerar i db"

# 26bba035046a4b8390de0caeb9d50bae
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.init:1
msgid "Initialize this cache with data from the backend."
msgstr "Initialisera denna buffring med data från fjärrsidan."

# dd436d1d61a7450a89658072716e6af9
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.multisort:1
msgid ""
"Return a list of sorted book ids. If ids_to_sort is None, all book ids are "
"returned."
msgstr "Returnerar en lista av sorterade bok id. Om ids_to_sort är  None, kommer alla all bok id att returneras."

# 79c252dc95444e0f93788c7aadf9be38
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.multisort:4
msgid ""
"fields must be a list of 2-tuples of the form (field_name, ascending=True or"
" False). The most significant field is the first 2-tuple."
msgstr "fälten måste vara en lista av 2-tupler på formatet (field_name, ascending=True eller False). Det mest signifikata fältet är den första 2-tupeln."

# 893a333f9302474e85652f50425192c2
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.pref:1
msgid ""
"Return the value for the specified preference or the value specified as "
"``default`` if the preference is not set."
msgstr "Returnerar värdet för det specifika förvalet eller värdet angivet som ``standard`` om inget förval är angivet."

# eff9f42fc2544e19ad1cc561bfbd2ba4
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.read_backup:1
msgid ""
"Return the OPF metadata backup for the book as a bytestring or None if no "
"such backup exists."
msgstr "Returnerar OPF-metadatalagringen för boken som en oktettsträng eller None om ingen sådan lagrad finns."

# 074cbf2b838c4f9399e0db78e9ab831e
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_books:1
msgid ""
"Remove the books specified by the book_ids from the database and delete "
"their format files. If ``permanent`` is False, then the format files are not"
" deleted."
msgstr "Ta bort böcker  angivna av book_ids från databasen eller tar bort deras formatfiler. Om ``permanent`` är False, så kommer inte formatfiler tas bort."

# 71b1713363d5484baac086f24a01482d
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_formats:1
msgid "Remove the specified formats from the specified books."
msgstr "Ta bort angivna format från angivna böcker."

# 34f6d2bb9fdb446597e8d9904da8863f
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_formats:3
msgid "A mapping of book_id to a list of formats to be removed from the book."
msgstr "En översikt av book_id till en lista av format som ska tas bort från boken."

# 5185490815414227af96b80c0ec3aa52
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_formats:4
msgid ""
"If True, only remove the record for the format from the db, do not delete "
"the actual format file from the filesystem."
msgstr "Om Sann, tas bara handlingen av format från databasen, tar inte bort de aktuella filformaten från filsystemet."

# 007f85777a2f40e9a57b93e66a712300
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.remove_items:1
msgid ""
"Delete all items in the specified field with the specified ids. Returns the "
"set of affected book ids. ``restrict_to_book_ids`` is an optional set of "
"books ids. If specified the items will only be removed from those books."
msgstr ""

# f5da6ef2c24b41debc4381bf771340af
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.rename_items:1
msgid ""
"Rename items from a many-one or many-many field such as tags or series."
msgstr "Döp om poster från många-en eller många-många fält som etiketter eller serier."

# f14d349785e9466dbdff62915826be67
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.rename_items:3
msgid ""
"When renaming in a series-like field also change the series_index values."
msgstr "Vi omdöpning i en serielikt fält förändras även series_index värden."

# 0b89df731bdf4884837c98d3464f5baa
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.rename_items:4
msgid ""
"An optional set of book ids for which the rename is to be performed, "
"defaults to all books."
msgstr ""

# 7e8b47ca5aac438299ac4a81ec33ea04
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.restore_book:1
msgid ""
"Restore the book entry in the database for a book that already exists on the"
" filesystem"
msgstr "Återställer bokuppslaget i databasen för en bok som redan finns i filsystemet."

# 6b9c67584b474e7f9bb05a715d2759bb
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.restore_original_format:1
msgid ""
"Restore the specified format from the previously saved ORIGINAL_FORMAT, if "
"any. Return True on success. The ORIGINAL_FORMAT is deleted after a "
"successful restore."
msgstr "Återställer det angivna formatet från tidigare sparat ORIGINAL_FORMAT, om något. Returnerar Sann vid framgång. The ORIGINAL_FORMAT tas bort efter en lyckad återställning."

# 68c3815c1cf347b78586dcca3c618560
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.safe_read_lock:1
msgid ""
"A safe read lock is a lock that does nothing if the thread already has a "
"write lock, otherwise it acquires a read lock. This is necessary to prevent "
"DowngradeLockErrors, which can happen when updating the search cache in the "
"presence of composite columns. Updating the search cache holds an exclusive "
"lock, but searching a composite column involves reading field values via "
"ProxyMetadata which tries to get a shared lock. There may be other scenarios"
" that trigger this as well."
msgstr "Ett säker läsningslås är ett lås som gör ingenting om tråden redan har en skrivlås, annars begärs ett läslås. Detta är nödvändigt för att förhindra DowngradeLockErrors, vilket kan ske vid uppdatering av sökningen bufferten i närvaro av kompositkolumner. Uppdatering av sökningen bufferten har ett exklusivt lås, men söker en sammansatt kolumn vilket innebär läsning av fältvärden via ProxyMetadata som försöker att få ett delat lås. Det kan finnas andra scenarier som utlöser detta."

# 02de08cb4cb9425bb9b203b8280181bd
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.safe_read_lock:9
msgid ""
"This property returns a new lock object on every access. This lock object is"
" not recursive (for performance) and must only be used in a with statement "
"as ``with cache.safe_read_lock:`` otherwise bad things will happen."
msgstr "Den här egenskapen returnerar ett nytt låsobjekt på varje access. Detta låsobjekt är inte rekursivt (för prestanda) och får endast användas i ett med uttalande som ``with cache.safe_read_lock:`` annars kommer dåliga saker att hända."

# ff24755bd8774e14b81babb41d2258de
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.save_original_format:1
msgid ""
"Save a copy of the specified format as ORIGINAL_FORMAT, overwriting any "
"existing ORIGINAL_FORMAT."
msgstr "Spara en kopia i angivet format som ORIGINAL_FORMAT, skriver över alla befintliga ORIGINAL_FORMAT."

# a1c85ecfceac4890942f635af8e0ebb9
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:1
msgid ""
"Search the database for the specified query, returning a set of matched book"
" ids."
msgstr "Söker i databasen med angiven sökning, returnerar en uppsättning av passande bok id:ar."

# 8800d06aec29496b9f7a99de373e72fb
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:3
msgid ""
"A restriction that is ANDed to the specified query. Note that restrictions "
"are cached, therefore the search for a AND b will be slower than a with "
"restriction b."
msgstr "En begränsning som är AND-ad med angiven förfrågan. Observera att restriktioner mellanlagras, alltså sökandet efter a AND b kommer att vara långsammare än en med a restriktions b."

# dcdda47d164940929d8115a7065c7f2e
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:6
msgid "Used internally (virtual fields such as on_device to search over)."
msgstr "Använt internt (virtuella fält som on_device för söka efter)"

# 997dd975e2e14dcebc4a9fa3b9a97d90
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.search:8
msgid ""
"If not None, a set of book ids for which books will be searched instead of "
"searching all books."
msgstr "Om inte None, en uppsättning bok id:ar där böckerna kommer att sökas i stället för att söka alla böcker."

# a9b8cdb0d8894eea818fb2926bb16b20
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_conversion_options:1
msgid "options must be a map of the form {book_id:conversion_options}"
msgstr "alternativ måste vara en översikt på formen {book_id:conversion_options}"

# 990eea6885f445e9b2f51d0f5b80eded
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_cover:1
msgid ""
"Set the cover for this book.  data can be either a QImage, QPixmap, file "
"object or bytestring. It can also be None, in which case any existing cover "
"is removed."
msgstr "Ange omslag för denna bok. data kan antingen vara en QImage, QPixmap, filobjekt eller oktettsträng. Det kan också vara None, i fallet omslag är borttaget."

# 5c5877eb3a534bd3979bba9467418a4e
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:1
msgid ""
"Set the values of the field specified by ``name``. Returns the set of all "
"book ids that were affected by the change."
msgstr "Ange värden av fält angivna av  ``namn``. Returnerar uppsättningen av bok id:ar som påverkades av förändringen."

# 2dfa99e2755b43c3bde1365a67b485e8
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:3
msgid "Mapping of book_ids to values that should be applied."
msgstr "Översikt av book_ids till värden som ska tillämpas."

# c22a6d85e78241f6a3ba26181e56c194
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:4
msgid ""
"If True, the case of many-one or many-many fields will be changed. For "
"example, if a  book has the tag ``tag1`` and you set the tag for another "
"book to ``Tag1`` then the both books will have the tag ``Tag1`` if "
"allow_case_change is True, otherwise they will both have the tag ``tag1``."
msgstr "Om Sann, i fall det rör sig om många-en eller många-många områden förändras. Till exempel, om en bok har etiketten ``tag1`` och du anger etiketten för en annan bok till ``Tag1`` då kommer båda böckerna att ha etiketten ``Tag1`` om allow_case_change är Sann, annars kommer de båda ha etiketten ``tag1``."

# 2abd33d3ddde43e79ab6bb5b5ce91d8b
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_field:8
msgid "Used internally, you should never change it."
msgstr "Används internt, du bör aldrig ändra den."

# b755c71cfb6745259404ee3abf149876
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_metadata:1
msgid "Set metadata for the book `id` from the `Metadata` object `mi`"
msgstr "Ange metadata för boken `id` från `Metadata`-objektet `mi`"

# 1a3d530566e9404b858c4aef12f496fa
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_metadata:3
msgid ""
"Setting force_changes=True will force set_metadata to update fields even if "
"mi contains empty values. In this case, 'None' is distinguished from "
"'empty'. If mi.XXX is None, the XXX is not replaced, otherwise it is. The "
"tags, identifiers, and cover attributes are special cases. Tags and "
"identifiers cannot be set to None so then will always be replaced if "
"force_changes is true. You must ensure that mi contains the values you want "
"the book to have. Covers are always changed if a new cover is provided, but "
"are never deleted. Also note that force_changes has no effect on setting "
"title or authors."
msgstr "När man sätter force_changes = Sann tvingas set_metadata att uppdatera fält, även om mi innehåller tomma värden. I det här fallet är \"None\" skiljt från \"empty\". Om mi.XXX är None ersätts XXX inte, annars görs det. Etiketter, identifierare, och omslagsattribut är specialfall. Etiketter och identifierare kan inte ställas in på None för då kommer de alltid ersättas om force_changes är Sann. Du måste se till att mi innehåller de värden som du vill att boken ska ha. Omlslag förändras alltid om ett nytt omslag finns, men de raderas aldrig . Observera också att force_changes har ingen effekt på inställningen titel eller författare."

# 4a459dc9767543579d9a8cca13363c33
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.set_pref:1
msgid ""
"Set the specified preference to the specified value. See also :meth:`pref`."
msgstr "Ange angivna förval till de angivna värdet. Se också :meth:`pref`."

# f992abe5ba1c4261b1a5dda7d71bcb66
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:1
msgid ""
"Return the ids of all books having the tag ``tag`` that are older than the "
"specified time. tag comparison is case insensitive."
msgstr "Returnera ids av alla böcker som har etiketten  `` etikett`` som är äldre än den angivna tiden. etikettenjämförelse är skiftlägesoberoende."

# 3d41e49a8f7d4ab9b3cf72f69877643e
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:4
msgid ""
"A timedelta object or None. If None, then all ids with the tag are returned."
msgstr "En timedelta-objekt eller None. Om None kommer alla id:ar med etiketten returneras."

# 3d3a9155b0af47c9b8783edc09b86fc2
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:7
msgid ""
"If not None the list of matches will be restricted to books that have this "
"tag"
msgstr "Om inte None listan av träffar kommer begränsas till böcker som har denna etikett"

# 8e5a5443a6d64186b309797de77e4a2c
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.tags_older_than:10
msgid ""
"A list of authors. If not None the list of matches will be restricted to "
"books that have these authors (case insensitive)."
msgstr "En lista av författare. Om inte None listan av träffar kommer begränsas till böcker som har dessa författare (skiftlägesokänslig)."

# 34191f0f94294d65888732958696f6f0
#: ../../home/kovid/work/calibre/src/calibre/db/cache.pydocstring of
#: calibre.db.cache.Cache.user_categories_for_books:1
msgid ""
"Return the user categories for the specified books. proxy_metadata_map is "
"optional and is useful for a performance boost, in contexts where a "
"ProxyMetadata object for the books already exists. It should be a mapping of"
" book_ids to their corresponding ProxyMetadata objects."
msgstr "Returnera användarkategorier för de angivna böckerna. proxy_metadata_map är valfritt och är användbar för en prestandaökning, i sammanhang där ett ProxyMetadata objekt för böckerna redan finns. Det bör vara en korsreferens av book_ids till deras motsvarande ProxyMetadata objekt."
