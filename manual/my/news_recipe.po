# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-14 08:53+0530\n"
"PO-Revision-Date: 2014-11-14 03:23+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Burmese (http://www.transifex.com/projects/p/calibre/language/my/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: my\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 9e8db557f98543dfa189b6f700ec266e
#: ../../home/kovid/work/calibre/manual/news_recipe.rst:4
msgid "API Documentation for recipes"
msgstr ""

# efb9b27950e84d2b8b8f6d18602a877c
#: ../../home/kovid/work/calibre/manual/news_recipe.rst:9
msgid "The API for writing recipes is defined by the :class:`BasicNewsRecipe`"
msgstr ""

# 98314b337fa946faacce4ae93c2b4b07
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe:1
msgid ""
"Base class that contains logic needed in all recipes. By overriding "
"progressively more of the functionality in this class, you can make "
"progressively more customized/powerful recipes. For a tutorial introduction "
"to creating recipes, see :doc:`news`."
msgstr ""

# 1ae6428645a44615a17046898454c8b2
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.abort_recipe_processing:1
msgid ""
"Causes the recipe download system to abort the download of this recipe, "
"displaying a simple feedback message to the user."
msgstr ""

# 58a54bb5644945868b3c881b7c92c38e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.add_toc_thumbnail:1
msgid ""
"Call this from populate_article_metadata with the src attribute of an <img> "
"tag from the article that is appropriate for use as the thumbnail "
"representing the article in the Table of Contents. Whether the thumbnail is "
"actually used is device dependent (currently only used by the Kindles). Note"
" that the referenced image must be one that was successfully downloaded, "
"otherwise it will be ignored."
msgstr ""

# 0453b8e5491e4340be847f58e39bda5c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.adeify_images:1
msgid ""
"If your recipe when converted to EPUB has problems with images when viewed "
"in Adobe Digital Editions, call this method from within "
":meth:`postprocess_html`."
msgstr ""

# 423e18fb498042ec9d27b59c3ebd402f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.cleanup:1
msgid ""
"Called after all articles have been download. Use it to do any cleanup like "
"logging out of subscription sites, etc."
msgstr ""

# dfc5fce42c6e4eaa97bbbfd6fc13f06b
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.clone_browser:1
msgid ""
"Clone the browser br. Cloned browsers are used for multi-threaded downloads,"
" since mechanize is not thread safe. The default cloning routines should "
"capture most browser customization, but if you do something exotic in your "
"recipe, you should override this method in your recipe and clone manually."
msgstr ""

# 76c14980bb1e49be8711e330aad2fa1d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.clone_browser:7
msgid ""
"Cloned browser instances use the same, thread-safe CookieJar by default, "
"unless you have customized cookie handling."
msgstr ""

# 595a9b84b88e4ab69422714b596d960f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.default_cover:1
msgid "Create a generic cover for recipes that don't have a cover"
msgstr ""

# d44a0b03bd134750bcc6635fc34f0b6c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.download:1
msgid ""
"Download and pre-process all articles from the feeds in this recipe. This "
"method should be called only once on a particular Recipe instance. Calling "
"it more than once will lead to undefined behavior. :return: Path to "
"index.html"
msgstr ""

# 83a0ab2de5d34d7bbebd96fa55a0792e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.extract_readable_article:1
msgid ""
"Extracts main article content from 'html', cleans up and returns as a "
"(article_html, extracted_title) tuple. Based on the original readability "
"algorithm by Arc90."
msgstr ""

# 582ca0d276df4ddb94685d3ca98c5e69
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_article_url:1
msgid ""
"Override in a subclass to customize extraction of the :term:`URL` that "
"points to the content for each article. Return the article URL. It is called"
" with `article`, an object representing a parsed article from a feed. See "
"`feedparser <https://pythonhosted.org/feedparser/>`_. By default it looks "
"for the original link (for feeds syndicated via a service like feedburner or"
" pheedo) and if found, returns that or else returns `article.link "
"<https://pythonhosted.org/feedparser/reference-entry-link.html>`_."
msgstr ""

# b14ada4801e24a5fb8e186e10a1504b4
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_browser:1
msgid ""
"Return a browser instance used to fetch documents from the web. By default "
"it returns a `mechanize <http://wwwsearch.sourceforge.net/mechanize/>`_ "
"browser instance that supports cookies, ignores robots.txt, handles "
"refreshes and has a mozilla firefox user agent."
msgstr ""

# 914790449b92481caaf9e68157692c71
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_browser:6
msgid ""
"If your recipe requires that you login first, override this method in your "
"subclass. For example, the following code is used in the New York Times "
"recipe to login for full access::"
msgstr ""

# 35ef307dbfa14013a2a839fe8788815a
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_cover_url:1
msgid ""
"Return a :term:`URL` to the cover image for this issue or `None`. By default"
" it returns the value of the member `self.cover_url` which is normally "
"`None`. If you want your recipe to download a cover for the e-book override "
"this method in your subclass, or set the member variable `self.cover_url` "
"before this method is called."
msgstr ""

# 7de0c280122c4fcea0f07121cd606d75
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_feeds:1
msgid ""
"Return a list of :term:`RSS` feeds to fetch for this profile. Each element "
"of the list must be a 2-element tuple of the form (title, url). If title is "
"None or an empty string, the title from the feed is used. This method is "
"useful if your recipe needs to do some processing to figure out the list of "
"feeds to download. If so, override in your subclass."
msgstr ""

# 2464b83905b5414388b9ee1af114229d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_masthead_title:1
msgid "Override in subclass to use something other than the recipe title"
msgstr ""

# 7516b551dc534a20807df8b1061a2b0e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_masthead_url:1
msgid ""
"Return a :term:`URL` to the masthead image for this issue or `None`. By "
"default it returns the value of the member `self.masthead_url` which is "
"normally `None`. If you want your recipe to download a masthead for the "
"e-book override this method in your subclass, or set the member variable "
"`self.masthead_url` before this method is called. Masthead images are used "
"in Kindle MOBI files."
msgstr ""

# 89b145b0b3d94b7f9a98dea4b6d52dcc
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:1
msgid ""
"If you set `articles_are_obfuscated` this method is called with every "
"article URL. It should return the path to a file on the filesystem that "
"contains the article HTML. That file is processed by the recursive HTML "
"fetching engine, so it can contain links to pages/images on the web."
msgstr ""

# 020fdd4c99aa41d69e81fd98fdca0321
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:6
msgid ""
"This method is typically useful for sites that try to make it difficult to "
"access article content automatically."
msgstr ""

# 94a15e38009a4922803bcc0192c2fd94
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.image_url_processor:1
msgid ""
"Perform some processing on image urls (perhaps removing size restrictions "
"for dynamically generated images, etc.) and return the precessed URL."
msgstr ""

# fb511f51bad040849c6a13cebc7dae5e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:1
msgid ""
"Convenience method that takes an URL to the index page and returns a "
"`BeautifulSoup "
"<http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html>`_ of "
"it."
msgstr ""

# 3ae2699ca4e84121ace113388b67ad4d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:5
msgid "`url_or_raw`: Either a URL or the downloaded index page as a string"
msgstr ""

# 6e4a8fe770de435b9a1df7821badfd57
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:1
msgid ""
"Return True if the link should be followed or False otherwise. By default, "
"raises NotImplementedError which causes the downloader to ignore it."
msgstr ""

# 7fd82e1a543a41338287ce8bdc2cb7b6
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:5
msgid "The URL to be followed"
msgstr ""

# ac20deae4a7b46e1883f19d0ed9c48c2
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:6
msgid "The Tag from which the URL was derived"
msgstr ""

# 006fb85c79464ad8a6c63a5ad56b94da
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.javascript_login:1
msgid ""
"This method is used to login to a website that uses javascript for its login"
" form. After the login is complete, the cookies returned from the website "
"are copied to a normal (non-javascript) browser and the download proceeds "
"using those cookies."
msgstr ""

# 0176fe7884bb48c5831017a456020e74
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.javascript_login:6
msgid "An example implementation::"
msgstr ""

# 40a0b57b486c480c8aedd56a491ba4d9
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.javascript_login:15
msgid "Note that you can also select forms with CSS2 selectors, like this::"
msgstr ""

# 555f732f5b804ddfba597ec14e389e5e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_feeds:1
msgid ""
"Create a list of articles from the list of feeds returned by "
":meth:`BasicNewsRecipe.get_feeds`. Return a list of :class:`Feed` objects."
msgstr ""

# 4eeff61257474d9ca2c0e304191f7280
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_index:1
msgid ""
"This method should be implemented in recipes that parse a website instead of"
" feeds to generate a list of articles. Typical uses are for news sources "
"that have a \"Print Edition\" webpage that lists all the articles in the "
"current print edition. If this function is implemented, it will be used in "
"preference to :meth:`BasicNewsRecipe.parse_feeds`."
msgstr ""

# 5bd9147c3ecb416193b0c0be513f4431
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_index:7
msgid ""
"It must return a list. Each element of the list must be a 2-element tuple of"
" the form ``('feed title', list of articles)``."
msgstr ""

# 6861455afd7e4d1a9f431e5617a0c09f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_index:10
msgid "Each list of articles must contain dictionaries of the form::"
msgstr ""

# f03137159f2b49be8e50c46e3336eecb
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_index:23
msgid ""
"For an example, see the recipe for downloading `The Atlantic`. In addition, "
"you can add 'author' for the author of the article."
msgstr ""

# 11d9558471604c829b4cdfb8a206263d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_index:26
msgid ""
"If you want to abort processing for some reason and have calibre show the "
"user a simple message instead of an error, call "
":meth:`abort_recipe_processing`."
msgstr ""

# 7b739ddb4b98423194ddf7acfa85c759
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.populate_article_metadata:1
msgid ""
"Called when each HTML page belonging to article is downloaded. Intended to "
"be used to get article metadata like author/summary/etc. from the parsed "
"HTML (soup). :param article: A object of class "
":class:`calibre.web.feeds.Article`. If you change the summary, remember to "
"also change the text_summary :param soup: Parsed HTML belonging to this "
"article :param first: True iff the parsed HTML is the first page of the "
"article."
msgstr ""

# c802f0eaaf96439cbb164708bbbad8d6
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:1
msgid "Run any needed post processing on the parsed downloaded e-book."
msgstr ""

# 5f877c64f500488f86f4ea60c77eb650
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:3
msgid "An OEBBook object"
msgstr ""

# 8e0a5ef33e0746179f4497aea65162ad
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:4
msgid "Conversion options"
msgstr ""

# c0c393620f89414b86edb2a6010420bc
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:1
msgid ""
"This method is called with the source of each downloaded :term:`HTML` file, "
"after it is parsed for links and images. It can be used to do arbitrarily "
"powerful post-processing on the :term:`HTML`. It should return `soup` after "
"processing it."
msgstr ""

# f9acfd9e66c74da39febbfc3ab0a5184
# f8579b0497614e5bb115473803ac6679
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
msgid ""
"A `BeautifulSoup "
"<http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html>`_  "
"instance containing the downloaded :term:`HTML`."
msgstr ""

# c74214d2f2ad4dc584389d20a6682643
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:7
msgid "True if this is the first page of an article."
msgstr ""

# 5849c922319645b9bd4acad76fcd1f97
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:1
msgid ""
"This method is called with the source of each downloaded :term:`HTML` file, "
"before it is parsed for links and images. It is called after the cleanup as "
"specified by remove_tags etc. It can be used to do arbitrarily powerful pre-"
"processing on the :term:`HTML`. It should return `soup` after processing it."
msgstr ""

# 47208c60200f4c4085d5507138678f9a
# e35b10b8a7dd48efbdab75b8864e6c2b
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:7
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:8
msgid ""
"`soup`: A `BeautifulSoup "
"<http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html>`_ "
"instance containing the downloaded :term:`HTML`."
msgstr ""

# 700d60df8405434f9cb36a588f8fe87c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:1
msgid ""
"This method is called with the source of each downloaded :term:`HTML` file, "
"before it is parsed into an object tree. raw_html is a unicode string "
"representing the raw HTML downloaded from the web. url is the URL from which"
" the HTML was downloaded."
msgstr ""

# bc02bdd7e7f84ef0a79dd487d5483646
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:6
msgid "Note that this method acts *before* preprocess_regexps."
msgstr ""

# df10332161ad4595a2fbb30a846e78b3
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:8
msgid "This method must return the processed raw_html as a unicode object."
msgstr ""

# d780de743c8a45caa2b45e1ebb1e9e0f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.print_version:1
msgid ""
"Take a `url` pointing to the webpage with article content and return the "
":term:`URL` pointing to the print version of the article. By default does "
"nothing. For example::"
msgstr ""

# f61358cbaea7427a8814d695a20cd77c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:1
msgid ""
"This method is called with the source of each downloaded :term:`HTML` file, "
"before any of the cleanup attributes like remove_tags, keep_only_tags are "
"applied. Note that preprocess_regexps will have already been applied. It is "
"meant to allow the recipe to skip ad pages. If the soup represents an ad "
"page, return the HTML of the real page. Otherwise return None."
msgstr ""

# 45b30ebba60249f3984cad42277d9315
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:1
msgid ""
"Convenience method to sort the titles in `index` according to `weights`. "
"`index` is sorted in place. Returns `index`."
msgstr ""

# b092d552b3b4465f8f34f3bbbefe7f84
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:4
msgid "`index`: A list of titles."
msgstr ""

# 91e9cdcf46354553a4da68b40a3c0b62
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:6
msgid ""
"`weights`: A dictionary that maps weights to titles. If any titles in index "
"are not in weights, they are assumed to have a weight of 0."
msgstr ""

# 592aebfe78c941c697b226d1e41f752c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:1
msgid ""
"Convenience method to take a `BeautifulSoup "
"<http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html>`_ "
"`Tag` and extract the text from it recursively, including any CDATA sections"
" and alt tag attributes. Return a possibly empty unicode string."
msgstr ""

# 4a815c05c5a0427aa43ee7162d2eb27b
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:6
msgid ""
"`use_alt`: If `True` try to use the alt attribute for tags that don't have "
"any textual content"
msgstr ""

# 33c21c1eee0047d496850f4f4910ba81
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:9
msgid ""
"`tag`: `BeautifulSoup "
"<http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html>`_ "
"`Tag`"
msgstr ""

# db8edfec9faf40388239b50637bde501
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.articles_are_obfuscated:1
msgid ""
"Set to True and implement :meth:`get_obfuscated_article` to handle websites "
"that try to make it difficult to scrape content."
msgstr ""

# 43149782d83d403cae2ea8f44cadfd3f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup:1
msgid ""
"Automatically extract all the text from downloaded article pages. Uses the "
"algorithms from the readability project. Setting this to True, means that "
"you do not have to worry about cleaning up the downloaded HTML manually "
"(though manual cleanup will always be superior)."
msgstr ""

# cfcb598532c649c78d70d93ae22ee54a
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup_keep:1
msgid ""
"Specify elements that the auto cleanup algorithm should never remove. The "
"syntax is a XPath expression. For example::"
msgstr ""

# 34c1d181d47e4749b32ab2fa7cc87fe0
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.center_navbar:1
msgid ""
"If True the navigation bar is center aligned, otherwise it is left aligned"
msgstr ""

# 4685bb0d62784766afc3a75876047a5c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.compress_news_images:1
msgid ""
"Set this to False to ignore all scaling and compression parameters and pass "
"images through unmodified. If True and the other compression parameters are "
"left at their default values, jpeg images will be scaled to fit in the "
"screen dimensions set by the output profile and compressed to size at most "
"(w * h)/16 where w x h are the scaled image dimensions."
msgstr ""

# 7e375d097abc46d18791750edc0526fa
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_auto_size:1
msgid ""
"The factor used when auto compressing jpeg images. If set to None, auto "
"compression is disabled. Otherwise, the images will be reduced in size to (w"
" * h)/compress_news_images_auto_size bytes if possible by reducing the "
"quality level, where w x h are the image dimensions in pixels. The minimum "
"jpeg quality will be 5/100 so it is possible this constraint will not be "
"met.  This parameter can be overridden by the parameter "
"compress_news_images_max_size which provides a fixed maximum size for "
"images. Note that if you enable scale_news_images_to_device then the image "
"will first be scaled and then its quality lowered until its size is less "
"than (w * h)/factor where w and h are now the *scaled* image dimensions. In "
"other words, this compression happens after scaling."
msgstr ""

# 47c892f826f8471f8a7b79a1c11e321e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_max_size:1
msgid ""
"Set jpeg quality so images do not exceed the size given (in KBytes). If set,"
" this parameter overrides auto compression via "
"compress_news_images_auto_size. The minimum jpeg quality will be 5/100 so it"
" is possible this constraint will not be met."
msgstr ""

# 497d263e402742c0be2542afbde7cf1d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.conversion_options:1
msgid ""
"Recipe specific options to control the conversion of the downloaded content "
"into an e-book. These will override any user or plugin specified values, so "
"only use if absolutely necessary. For example::"
msgstr ""

# 9b7d03a2d97f4c8f92fcd8aaba587d28
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.cover_margins:1
msgid ""
"By default, the cover image returned by get_cover_url() will be used as the "
"cover for the periodical.  Overriding this in your recipe instructs calibre "
"to render the downloaded cover into a frame whose width and height are "
"expressed as a percentage of the downloaded cover. cover_margins = (10, 15, "
"'#ffffff') pads the cover with a white margin 10px on the left and right, "
"15px on the top and bottom. Color names defined at "
"http://www.imagemagick.org/script/color.php Note that for some reason, white"
" does not always work on windows. Use #ffffff instead"
msgstr ""

# 5fecd2c12a8b495889f74df1a0ed910a
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.delay:1
msgid ""
"Delay between consecutive downloads in seconds. The argument may be a "
"floating point number to indicate a more precise time."
msgstr ""

# 9e9f84c3ab434a2380db5d43dfe64ded
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.description:1
msgid ""
"A couple of lines that describe the content this recipe downloads. This will"
" be used primarily in a GUI that presents a list of recipes."
msgstr ""

# 0bf415d55edd43ccae915b64578058eb
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.encoding:1
msgid ""
"Specify an override encoding for sites that have an incorrect charset "
"specification. The most common being specifying ``latin1`` and using "
"``cp1252``. If None, try to detect the encoding. If it is a callable, the "
"callable is called with two arguments: The recipe object and the source to "
"be decoded. It must return the decoded source."
msgstr ""

# 0a43d0aa79334ab1bd93c4cde8aa9c25
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.extra_css:1
msgid ""
"Specify any extra :term:`CSS` that should be added to downloaded "
":term:`HTML` files. It will be inserted into `<style>` tags, just before the"
" closing `</head>` tag thereby overriding all :term:`CSS` except that which "
"is declared using the style attribute on individual :term:`HTML` tags. For "
"example::"
msgstr ""

# e45b97ce9754435a9fdae97c3f0dedfe
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.feeds:1
msgid ""
"List of feeds to download. Can be either ``[url1, url2, ...]`` or "
"``[('title1', url1), ('title2', url2),...]``"
msgstr ""

# e0521c22b26f40e29426b3be745a1c74
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:1
msgid ""
"List of regular expressions that determines which links to ignore. If empty "
"it is ignored. Used only if is_link_wanted is not implemented. For example::"
msgstr ""

# 65e1bcb8e0e5417b9a38f065d224705f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:7
msgid "will remove all URLs that have `ads.doubleclick.net` in them."
msgstr ""

# 82fb6cb087b942db967f7acc0afc4f94
# 912a4297186a451787d3b077a148601d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:9
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.match_regexps:9
msgid ""
"Only one of :attr:`BasicNewsRecipe.match_regexps` or "
":attr:`BasicNewsRecipe.filter_regexps` should be defined."
msgstr ""

# 0dc75bf2c30e469fa7c8e41b84a49163
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:1
msgid ""
"Ignore duplicates of articles that are present in more than one section. A "
"duplicate article is an article that has the same title and/or URL. To "
"ignore articles with the same title, set this to::"
msgstr ""

# 68aa401b54aa41d1a1adad7a2ed02bf4
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:7
msgid "To use URLs instead, set it to::"
msgstr ""

# a36eea0540ef40809eaa0163b8c4cc85
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:11
msgid "To match on title or URL, set it to::"
msgstr ""

# 83dca71fe0e546519bac78c24624d1b1
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:1
msgid ""
"Keep only the specified tags and their children. For the format for "
"specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. If this list is "
"not empty, then the `<body>` tag will be emptied and re-filled with the tags"
" that match the entries in this list. For example::"
msgstr ""

# fdbd7127e0fe4c008b4b5170036f397d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:8
msgid ""
"will keep only tags that have an `id` attribute of `\"content\"` or "
"`\"heading\"`."
msgstr ""

# 9f9f0df37a224d9f91c28741cf4f6a78
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.language:1
msgid ""
"The language that the news is in. Must be an ISO-639 code either two or "
"three characters long"
msgstr ""

# d8922af8f5804f538f625d02848edef9
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.masthead_url:1
msgid ""
"By default, calibre will use a default image for the masthead (Kindle only)."
" Override this in your recipe to provide a url to use as a masthead."
msgstr ""

# ce969cfe4b574046829436af1ae4c910
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.match_regexps:1
msgid ""
"List of regular expressions that determines which links to follow. If empty,"
" it is ignored. Used only if is_link_wanted is not implemented. For "
"example::"
msgstr ""

# 00461b1f4a194d83ba7769316f542f78
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.match_regexps:7
msgid "will match all URLs that have `page=some number` in them."
msgstr ""

# e5c8e10a5cf8430f842561fe8cadd4dc
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.max_articles_per_feed:1
msgid ""
"Maximum number of articles to download from each feed. This is primarily "
"useful for feeds that don't have article dates. For most feeds, you should "
"use :attr:`BasicNewsRecipe.oldest_article`"
msgstr ""

# b98d1c4974234cc4862bfcb3a3170e55
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.needs_subscription:1
msgid ""
"If True the GUI will ask the user for a username and password to use while "
"downloading. If set to \"optional\" the use of a username and password "
"becomes optional"
msgstr ""

# 25523132a7004b12880f954e997ba39a
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.no_stylesheets:1
msgid ""
"Convenient flag to disable loading of stylesheets for websites that have "
"overly complex stylesheets unsuitable for conversion to ebooks formats. If "
"True stylesheets are not downloaded and processed"
msgstr ""

# 36aac20731754cbf92e59c52a47e0d07
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.oldest_article:1
msgid "Oldest article to download from this news source. In days."
msgstr ""

# 7424851b037446f1bcace395a80c6181
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:1
msgid ""
"List of :term:`regexp` substitution rules to run on the downloaded "
":term:`HTML`. Each element of the list should be a two element tuple. The "
"first element of the tuple should be a compiled regular expression and the "
"second a callable that takes a single match object and returns a string to "
"replace the match. For example::"
msgstr ""

# 30b03398c33145ef82960f8d06b10429
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:12
msgid "will remove everything from `<!--Article ends here-->` to `</body>`."
msgstr ""

# f916944266274094be61c9fa3a208a1f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.publication_type:1
msgid ""
"Publication type Set to newspaper, magazine or blog. If set to None, no "
"publication type metadata will be written to the opf file."
msgstr ""

# a7b4738c221745bd857c54912deb5d5a
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.recipe_disabled:1
msgid ""
"Set to a non empty string to disable this recipe. The string will be used as"
" the disabled message"
msgstr ""

# a7c06e0e2acb484ab7b21f53ad26f263
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.recursions:1
msgid "Number of levels of links to follow on article webpages"
msgstr ""

# 111f189238d64fd7904e5a63cfc1f832
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_attributes:1
msgid "List of attributes to remove from all tags. For example::"
msgstr ""

# 97b4b681e753430d92dd29d0445a41cd
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_empty_feeds:1
msgid ""
"If True empty feeds are removed from the output. This option has no effect "
"if parse_index is overridden in the sub class. It is meant only for recipes "
"that return a list of feeds using `feeds` or :meth:`get_feeds`. It is also "
"used if you use the ignore_duplicate_articles option."
msgstr ""

# 5bb3b5aff6524265908ee7cc8ff52053
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_javascript:1
msgid "Convenient flag to strip all javascript tags from the downloaded HTML"
msgstr ""

# de1454267e434681adda643fb680e488
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags:1
msgid ""
"List of tags to be removed. Specified tags are removed from downloaded HTML."
" A tag is specified as a dictionary of the form::"
msgstr ""

# fb5ef8bcce53462ebc01636ce5996268
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags:9
msgid ""
"All keys are optional. For a full explanation of the search criteria, see "
"`Beautiful Soup "
"<http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html#Searching%20the%20Parse%20Tree>`_"
" A common example::"
msgstr ""

# cbfba39933cf46728257da47c37bb5c9
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags:15
msgid ""
"This will remove all `<div class=\"advert\">` tags and all their children "
"from the downloaded :term:`HTML`."
msgstr ""

# cfae748dcaf54da4a8f0249462647d5e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:1
msgid ""
"Remove all tags that occur after the specified tag. For the format for "
"specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

# 1f64f575be344f679fcc929425acdd76
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:7
msgid "will remove all tags after the first element with `id=\"content\"`."
msgstr ""

# 97d5a45c897f411394b4d31c38f950ba
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:1
msgid ""
"Remove all tags that occur before the specified tag. For the format for "
"specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

# ed80a5023978453a8d923a0f05a5cb3e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:7
msgid "will remove all tags before the first element with `id=\"content\"`."
msgstr ""

# d73f452d400149ee85d857d92bba28c2
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.requires_version:1
msgid "Minimum calibre version needed to use this recipe"
msgstr ""

# ac5ff390ccea4222b01ad440b52b3d02
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.reverse_article_order:1
msgid "Reverse the order of articles in each feed"
msgstr ""

# 9f21cbaccca5433989bb98cb5e11c4f4
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.scale_news_images:1
msgid ""
"Maximum dimensions (w,h) to scale images to. If scale_news_images_to_device "
"is True this is set to the device screen dimensions set by the output "
"profile unless there is no profile set, in which case it is left at whatever"
" value it has been assigned (default None)."
msgstr ""

# d0657a4ec2f54c4f8e58ba3b844db4df
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.scale_news_images_to_device:1
msgid ""
"Rescale images to fit in the device screen dimensions set by the output "
"profile. Ignored if no output profile is set."
msgstr ""

# 5c52bedf15eb4c3a8b496aa13aa8803e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.simultaneous_downloads:1
msgid ""
"Number of simultaneous downloads. Set to 1 if the server is picky. "
"Automatically reduced to 1 if :attr:`BasicNewsRecipe.delay` > 0"
msgstr ""

# b0ae98b7b9bd465aa860556e26bf158d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.summary_length:1
msgid "Max number of characters in the short description"
msgstr ""

# bed09a14e1ae4493b84b23166a92d207
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.template_css:1
msgid ""
"The CSS that is used to style the templates, i.e., the navigation bars and "
"the Tables of Contents. Rather than overriding this variable, you should use"
" `extra_css` in your recipe to customize look and feel."
msgstr ""

# 85b3bbd6416a430f89de0846fbb140e8
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.timefmt:1
msgid ""
"The format string for the date shown on the first page. By default: "
"Day_Name, Day_Number Month_Name Year"
msgstr ""

# 903adbe2bb894160b00036287e430412
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.timeout:1
msgid "Timeout for fetching files from server in seconds"
msgstr ""

# d184d9a6ca7746c18f925a24a61440e4
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.title:1
msgid "The title to use for the ebook"
msgstr ""

# e5ab9a59e35b4d1e9a457d4fd6499d66
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.use_embedded_content:1
msgid ""
"Normally we try to guess if a feed has full articles embedded in it based on"
" the length of the embedded content. If `None`, then the default guessing is"
" used. If `True` then the we always assume the feeds has embedded content "
"and if `False` we always assume the feed does not have embedded content."
msgstr ""

# 1e4b33a450de449595badb70fbc369b4
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.use_javascript_to_login:1
msgid ""
"If you set this True, then calibre will use javascript to login to the "
"website. This is needed for some websites that require the use of javascript"
" to login. If you set this to True you must implement the "
":meth:`javascript_login` method, to do the actual logging in."
msgstr ""
