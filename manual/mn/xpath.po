# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-15 16:06+0530\n"
"PO-Revision-Date: 2014-08-15 10:25+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Mongolian (http://www.transifex.com/projects/p/calibre/language/mn/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: mn\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 40186b0e50fd4da5b43ed488ed534fa7
#: ../../home/kovid/work/calibre/manual/xpath.rst:5
msgid "XPath Tutorial"
msgstr ""

# 1e16dd0842d743bdbaad301485a7d882
#: ../../home/kovid/work/calibre/manual/xpath.rst:7
msgid ""
"In this tutorial, you will be given a gentle introduction to `XPath "
"<http://en.wikipedia.org/wiki/XPath>`_, a query language that can be used to"
" select arbitrary parts of `HTML <http://en.wikipedia.org/wiki/HTML>`_ "
"documents in calibre. XPath is a widely used standard, and googling it will "
"yield a ton of information. This tutorial, however, focuses on using XPath "
"for ebook related tasks like finding chapter headings in an unstructured "
"HTML document."
msgstr ""

# 54e21d6313a64bbe8c754eb198b6753e
#: ../../home/kovid/work/calibre/manual/xpath.rst:0
msgid "Contents"
msgstr ""

# c0d5d954557647a0abec0a6ff6afc6ad
#: ../../home/kovid/work/calibre/manual/xpath.rst:20
msgid "Selecting by tagname"
msgstr ""

# 55d8b6ff744643109562a77285275ee5
#: ../../home/kovid/work/calibre/manual/xpath.rst:22
msgid ""
"The simplest form of selection is to select tags by name. For example, "
"suppose you want to select all the ``<h2>`` tags in a document. The XPath "
"query for this is simply::"
msgstr ""

# bbd1da48fba240e3ad54d28e1e02df92
#: ../../home/kovid/work/calibre/manual/xpath.rst:28
msgid ""
"The prefix `//` means *search at any level of the document*. Now suppose you"
" want to search for ``<span>`` tags that are inside ``<a>`` tags. That can "
"be achieved with::"
msgstr ""

# 751b661460d449f3908aa08a4e48c16a
#: ../../home/kovid/work/calibre/manual/xpath.rst:34
msgid ""
"If you want to search for tags at a particular level in the document, change"
" the prefix::"
msgstr ""

# 7be3714c0cd541f7a2c90f59cc2c40d1
#: ../../home/kovid/work/calibre/manual/xpath.rst:40
msgid ""
"This will match only ``<p>A very short ebook to demonstrate the use of "
"XPath.</p>`` in the :ref:`sample_ebook` but not any of the other ``<p>`` "
"tags. The ``h:`` prefix in the above examples is needed to match XHTML tags."
" This is because internally, calibre represents all content as XHTML. In XHTML"
" tags have a *namespace*, and ``h:`` is the namespace prefix for HTML tags."
msgstr ""

# 307899603685401687f8f962bb5d233e
#: ../../home/kovid/work/calibre/manual/xpath.rst:46
msgid ""
"Now suppose you want to select both ``<h1>`` and ``<h2>`` tags. To do that, "
"we need a XPath construct called *predicate*. A :dfn:`predicate` is simply a"
" test that is used to select tags. Tests can be arbitrarily powerful and as "
"this tutorial progresses, you will see more powerful examples. A predicate "
"is created by enclosing the test expression in square brackets::"
msgstr ""

# dc73719a98574c3fa327799c51fb3b0c
#: ../../home/kovid/work/calibre/manual/xpath.rst:54
msgid ""
"There are several new features in this XPath expression. The first is the "
"use of the wildcard ``*``. It means *match any tag*. Now look at the test "
"expression ``name()='h1' or name()='h2'``. :term:`name()` is an example of a"
" *built-in function*. It simply evaluates to the name of the tag. So by "
"using it, we can select tags whose names are either `h1` or `h2`. Note that "
"the :term:`name()` function ignores namespaces so that there is no need for "
"the ``h:`` prefix. XPath has several useful built-in functions. A few more "
"will be introduced in this tutorial."
msgstr ""

# 4f6d3efa18074beea8fc7c372d25cca7
#: ../../home/kovid/work/calibre/manual/xpath.rst:63
msgid "Selecting by attributes"
msgstr ""

# a81ded0866ea45f59da1636a6e5a62b2
#: ../../home/kovid/work/calibre/manual/xpath.rst:65
msgid ""
"To select tags based on their attributes, the use of predicates is "
"required::"
msgstr ""

# d9594c4c14ea40038c328ae891cb72eb
#: ../../home/kovid/work/calibre/manual/xpath.rst:71
msgid ""
"Here, the ``@`` operator refers to the attributes of the tag. You can use "
"some of the `XPath built-in functions`_ to perform more sophisticated "
"matching on attribute values."
msgstr ""

# 636ccac3b38b48b597a42afd401a4a39
#: ../../home/kovid/work/calibre/manual/xpath.rst:77
msgid "Selecting by tag content"
msgstr ""

# 3434941160414829b625c2a6abd4906d
#: ../../home/kovid/work/calibre/manual/xpath.rst:79
msgid ""
"Using XPath, you can even select tags based on the text they contain. The "
"best way to do this is to use the power of *regular expressions* via the "
"built-in function :term:`re:test()`::"
msgstr ""

# bdc31157dff740148e9924c4f8daa478
#: ../../home/kovid/work/calibre/manual/xpath.rst:85
msgid ""
"Here the ``.`` operator refers to the contents of the tag, just as the ``@``"
" operator referred to its attributes."
msgstr ""

# 849c197a26134653b2cbb6d149ac4417
#: ../../home/kovid/work/calibre/manual/xpath.rst:91
msgid "Sample ebook"
msgstr ""

# 5710d54c5ad041b09615b9661f071ae5
#: ../../home/kovid/work/calibre/manual/xpath.rst:97
msgid "XPath built-in functions"
msgstr ""

# a55e3d5301784a5c958dac1f1b25fbd0
#: ../../home/kovid/work/calibre/manual/xpath.rst:100
msgid "name()"
msgstr ""

# f0b6188bb37b49ed85680d25cb0a047f
#: ../../home/kovid/work/calibre/manual/xpath.rst:102
msgid "The name of the current tag."
msgstr ""

# 68f56a10c8374e2f95cccf673168be43
#: ../../home/kovid/work/calibre/manual/xpath.rst:103
msgid "contains()"
msgstr ""

# 6b18e93cfa114249957a70f1dc7d01aa
#: ../../home/kovid/work/calibre/manual/xpath.rst:105
msgid "``contains(s1, s2)`` returns `true` if s1 contains s2."
msgstr ""

# 66b53bc61b1d4f10bba266634f95dfba
#: ../../home/kovid/work/calibre/manual/xpath.rst:106
msgid "re:test()"
msgstr ""

# 724e9be9002d497fb9033b0bfe92490a
#: ../../home/kovid/work/calibre/manual/xpath.rst:108
msgid ""
"``re:test(src, pattern, flags)`` returns `true` if the string `src` matches "
"the regular expression `pattern`. A particularly useful flag is ``i``, it "
"makes matching case insensitive. A good primer on the syntax for regular "
"expressions can be found at `regexp syntax <http://docs.python.org/lib/re-"
"syntax.html>`_"
msgstr ""
