# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-28 13:56+0530\n"
"PO-Revision-Date: 2014-06-27 08:11+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Ukrainian (http://www.transifex.com/projects/p/calibre/language/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 616a9296956a42549d9591b9659143c6
#: ../../server.rst:6
msgid "Integrating the |app| content server into other servers"
msgstr ""

# de359cd7d96a44c68baddb6331bdd436
#: ../../server.rst:8
msgid ""
"Here, we will show you how to integrate the |app| content server into "
"another server. The most common reason for this is to make use of SSL or "
"more sophisticated authentication. There are two main techniques: Running "
"the |app| content server as a standalone process and using a reverse proxy "
"to connect it with your main server or running the content server in process"
" in your main server with WSGI. The examples below are all for Apache 2.x on"
" linux, but should be easily adaptable to other platforms."
msgstr ""

# 0913e02ac0e04921a4c65c035de40500
#: ../../server.rst:0
msgid "Contents"
msgstr "Зміст"

# b5bee08aba4a455ebaf4b04050485536
#: ../../server.rst:14
msgid "This only applies to calibre releases >= 0.7.25"
msgstr ""

# aa0973af25024b879d6d9fd9eb43a20c
#: ../../server.rst:17
msgid "Using a reverse proxy"
msgstr ""

# 7e3c3d35c0e14e86b045be9e4fbc5ee8
#: ../../server.rst:19
msgid ""
"A reverse proxy is when your normal server accepts incoming requests and "
"passes them onto the calibre server. It then reads the response from the "
"calibre server and forwards it to the client. This means that you can simply"
" run the calibre server as normal without trying to integrate it closely "
"with your main server, and you can take advantage of whatever authentication"
" systems you main server has in place. This is the simplest approach as it "
"allows you to use the binary calibre install with no external "
"dependencies/system integration requirements. Below, is an example of how to"
" achieve this with Apache as your main server, but it will work with any "
"server that supports Reverse Proxies."
msgstr ""

# b17de02156e04248a784f5fcaf8c5a0c
#: ../../server.rst:21
msgid "First start the |app| content server as shown below::"
msgstr ""

# 9b46aca351af42b2b35375730a2d2168
#: ../../server.rst:25
msgid ""
"The key parameter here is ``--url-prefix /calibre``. This causes the content"
" server to serve all URLs prefixed by calibre. To see this in action, visit "
"``http://localhost:8080/calibre`` in your browser. You should see the normal"
" content server website, but now it will run under /calibre."
msgstr ""

# 14490ebb829049daab83b514900a932c
#: ../../server.rst:27
msgid ""
"Now suppose you are using Apache as your main server. First enable the proxy"
" modules in apache, by adding the following to :file:`httpd.conf`::"
msgstr ""

# 9fcf63e4369542478c9f4e3028e9ce88
#: ../../server.rst:32
msgid ""
"The exact technique for enabling the proxy modules will vary depending on "
"your Apache installation. Once you have the proxy modules enabled, add the "
"following rules to httpd.conf (or if you are using virtual hosts to the conf"
" file for the virtual host in question::"
msgstr ""

# e71627a47d3646b2893d177ce3ae0d6a
#: ../../server.rst:40
msgid ""
"That's all, you will now be able to access the |app| Content Server under "
"the /calibre URL in your apache server. The above rules pass all requests "
"under /calibre to the calibre server running on port 8080 and thanks to the "
"--url-prefix option above, the calibre server handles them transparently."
msgstr ""

# e7fb2ad8b8304609b5483a2923bdd9b1
#: ../../server.rst:42
msgid ""
"If you are willing to devote an entire VirtualHost to the content server, "
"then there is no need to use --url-prefix and RewriteRule, instead just use "
"the ProxyPass directive."
msgstr ""

# 6abf603639e24aca8de6619e481dd3d4
#: ../../server.rst:44
msgid ""
"The server engine calibre uses, CherryPy, can have trouble with proxying and"
" KeepAlive requests, so turn them off in Apache, with the SetEnv directives "
"shown above."
msgstr ""

# 2f3875672dd54af298f0c53cfffba369
#: ../../server.rst:47
msgid "In process"
msgstr ""

# de574fab755845a7a061d2cf2fa4d62d
#: ../../server.rst:49
msgid ""
"The calibre content server can be run directly, in process, inside a host "
"server like Apache using the WSGI framework."
msgstr ""

# 4bb8d19f78ef48ab84731301fdac5a46
#: ../../server.rst:51
msgid ""
"For this to work, all the dependencies needed by calibre must be installed "
"on your system. Doing so is highly non-trivial and you are encouraged not to"
" use in process servers. You will not get any assistance with debugging in "
"process server problems."
msgstr ""

# 22c7b02c9669441cbec4cf7e52b49399
#: ../../server.rst:53
msgid ""
"First, we have to create a WSGI *adapter* for the calibre content server. "
"Here is a template you can use for the purpose. Replace the paths as "
"directed in the comments"
msgstr ""

# 25a1a4eba1ab40dea763939fa71b4fd0
#: ../../server.rst:103
msgid ""
"Save this adapter as :file:`calibre-wsgi-adpater.py` somewhere your server "
"will have access to it."
msgstr ""

# 6130950dba4c46c391a46fd27dc13d91
#: ../../server.rst:105
msgid ""
"Let's suppose that we want to use WSGI in Apache. First enable WSGI in "
"Apache by adding the following to :file:`httpd.conf`::"
msgstr ""

# 4931164ed7c2449c8a89a7db01c87a23
#: ../../server.rst:109
msgid ""
"The exact technique for enabling the wsgi module will vary depending on your"
" Apache installation. Once you have the proxy modules enabled, add the "
"following rules to httpd.conf (or if you are using virtual hosts to the conf"
" file for the virtual host in question::"
msgstr ""

# d7b093b65abf42c6b895778b6448c23c
#: ../../server.rst:113
msgid ""
"Change the path to :file:`calibre-wsgi-adapter.py` to wherever you saved it "
"previously (make sure Apache has access to it)."
msgstr ""

# 5d13044100d04f8f8c7900dc037f8a7b
#: ../../server.rst:115
msgid ""
"That's all, you will now be able to access the |app| Content Server under "
"the /calibre URL in your apache server."
msgstr ""

# 5c6a464133a04af7b8b894ec1027fdc9
#: ../../server.rst:117
msgid ""
"For more help with using mod_wsgi in Apache, see `mod_wsgi "
"<http://code.google.com/p/modwsgi/wiki/WhereToGetHelp>`_."
msgstr ""
