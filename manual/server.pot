# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.43.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-06 17:44+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../server.rst:6
# cd018400a21144e9b16147fac63644ae
msgid "Integrating the |app| content server into other servers"
msgstr ""

#: ../../server.rst:8
# 368904d0db5140bc9d57fd4b8a7172f5
msgid "Here, we will show you how to integrate the |app| content server into another server. The most common reason for this is to make use of SSL or more sophisticated authentication. There are two main techniques: Running the |app| content server as a standalone process and using a reverse proxy to connect it with your main server or running the content server in process in your main server with WSGI. The examples below are all for Apache 2.x on linux, but should be easily adaptable to other platforms."
msgstr ""

#: ../../server.rst:0
# 6cec6e5a9b23424889045ee24788090b
msgid "Contents"
msgstr ""

#: ../../server.rst:14
# 2feb12fe325b44d9a667ee9e24c8adfe
msgid "This only applies to calibre releases >= 0.7.25"
msgstr ""

#: ../../server.rst:17
# 6231a69739344a6e962713033449ba6c
msgid "Using a reverse proxy"
msgstr ""

#: ../../server.rst:19
# 4c502b228d094087878ae96bb1c89971
msgid "A reverse proxy is when your normal server accepts incoming requests and passes them onto the calibre server. It then reads the response from the calibre server and forwards it to the client. This means that you can simply run the calibre server as normal without trying to integrate it closely with your main server, and you can take advantage of whatever authentication systems you main server has in place. This is the simplest approach as it allows you to use the binary calibre install with no external dependencies/system integration requirements. Below, is an example of how to achieve this with Apache as your main server, but it will work with any server that supports Reverse Proxies."
msgstr ""

#: ../../server.rst:21
# 1a49861205e34e399ab45cdaf193abe6
msgid "First start the |app| content server as shown below::"
msgstr ""

#: ../../server.rst:25
# 5eaf99f970f44f599a57ad32dab43967
msgid "The key parameter here is ``--url-prefix /calibre``. This causes the content server to serve all URLs prefixed by calibre. To see this in action, visit ``http://localhost:8080/calibre`` in your browser. You should see the normal content server website, but now it will run under /calibre."
msgstr ""

#: ../../server.rst:27
# 33af398864be4be08c5127a994db1f5b
msgid "Now suppose you are using Apache as your main server. First enable the proxy modules in apache, by adding the following to :file:`httpd.conf`::"
msgstr ""

#: ../../server.rst:32
# e893c232a62d40eb9d3aa8efe22d638b
msgid "The exact technique for enabling the proxy modules will vary depending on your Apache installation. Once you have the proxy modules enabled, add the following rules to httpd.conf (or if you are using virtual hosts to the conf file for the virtual host in question::"
msgstr ""

#: ../../server.rst:40
# 5b634c46195b4ff5a6f6e738f36b1207
msgid "That's all, you will now be able to access the |app| Content Server under the /calibre URL in your apache server. The above rules pass all requests under /calibre to the calibre server running on port 8080 and thanks to the --url-prefix option above, the calibre server handles them transparently."
msgstr ""

#: ../../server.rst:42
# be2f1b83bf604b54b344c5b8c6952172
msgid "If you are willing to devote an entire VirtualHost to the content server, then there is no need to use --url-prefix and RewriteRule, instead just use the ProxyPass directive."
msgstr ""

#: ../../server.rst:44
# 2344c73f80234797b21005d0972bbe73
msgid "The server engine calibre uses, CherryPy, can have trouble with proxying and KeepAlive requests, so turn them off in Apache, with the SetEnv directives shown above."
msgstr ""

#: ../../server.rst:47
# 1359ac505f224db0a3616b1314e8e17d
msgid "In process"
msgstr ""

#: ../../server.rst:49
# 546954d4299a411cb3fa78e8964c1ed3
msgid "The calibre content server can be run directly, in process, inside a host server like Apache using the WSGI framework."
msgstr ""

#: ../../server.rst:51
# 3c49c64fa910492f8e00760cc97a2a04
msgid "For this to work, all the dependencies needed by calibre must be installed on your system. Doing so is highly non-trivial and you are encouraged not to use in process servers. You will not get any assistance with debugging in process server problems."
msgstr ""

#: ../../server.rst:53
# d9b129926ea24178b123e18bc90203b5
msgid "First, we have to create a WSGI *adapter* for the calibre content server. Here is a template you can use for the purpose. Replace the paths as directed in the comments"
msgstr ""

#: ../../server.rst:103
# a6b83062a16a4459b6f55073593d8908
msgid "Save this adapter as :file:`calibre-wsgi-adpater.py` somewhere your server will have access to it."
msgstr ""

#: ../../server.rst:105
# 400efe37cb884537ad6edc476519ad9e
msgid "Let's suppose that we want to use WSGI in Apache. First enable WSGI in Apache by adding the following to :file:`httpd.conf`::"
msgstr ""

#: ../../server.rst:109
# bc4f1edba2d641a583aa0adc68e303a1
msgid "The exact technique for enabling the wsgi module will vary depending on your Apache installation. Once you have the proxy modules enabled, add the following rules to httpd.conf (or if you are using virtual hosts to the conf file for the virtual host in question::"
msgstr ""

#: ../../server.rst:113
# 096ac9122e3c45d4a25081a24c9d063f
msgid "Change the path to :file:`calibre-wsgi-adapter.py` to wherever you saved it previously (make sure Apache has access to it)."
msgstr ""

#: ../../server.rst:115
# 6664655816864df585bf254c6ab35310
msgid "That's all, you will now be able to access the |app| Content Server under the /calibre URL in your apache server."
msgstr ""

#: ../../server.rst:117
# 927c0fa812db419dba9d6106248f9fa4
msgid "For more help with using mod_wsgi in Apache, see `mod_wsgi <http://code.google.com/p/modwsgi/wiki/WhereToGetHelp>`_."
msgstr ""

