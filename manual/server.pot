# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.45.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-18 08:08+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../server.rst:6
# dc676f4b3d8e4cd3885e535b0d82261e
msgid "Integrating the |app| content server into other servers"
msgstr ""

#: ../../server.rst:8
# 8ad49cdd5a8f433d849dbf2ca4e22aa6
msgid "Here, we will show you how to integrate the |app| content server into another server. The most common reason for this is to make use of SSL or more sophisticated authentication. There are two main techniques: Running the |app| content server as a standalone process and using a reverse proxy to connect it with your main server or running the content server in process in your main server with WSGI. The examples below are all for Apache 2.x on linux, but should be easily adaptable to other platforms."
msgstr ""

#: ../../server.rst:0
# 5e6878a01b334ab6a88854fd080763e4
msgid "Contents"
msgstr ""

#: ../../server.rst:14
# 3635a2c2afed4ff5857163e8b60abdbb
msgid "This only applies to calibre releases >= 0.7.25"
msgstr ""

#: ../../server.rst:17
# b4d0ed2756c54edd9f61b6bf5679eb3f
msgid "Using a reverse proxy"
msgstr ""

#: ../../server.rst:19
# 1af98d7e667d42589fd7d6afcbde9689
msgid "A reverse proxy is when your normal server accepts incoming requests and passes them onto the calibre server. It then reads the response from the calibre server and forwards it to the client. This means that you can simply run the calibre server as normal without trying to integrate it closely with your main server, and you can take advantage of whatever authentication systems you main server has in place. This is the simplest approach as it allows you to use the binary calibre install with no external dependencies/system integration requirements. Below, is an example of how to achieve this with Apache as your main server, but it will work with any server that supports Reverse Proxies."
msgstr ""

#: ../../server.rst:21
# 1ba1f4fdfa9c4ab6a80f9dc38b3296ab
msgid "First start the |app| content server as shown below::"
msgstr ""

#: ../../server.rst:25
# 5ece529736924552a4722394e64fa9fb
msgid "The key parameter here is ``--url-prefix /calibre``. This causes the content server to serve all URLs prefixed by calibre. To see this in action, visit ``http://localhost:8080/calibre`` in your browser. You should see the normal content server website, but now it will run under /calibre."
msgstr ""

#: ../../server.rst:27
# b8974c1879a04a2e930668af829aa66f
msgid "Now suppose you are using Apache as your main server. First enable the proxy modules in apache, by adding the following to :file:`httpd.conf`::"
msgstr ""

#: ../../server.rst:32
# dafb671b12da459b83da2bbb05a96530
msgid "The exact technique for enabling the proxy modules will vary depending on your Apache installation. Once you have the proxy modules enabled, add the following rules to httpd.conf (or if you are using virtual hosts to the conf file for the virtual host in question::"
msgstr ""

#: ../../server.rst:40
# 073b0eae8c284d80852c5f37fa23a2b3
msgid "That's all, you will now be able to access the |app| Content Server under the /calibre URL in your apache server. The above rules pass all requests under /calibre to the calibre server running on port 8080 and thanks to the --url-prefix option above, the calibre server handles them transparently."
msgstr ""

#: ../../server.rst:42
# 26032f064d1f4c9e95f83abd49e4ac02
msgid "If you are willing to devote an entire VirtualHost to the content server, then there is no need to use --url-prefix and RewriteRule, instead just use the ProxyPass directive."
msgstr ""

#: ../../server.rst:44
# 4895e83d07114d568adc35d03e328cc8
msgid "The server engine calibre uses, CherryPy, can have trouble with proxying and KeepAlive requests, so turn them off in Apache, with the SetEnv directives shown above."
msgstr ""

#: ../../server.rst:47
# a90a43c97648435aaa279fff5891440d
msgid "In process"
msgstr ""

#: ../../server.rst:49
# 02e568d72b7045478c6b662e6cf07771
msgid "The calibre content server can be run directly, in process, inside a host server like Apache using the WSGI framework."
msgstr ""

#: ../../server.rst:51
# 7dc9f38d9e544e729de1f2c0f1dd0f24
msgid "For this to work, all the dependencies needed by calibre must be installed on your system. Doing so is highly non-trivial and you are encouraged not to use in process servers. You will not get any assistance with debugging in process server problems."
msgstr ""

#: ../../server.rst:53
# 7c48217384a34174acaaa0c4025d2156
msgid "First, we have to create a WSGI *adapter* for the calibre content server. Here is a template you can use for the purpose. Replace the paths as directed in the comments"
msgstr ""

#: ../../server.rst:103
# 83c98f9645e84c23a187092472c3248e
msgid "Save this adapter as :file:`calibre-wsgi-adpater.py` somewhere your server will have access to it."
msgstr ""

#: ../../server.rst:105
# 52e7b1bddc244c348978aef9b690b0a6
msgid "Let's suppose that we want to use WSGI in Apache. First enable WSGI in Apache by adding the following to :file:`httpd.conf`::"
msgstr ""

#: ../../server.rst:109
# 10fff832986e470cbb909f1869a66a57
msgid "The exact technique for enabling the wsgi module will vary depending on your Apache installation. Once you have the proxy modules enabled, add the following rules to httpd.conf (or if you are using virtual hosts to the conf file for the virtual host in question::"
msgstr ""

#: ../../server.rst:113
# 27cc2cdd1cb5438b9d3d7dcc3407ecc3
msgid "Change the path to :file:`calibre-wsgi-adapter.py` to wherever you saved it previously (make sure Apache has access to it)."
msgstr ""

#: ../../server.rst:115
# 970bb50264df4e6680de39d2e4a5260f
msgid "That's all, you will now be able to access the |app| Content Server under the /calibre URL in your apache server."
msgstr ""

#: ../../server.rst:117
# b11e7bb40e634365bbb3a0c223f3e4ee
msgid "For more help with using mod_wsgi in Apache, see `mod_wsgi <http://code.google.com/p/modwsgi/wiki/WhereToGetHelp>`_."
msgstr ""

