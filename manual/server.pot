# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.40.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-17 12:32+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../server.rst:6
# d643cb35a2394b6bb5ffecc080559cd4
msgid "Integrating the |app| content server into other servers"
msgstr ""

#: ../../server.rst:8
# 4ce4954b2cd348db927f4a094854f55c
msgid "Here, we will show you how to integrate the |app| content server into another server. The most common reason for this is to make use of SSL or more sophisticated authentication. There are two main techniques: Running the |app| content server as a standalone process and using a reverse proxy to connect it with your main server or running the content server in process in your main server with WSGI. The examples below are all for Apache 2.x on linux, but should be easily adaptable to other platforms."
msgstr ""

#: ../../server.rst:0
# 79bcaffad57e40949948d88a4b807236
msgid "Contents"
msgstr ""

#: ../../server.rst:14
# 61b19ac296e3415a8a4536cb91ad6483
msgid "This only applies to calibre releases >= 0.7.25"
msgstr ""

#: ../../server.rst:17
# 7bf64296947041e1a16f41586ff98354
msgid "Using a reverse proxy"
msgstr ""

#: ../../server.rst:19
# 0a6d8b887e9b463483060735ac482829
msgid "A reverse proxy is when your normal server accepts incoming requests and passes them onto the calibre server. It then reads the response from the calibre server and forwards it to the client. This means that you can simply run the calibre server as normal without trying to integrate it closely with your main server, and you can take advantage of whatever authentication systems you main server has in place. This is the simplest approach as it allows you to use the binary calibre install with no external dependencies/system integration requirements. Below, is an example of how to achieve this with Apache as your main server, but it will work with any server that supports Reverse Proxies."
msgstr ""

#: ../../server.rst:21
# 0e2b4495b64c4a24a474cf4401c4b7c6
msgid "First start the |app| content server as shown below::"
msgstr ""

#: ../../server.rst:25
# fb28a84c4016441b9af9c6b9f48e3a6e
msgid "The key parameter here is ``--url-prefix /calibre``. This causes the content server to serve all URLs prefixed by calibre. To see this in action, visit ``http://localhost:8080/calibre`` in your browser. You should see the normal content server website, but now it will run under /calibre."
msgstr ""

#: ../../server.rst:27
# 947e7c08ae444f6c9ad80d894732be30
msgid "Now suppose you are using Apache as your main server. First enable the proxy modules in apache, by adding the following to :file:`httpd.conf`::"
msgstr ""

#: ../../server.rst:32
# 4c75f4246bc84790aac470ca5eb28286
msgid "The exact technique for enabling the proxy modules will vary depending on your Apache installation. Once you have the proxy modules enabled, add the following rules to httpd.conf (or if you are using virtual hosts to the conf file for the virtual host in question::"
msgstr ""

#: ../../server.rst:40
# 3909a75791c84da7bd1fdb9427095cf1
msgid "That's all, you will now be able to access the |app| Content Server under the /calibre URL in your apache server. The above rules pass all requests under /calibre to the calibre server running on port 8080 and thanks to the --url-prefix option above, the calibre server handles them transparently."
msgstr ""

#: ../../server.rst:42
# f266697ce7f645bf843641d069e0464c
msgid "If you are willing to devote an entire VirtualHost to the content server, then there is no need to use --url-prefix and RewriteRule, instead just use the ProxyPass directive."
msgstr ""

#: ../../server.rst:44
# 81d8d9c7f76448528dd3e70171efe1e6
msgid "The server engine calibre uses, CherryPy, can have trouble with proxying and KeepAlive requests, so turn them off in Apache, with the SetEnv directives shown above."
msgstr ""

#: ../../server.rst:47
# 8f8d8f49022e4678b8bebe844fff1817
msgid "In process"
msgstr ""

#: ../../server.rst:49
# 205b0aebb3da483784e07a030974ff3e
msgid "The calibre content server can be run directly, in process, inside a host server like Apache using the WSGI framework."
msgstr ""

#: ../../server.rst:51
# 21337132832b4a9d9bc199d590bb1c9f
msgid "For this to work, all the dependencies needed by calibre must be installed on your system. Doing so is highly non-trivial and you are encouraged not to use in process servers. You will not get any assistance with debugging in process server problems."
msgstr ""

#: ../../server.rst:53
# d84e241497224638aa39bd83c19ff6b6
msgid "First, we have to create a WSGI *adapter* for the calibre content server. Here is a template you can use for the purpose. Replace the paths as directed in the comments"
msgstr ""

#: ../../server.rst:103
# c15a327f41b5455a84e143d48c5b35c7
msgid "Save this adapter as :file:`calibre-wsgi-adpater.py` somewhere your server will have access to it."
msgstr ""

#: ../../server.rst:105
# a6aeb04a8d654e74a9a435cf73c3ff58
msgid "Let's suppose that we want to use WSGI in Apache. First enable WSGI in Apache by adding the following to :file:`httpd.conf`::"
msgstr ""

#: ../../server.rst:109
# fc4c998de3254691b854d4bac2bc02a5
msgid "The exact technique for enabling the wsgi module will vary depending on your Apache installation. Once you have the proxy modules enabled, add the following rules to httpd.conf (or if you are using virtual hosts to the conf file for the virtual host in question::"
msgstr ""

#: ../../server.rst:113
# 25694d5f0ae54690baf298b940cffa5f
msgid "Change the path to :file:`calibre-wsgi-adapter.py` to wherever you saved it previously (make sure Apache has access to it)."
msgstr ""

#: ../../server.rst:115
# 5660f07ea85144b08bffa131543c402a
msgid "That's all, you will now be able to access the |app| Content Server under the /calibre URL in your apache server."
msgstr ""

#: ../../server.rst:117
# 4ab7050d73e64a71ad657b83f936873a
msgid "For more help with using mod_wsgi in Apache, see `mod_wsgi <http://code.google.com/p/modwsgi/wiki/WhereToGetHelp>`_."
msgstr ""

