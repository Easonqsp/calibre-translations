# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.43.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-09 09:04+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../server.rst:6
# 1b30abf700594e90ac1902c39c868361
msgid "Integrating the |app| content server into other servers"
msgstr ""

#: ../../server.rst:8
# fdf1617fd7f046519419ecca3f9657df
msgid "Here, we will show you how to integrate the |app| content server into another server. The most common reason for this is to make use of SSL or more sophisticated authentication. There are two main techniques: Running the |app| content server as a standalone process and using a reverse proxy to connect it with your main server or running the content server in process in your main server with WSGI. The examples below are all for Apache 2.x on linux, but should be easily adaptable to other platforms."
msgstr ""

#: ../../server.rst:0
# 26ed9c1d0b2046a2b2cc861f00cbfcd3
msgid "Contents"
msgstr ""

#: ../../server.rst:14
# 90c3263a7b124bb180aee92b3bc0ad85
msgid "This only applies to calibre releases >= 0.7.25"
msgstr ""

#: ../../server.rst:17
# 2e84de44c1c94f74b8053910519754c4
msgid "Using a reverse proxy"
msgstr ""

#: ../../server.rst:19
# 79a47de5eba4488fa04e0d5c4896bb03
msgid "A reverse proxy is when your normal server accepts incoming requests and passes them onto the calibre server. It then reads the response from the calibre server and forwards it to the client. This means that you can simply run the calibre server as normal without trying to integrate it closely with your main server, and you can take advantage of whatever authentication systems you main server has in place. This is the simplest approach as it allows you to use the binary calibre install with no external dependencies/system integration requirements. Below, is an example of how to achieve this with Apache as your main server, but it will work with any server that supports Reverse Proxies."
msgstr ""

#: ../../server.rst:21
# 244ed26d782e47a0a09c1e060343b16c
msgid "First start the |app| content server as shown below::"
msgstr ""

#: ../../server.rst:25
# 50ed5eb89f5f43b99103b7806630ca8f
msgid "The key parameter here is ``--url-prefix /calibre``. This causes the content server to serve all URLs prefixed by calibre. To see this in action, visit ``http://localhost:8080/calibre`` in your browser. You should see the normal content server website, but now it will run under /calibre."
msgstr ""

#: ../../server.rst:27
# 1dbb783e9dc949e694beaf44f1ce2ac7
msgid "Now suppose you are using Apache as your main server. First enable the proxy modules in apache, by adding the following to :file:`httpd.conf`::"
msgstr ""

#: ../../server.rst:32
# 56631a8222c2464bb22b17efb090a37b
msgid "The exact technique for enabling the proxy modules will vary depending on your Apache installation. Once you have the proxy modules enabled, add the following rules to httpd.conf (or if you are using virtual hosts to the conf file for the virtual host in question::"
msgstr ""

#: ../../server.rst:40
# c828a28a88e3439389b3c155d007cb1e
msgid "That's all, you will now be able to access the |app| Content Server under the /calibre URL in your apache server. The above rules pass all requests under /calibre to the calibre server running on port 8080 and thanks to the --url-prefix option above, the calibre server handles them transparently."
msgstr ""

#: ../../server.rst:42
# ef6e470ec478420e98677e28be130a95
msgid "If you are willing to devote an entire VirtualHost to the content server, then there is no need to use --url-prefix and RewriteRule, instead just use the ProxyPass directive."
msgstr ""

#: ../../server.rst:44
# 0e301dbf32564257b769af863ea9724b
msgid "The server engine calibre uses, CherryPy, can have trouble with proxying and KeepAlive requests, so turn them off in Apache, with the SetEnv directives shown above."
msgstr ""

#: ../../server.rst:47
# fce68d8da9254796980bcbef473a8fdf
msgid "In process"
msgstr ""

#: ../../server.rst:49
# 57fa8f36ed6f4247834ec4daf7b3f64c
msgid "The calibre content server can be run directly, in process, inside a host server like Apache using the WSGI framework."
msgstr ""

#: ../../server.rst:51
# 30e2b4e15174426f869619aac24362c4
msgid "For this to work, all the dependencies needed by calibre must be installed on your system. Doing so is highly non-trivial and you are encouraged not to use in process servers. You will not get any assistance with debugging in process server problems."
msgstr ""

#: ../../server.rst:53
# 4095cabf0ff9499eb9a00fb8c3bf5996
msgid "First, we have to create a WSGI *adapter* for the calibre content server. Here is a template you can use for the purpose. Replace the paths as directed in the comments"
msgstr ""

#: ../../server.rst:103
# 032c90832180464ebe41c3e9842f2168
msgid "Save this adapter as :file:`calibre-wsgi-adpater.py` somewhere your server will have access to it."
msgstr ""

#: ../../server.rst:105
# a8fd279912404b53b9b9441756a5119c
msgid "Let's suppose that we want to use WSGI in Apache. First enable WSGI in Apache by adding the following to :file:`httpd.conf`::"
msgstr ""

#: ../../server.rst:109
# 1451a65f89fc40e49c1a81add0de314b
msgid "The exact technique for enabling the wsgi module will vary depending on your Apache installation. Once you have the proxy modules enabled, add the following rules to httpd.conf (or if you are using virtual hosts to the conf file for the virtual host in question::"
msgstr ""

#: ../../server.rst:113
# 031dbb7fca264934aa5e0de5366c82e7
msgid "Change the path to :file:`calibre-wsgi-adapter.py` to wherever you saved it previously (make sure Apache has access to it)."
msgstr ""

#: ../../server.rst:115
# 46af281e32ad4330be3b93896bf1fad2
msgid "That's all, you will now be able to access the |app| Content Server under the /calibre URL in your apache server."
msgstr ""

#: ../../server.rst:117
# ba64c989977544568fd4e6c0b0b167bf
msgid "For more help with using mod_wsgi in Apache, see `mod_wsgi <http://code.google.com/p/modwsgi/wiki/WhereToGetHelp>`_."
msgstr ""

