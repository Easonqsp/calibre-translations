# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-06 09:51+0530\n"
"PO-Revision-Date: 2014-11-04 03:09+0000\n"
"Last-Translator: Kovid Goyal <kovid@kovidgoyal.net>\n"
"Language-Team: Gujarati (http://www.transifex.com/projects/p/calibre/language/gu/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: gu\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# e961212b5a034a789379adab0f1bcaa5
#: ../../home/kovid/work/calibre/manual/news_recipe.rst:4
msgid "API Documentation for recipes"
msgstr ""

# f72e5ce71e994f73bfbed59000efa68a
#: ../../home/kovid/work/calibre/manual/news_recipe.rst:9
msgid "The API for writing recipes is defined by the :class:`BasicNewsRecipe`"
msgstr ""

# f8fecfc0227f4e09bb2ea1940577357e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe:1
msgid ""
"Base class that contains logic needed in all recipes. By overriding "
"progressively more of the functionality in this class, you can make "
"progressively more customized/powerful recipes. For a tutorial introduction "
"to creating recipes, see :doc:`news`."
msgstr ""

# 5d2ca76e9d9a42c8bbce6a8109b79ec6
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.abort_recipe_processing:1
msgid ""
"Causes the recipe download system to abort the download of this recipe, "
"displaying a simple feedback message to the user."
msgstr ""

# 6e646c30c05e482f89ccff8c9e1e402e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.add_toc_thumbnail:1
msgid ""
"Call this from populate_article_metadata with the src attribute of an <img> "
"tag from the article that is appropriate for use as the thumbnail "
"representing the article in the Table of Contents. Whether the thumbnail is "
"actually used is device dependent (currently only used by the Kindles). Note"
" that the referenced image must be one that was successfully downloaded, "
"otherwise it will be ignored."
msgstr ""

# 28a767aa7612442cb8cb96f631102e60
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.adeify_images:1
msgid ""
"If your recipe when converted to EPUB has problems with images when viewed "
"in Adobe Digital Editions, call this method from within "
":meth:`postprocess_html`."
msgstr ""

# 2780bc79497c48f6a7c786206b67bfcf
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.cleanup:1
msgid ""
"Called after all articles have been download. Use it to do any cleanup like "
"logging out of subscription sites, etc."
msgstr ""

# c28e8bbe39e3469b984eb87df5252134
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.clone_browser:1
msgid ""
"Clone the browser br. Cloned browsers are used for multi-threaded downloads,"
" since mechanize is not thread safe. The default cloning routines should "
"capture most browser customization, but if you do something exotic in your "
"recipe, you should override this method in your recipe and clone manually."
msgstr ""

# f486127323f64520939e350d17b10e82
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.clone_browser:7
msgid ""
"Cloned browser instances use the same, thread-safe CookieJar by default, "
"unless you have customized cookie handling."
msgstr ""

# 4893082d3b734dfe8c436e88833f4fff
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.default_cover:1
msgid "Create a generic cover for recipes that don't have a cover"
msgstr ""

# 6910b08264614008a07354549b2b78fe
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.download:1
msgid ""
"Download and pre-process all articles from the feeds in this recipe. This "
"method should be called only once on a particular Recipe instance. Calling "
"it more than once will lead to undefined behavior. :return: Path to "
"index.html"
msgstr ""

# dc8dbaf89c144579a4cede2277e72f0a
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.extract_readable_article:1
msgid ""
"Extracts main article content from 'html', cleans up and returns as a "
"(article_html, extracted_title) tuple. Based on the original readability "
"algorithm by Arc90."
msgstr ""

# 44955e83a6f640d2b5141c818c684377
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_article_url:1
msgid ""
"Override in a subclass to customize extraction of the :term:`URL` that "
"points to the content for each article. Return the article URL. It is called"
" with `article`, an object representing a parsed article from a feed. See "
"`feedparser <http://packages.python.org/feedparser/>`_. By default it looks "
"for the original link (for feeds syndicated via a service like feedburner or"
" pheedo) and if found, returns that or else returns `article.link "
"<http://packages.python.org/feedparser/reference-entry-link.html>`_."
msgstr ""

# 31c7ea0ee7a7409eb5d3bb74fd8609df
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_browser:1
msgid ""
"Return a browser instance used to fetch documents from the web. By default "
"it returns a `mechanize <http://wwwsearch.sourceforge.net/mechanize/>`_ "
"browser instance that supports cookies, ignores robots.txt, handles "
"refreshes and has a mozilla firefox user agent."
msgstr ""

# 3e37bd0fbdb24280b06198dbb025acb1
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_browser:6
msgid ""
"If your recipe requires that you login first, override this method in your "
"subclass. For example, the following code is used in the New York Times "
"recipe to login for full access::"
msgstr ""

# 64fb43d780044eab8b8bcdd9cda743f2
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_cover_url:1
msgid ""
"Return a :term:`URL` to the cover image for this issue or `None`. By default"
" it returns the value of the member `self.cover_url` which is normally "
"`None`. If you want your recipe to download a cover for the e-book override "
"this method in your subclass, or set the member variable `self.cover_url` "
"before this method is called."
msgstr ""

# 78f1c629917548518a9f4ec29b39a215
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_feeds:1
msgid ""
"Return a list of :term:`RSS` feeds to fetch for this profile. Each element "
"of the list must be a 2-element tuple of the form (title, url). If title is "
"None or an empty string, the title from the feed is used. This method is "
"useful if your recipe needs to do some processing to figure out the list of "
"feeds to download. If so, override in your subclass."
msgstr ""

# d1cb326a61be4a99b8f1aec0528ff05a
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_masthead_title:1
msgid "Override in subclass to use something other than the recipe title"
msgstr ""

# 5907661aa03742fc8a96aedbf56f4889
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_masthead_url:1
msgid ""
"Return a :term:`URL` to the masthead image for this issue or `None`. By "
"default it returns the value of the member `self.masthead_url` which is "
"normally `None`. If you want your recipe to download a masthead for the "
"e-book override this method in your subclass, or set the member variable "
"`self.masthead_url` before this method is called. Masthead images are used "
"in Kindle MOBI files."
msgstr ""

# 3cc56674f25146499a876cdf91b6473c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:1
msgid ""
"If you set `articles_are_obfuscated` this method is called with every "
"article URL. It should return the path to a file on the filesystem that "
"contains the article HTML. That file is processed by the recursive HTML "
"fetching engine, so it can contain links to pages/images on the web."
msgstr ""

# eff8237445dc4557b67eefbd8f0dcb5d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.get_obfuscated_article:6
msgid ""
"This method is typically useful for sites that try to make it difficult to "
"access article content automatically."
msgstr ""

# b74467712be34aa7b2b3ef9bc9f536c6
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.image_url_processor:1
msgid ""
"Perform some processing on image urls (perhaps removing size restrictions "
"for dynamically generated images, etc.) and return the precessed URL."
msgstr ""

# c2294195273d4f2dbd58f15d612aac3f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:1
msgid ""
"Convenience method that takes an URL to the index page and returns a "
"`BeautifulSoup "
"<http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ of it."
msgstr ""

# ad66a5aa4a164730ba51e1dd666cb65d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.index_to_soup:5
msgid "`url_or_raw`: Either a URL or the downloaded index page as a string"
msgstr ""

# 824b683455b348e7aa346ed7dc25190e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:1
msgid ""
"Return True if the link should be followed or False otherwise. By default, "
"raises NotImplementedError which causes the downloader to ignore it."
msgstr ""

# 7e660faffe1d4ba28912b4e73971b3e1
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:5
msgid "The URL to be followed"
msgstr ""

# ae671b13849d4dffbb647cc4a70840ce
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.is_link_wanted:6
msgid "The Tag from which the URL was derived"
msgstr ""

# 6c3a13cfb18046ce886afa98e28db59b
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.javascript_login:1
msgid ""
"This method is used to login to a website that uses javascript for its login"
" form. After the login is complete, the cookies returned from the website "
"are copied to a normal (non-javascript) browser and the download proceeds "
"using those cookies."
msgstr ""

# 362372e824ba43ebb5234cf0d38a05d6
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.javascript_login:6
msgid "An example implementation::"
msgstr ""

# f12189abdf404f7787ec18815afe0b4b
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.javascript_login:15
msgid "Note that you can also select forms with CSS2 selectors, like this::"
msgstr ""

# b82f911cd14848b3ba5f2088cfa1dec5
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_feeds:1
msgid ""
"Create a list of articles from the list of feeds returned by "
":meth:`BasicNewsRecipe.get_feeds`. Return a list of :class:`Feed` objects."
msgstr ""

# b450a0097d2741578ca7431238548adc
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_index:1
msgid ""
"This method should be implemented in recipes that parse a website instead of"
" feeds to generate a list of articles. Typical uses are for news sources "
"that have a \"Print Edition\" webpage that lists all the articles in the "
"current print edition. If this function is implemented, it will be used in "
"preference to :meth:`BasicNewsRecipe.parse_feeds`."
msgstr ""

# a0da43ab41dd402b9543afe58de39e29
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_index:7
msgid ""
"It must return a list. Each element of the list must be a 2-element tuple of"
" the form ``('feed title', list of articles)``."
msgstr ""

# bfd4b3b6eb594c4c81d07983d53102c0
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_index:10
msgid "Each list of articles must contain dictionaries of the form::"
msgstr ""

# 50878d88d6e747e2a698f9fccf399dfa
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_index:23
msgid ""
"For an example, see the recipe for downloading `The Atlantic`. In addition, "
"you can add 'author' for the author of the article."
msgstr ""

# 9ec07380b5804755bc67b1d80ad682a0
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.parse_index:26
msgid ""
"If you want to abort processing for some reason and have calibre show the "
"user a simple message instead of an error, call "
":meth:`abort_recipe_processing`."
msgstr ""

# fcf77f5a19974600bce29ad350ae94b8
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.populate_article_metadata:1
msgid ""
"Called when each HTML page belonging to article is downloaded. Intended to "
"be used to get article metadata like author/summary/etc. from the parsed "
"HTML (soup). :param article: A object of class "
":class:`calibre.web.feeds.Article`. If you change the summary, remember to "
"also change the text_summary :param soup: Parsed HTML belonging to this "
"article :param first: True iff the parsed HTML is the first page of the "
"article."
msgstr ""

# 6e44be1bd5384e5e8c0bf9d37e10b104
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:1
msgid "Run any needed post processing on the parsed downloaded e-book."
msgstr ""

# ea71cbd7887f41a495ffb5425548d8d2
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:3
msgid "An OEBBook object"
msgstr ""

# f7baf07530d64e8fb903bcbbe56d50d6
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_book:4
msgid "Conversion options"
msgstr ""

# 34977e029c6840999a6d726eb150c817
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:1
msgid ""
"This method is called with the source of each downloaded :term:`HTML` file, "
"after it is parsed for links and images. It can be used to do arbitrarily "
"powerful post-processing on the :term:`HTML`. It should return `soup` after "
"processing it."
msgstr ""

# f81e1393c936408e9c411366df1a211b
# 04568d10c3f04224bf77c3b4027eaa9f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:6
msgid ""
"A `BeautifulSoup "
"<http://www.crummy.com/software/BeautifulSoup/documentation.html>`_  "
"instance containing the downloaded :term:`HTML`."
msgstr ""

# 51b17f577d584a2fbb4d9f42631f4b25
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.postprocess_html:7
msgid "True if this is the first page of an article."
msgstr ""

# c67e4497a9cc46259d13782dfd70043e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:1
msgid ""
"This method is called with the source of each downloaded :term:`HTML` file, "
"before it is parsed for links and images. It is called after the cleanup as "
"specified by remove_tags etc. It can be used to do arbitrarily powerful pre-"
"processing on the :term:`HTML`. It should return `soup` after processing it."
msgstr ""

# bd607078bf3e44f3bc7dc711befc6218
# 8591399054e048f48f0b4e32507d124f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_html:7
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:8
msgid ""
"`soup`: A `BeautifulSoup "
"<http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ instance"
" containing the downloaded :term:`HTML`."
msgstr ""

# 07d947fe63094a1f9d3ecd38574bd95f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:1
msgid ""
"This method is called with the source of each downloaded :term:`HTML` file, "
"before it is parsed into an object tree. raw_html is a unicode string "
"representing the raw HTML downloaded from the web. url is the URL from which"
" the HTML was downloaded."
msgstr ""

# 1d6d7c5cab2e4abb8eb01e0cdd3199fd
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:6
msgid "Note that this method acts *before* preprocess_regexps."
msgstr ""

# 66957d23a4164635ad68d9750ee775d9
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_raw_html:8
msgid "This method must return the processed raw_html as a unicode object."
msgstr ""

# 0aff0a63952249dfbdf0fedcc2ca8df2
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.print_version:1
msgid ""
"Take a `url` pointing to the webpage with article content and return the "
":term:`URL` pointing to the print version of the article. By default does "
"nothing. For example::"
msgstr ""

# d2bb5de155414d7885fa05bd3b66214f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.skip_ad_pages:1
msgid ""
"This method is called with the source of each downloaded :term:`HTML` file, "
"before any of the cleanup attributes like remove_tags, keep_only_tags are "
"applied. Note that preprocess_regexps will have already been applied. It is "
"meant to allow the recipe to skip ad pages. If the soup represents an ad "
"page, return the HTML of the real page. Otherwise return None."
msgstr ""

# 65ae4b6793ab4b8a98b319e2f59569c3
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:1
msgid ""
"Convenience method to sort the titles in `index` according to `weights`. "
"`index` is sorted in place. Returns `index`."
msgstr ""

# d22c8ff6253040e4972c523f8af72905
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:4
msgid "`index`: A list of titles."
msgstr ""

# 5176b022cfbb475e868d68dff5d802ba
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.sort_index_by:6
msgid ""
"`weights`: A dictionary that maps weights to titles. If any titles in index "
"are not in weights, they are assumed to have a weight of 0."
msgstr ""

# d030cec634624007b98304e143b987eb
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:1
msgid ""
"Convenience method to take a `BeautifulSoup "
"<http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ `Tag` "
"and extract the text from it recursively, including any CDATA sections and "
"alt tag attributes. Return a possibly empty unicode string."
msgstr ""

# 0bb92083cfbe4ba8bf235f06565be06e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:6
msgid ""
"`use_alt`: If `True` try to use the alt attribute for tags that don't have "
"any textual content"
msgstr ""

# 123fd66285cd4e5585547cc28ba55196
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.tag_to_string:9
msgid ""
"`tag`: `BeautifulSoup "
"<http://www.crummy.com/software/BeautifulSoup/documentation.html>`_ `Tag`"
msgstr ""

# bc4eb2dcb4784cf182224ac5b54264f3
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.articles_are_obfuscated:1
msgid ""
"Set to True and implement :meth:`get_obfuscated_article` to handle websites "
"that try to make it difficult to scrape content."
msgstr ""

# ece2d5bde9934530a69b303479ae7d0d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup:1
msgid ""
"Automatically extract all the text from downloaded article pages. Uses the "
"algorithms from the readability project. Setting this to True, means that "
"you do not have to worry about cleaning up the downloaded HTML manually "
"(though manual cleanup will always be superior)."
msgstr ""

# d5dfcd78acde478d87a8965a4d075903
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.auto_cleanup_keep:1
msgid ""
"Specify elements that the auto cleanup algorithm should never remove. The "
"syntax is a XPath expression. For example::"
msgstr ""

# 2683fb3ed531431c9bde79ca9bcce0c2
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.center_navbar:1
msgid ""
"If True the navigation bar is center aligned, otherwise it is left aligned"
msgstr ""

# 2dae8f49671f4012a53003c158492aee
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.compress_news_images:1
msgid ""
"Set this to False to ignore all scaling and compression parameters and pass "
"images through unmodified. If True and the other compression parameters are "
"left at their default values, jpeg images will be scaled to fit in the "
"screen dimensions set by the output profile and compressed to size at most "
"(w * h)/16 where w x h are the scaled image dimensions."
msgstr ""

# a4dc208d7f90420784716aed1bb0fe6c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_auto_size:1
msgid ""
"The factor used when auto compressing jpeg images. If set to None, auto "
"compression is disabled. Otherwise, the images will be reduced in size to (w"
" * h)/compress_news_images_auto_size bytes if possible by reducing the "
"quality level, where w x h are the image dimensions in pixels. The minimum "
"jpeg quality will be 5/100 so it is possible this constraint will not be "
"met.  This parameter can be overridden by the parameter "
"compress_news_images_max_size which provides a fixed maximum size for "
"images. Note that if you enable scale_news_images_to_device then the image "
"will first be scaled and then its quality lowered until its size is less "
"than (w * h)/factor where w and h are now the *scaled* image dimensions. In "
"other words, this compression happens after scaling."
msgstr ""

# c2fd4c9fe09547afb9c275a86d80533a
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.compress_news_images_max_size:1
msgid ""
"Set jpeg quality so images do not exceed the size given (in KBytes). If set,"
" this parameter overrides auto compression via "
"compress_news_images_auto_size. The minimum jpeg quality will be 5/100 so it"
" is possible this constraint will not be met."
msgstr ""

# 0c9c145458554195832836bf39e8e11c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.conversion_options:1
msgid ""
"Recipe specific options to control the conversion of the downloaded content "
"into an e-book. These will override any user or plugin specified values, so "
"only use if absolutely necessary. For example::"
msgstr ""

# 9f30009abd37482ea81dc3c865290440
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.cover_margins:1
msgid ""
"By default, the cover image returned by get_cover_url() will be used as the "
"cover for the periodical.  Overriding this in your recipe instructs calibre "
"to render the downloaded cover into a frame whose width and height are "
"expressed as a percentage of the downloaded cover. cover_margins = (10, 15, "
"'#ffffff') pads the cover with a white margin 10px on the left and right, "
"15px on the top and bottom. Color names defined at "
"http://www.imagemagick.org/script/color.php Note that for some reason, white"
" does not always work on windows. Use #ffffff instead"
msgstr ""

# a0203d11843d4acba68ad4d470cd87ae
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.delay:1
msgid ""
"Delay between consecutive downloads in seconds. The argument may be a "
"floating point number to indicate a more precise time."
msgstr ""

# 0b411c14824a400ca66019e4d3b7b813
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.description:1
msgid ""
"A couple of lines that describe the content this recipe downloads. This will"
" be used primarily in a GUI that presents a list of recipes."
msgstr ""

# c6f6a43951464e2faa8471823845ba6f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.encoding:1
msgid ""
"Specify an override encoding for sites that have an incorrect charset "
"specification. The most common being specifying ``latin1`` and using "
"``cp1252``. If None, try to detect the encoding. If it is a callable, the "
"callable is called with two arguments: The recipe object and the source to "
"be decoded. It must return the decoded source."
msgstr ""

# ffab7f1a0cbb49b5a0292d4c29d45d95
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.extra_css:1
msgid ""
"Specify any extra :term:`CSS` that should be added to downloaded "
":term:`HTML` files. It will be inserted into `<style>` tags, just before the"
" closing `</head>` tag thereby overriding all :term:`CSS` except that which "
"is declared using the style attribute on individual :term:`HTML` tags. For "
"example::"
msgstr ""

# 51d292c4d2404ed5b872ab105097f1ed
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.feeds:1
msgid ""
"List of feeds to download. Can be either ``[url1, url2, ...]`` or "
"``[('title1', url1), ('title2', url2),...]``"
msgstr ""

# 2a5eabbd086c4ef393742a91eec07852
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:1
msgid ""
"List of regular expressions that determines which links to ignore. If empty "
"it is ignored. Used only if is_link_wanted is not implemented. For example::"
msgstr ""

# f6739bddb2794363b2fb52eb2a88578e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:7
msgid "will remove all URLs that have `ads.doubleclick.net` in them."
msgstr ""

# 7f1c9a4d8a48407a86788745cdcb2de1
# 0882edd313b74330b8c97cc849950119
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.filter_regexps:9
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.match_regexps:9
msgid ""
"Only one of :attr:`BasicNewsRecipe.match_regexps` or "
":attr:`BasicNewsRecipe.filter_regexps` should be defined."
msgstr ""

# b28ea75d88ae4254b6e2b2f2e12fbe70
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:1
msgid ""
"Ignore duplicates of articles that are present in more than one section. A "
"duplicate article is an article that has the same title and/or URL. To "
"ignore articles with the same title, set this to::"
msgstr ""

# 3cacaeafe2734ef8a7262d404b9b777f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:7
msgid "To use URLs instead, set it to::"
msgstr ""

# b05f0a1590ea4ae9a9cc91a60caf67b2
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:7
msgid "ignore_duplicate_articles = {'url'}"
msgstr ""

# 3566095851b4489381dd68ebb1dda683
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:9
msgid "To match on title or URL, set it to::"
msgstr ""

# eaa020fde17f485789395e362e688a6c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.ignore_duplicate_articles:10
msgid "ignore_duplicate_articles = {'title', 'url'}"
msgstr ""

# ee8113073270429a85a8f70abf4a2c01
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:1
msgid ""
"Keep only the specified tags and their children. For the format for "
"specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. If this list is "
"not empty, then the `<body>` tag will be emptied and re-filled with the tags"
" that match the entries in this list. For example::"
msgstr ""

# f6747508c70f428ca65ee79f7db56ef3
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.keep_only_tags:8
msgid ""
"will keep only tags that have an `id` attribute of `\"content\"` or "
"`\"heading\"`."
msgstr ""

# e6d7f2c5130a4dc09b6cff3ac23e3ab1
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.language:1
msgid ""
"The language that the news is in. Must be an ISO-639 code either two or "
"three characters long"
msgstr ""

# 38a278ff39634a10a82c98d494a79ebf
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.masthead_url:1
msgid ""
"By default, calibre will use a default image for the masthead (Kindle only)."
" Override this in your recipe to provide a url to use as a masthead."
msgstr ""

# 9fbec351bf7b485aab8061d59d81a18b
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.match_regexps:1
msgid ""
"List of regular expressions that determines which links to follow. If empty,"
" it is ignored. Used only if is_link_wanted is not implemented. For "
"example::"
msgstr ""

# 834a55a8c70e4510b9f1c72769a4ed51
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.match_regexps:7
msgid "will match all URLs that have `page=some number` in them."
msgstr ""

# da2d4e0458334465ba5a6149418cfc0b
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.max_articles_per_feed:1
msgid ""
"Maximum number of articles to download from each feed. This is primarily "
"useful for feeds that don't have article dates. For most feeds, you should "
"use :attr:`BasicNewsRecipe.oldest_article`"
msgstr ""

# 8c06843a6ad14d8193ac203086a4025e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.needs_subscription:1
msgid ""
"If True the GUI will ask the user for a username and password to use while "
"downloading. If set to \"optional\" the use of a username and password "
"becomes optional"
msgstr ""

# 0b18028ff5294d4db4ed7e1e487ce3fd
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.no_stylesheets:1
msgid ""
"Convenient flag to disable loading of stylesheets for websites that have "
"overly complex stylesheets unsuitable for conversion to ebooks formats. If "
"True stylesheets are not downloaded and processed"
msgstr ""

# b15179d2a1b542379ec9686ccd71a908
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.oldest_article:1
msgid "Oldest article to download from this news source. In days."
msgstr ""

# 575cb893ee924b0286729412e49c4017
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:1
msgid ""
"List of :term:`regexp` substitution rules to run on the downloaded "
":term:`HTML`. Each element of the list should be a two element tuple. The "
"first element of the tuple should be a compiled regular expression and the "
"second a callable that takes a single match object and returns a string to "
"replace the match. For example::"
msgstr ""

# 61e65e98a4f141c0ba1a77e81b37d8be
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.preprocess_regexps:12
msgid "will remove everything from `<!--Article ends here-->` to `</body>`."
msgstr ""

# 7b910895ac074af3a20924ec778b115b
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.publication_type:1
msgid ""
"Publication type Set to newspaper, magazine or blog. If set to None, no "
"publication type metadata will be written to the opf file."
msgstr ""

# 4baa4a617f474bc49fd054eee3c2cffc
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.recipe_disabled:1
msgid ""
"Set to a non empty string to disable this recipe. The string will be used as"
" the disabled message"
msgstr ""

# 03f8decf2ea24905a608afddf9bc0e07
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.recursions:1
msgid "Number of levels of links to follow on article webpages"
msgstr ""

# 256acf4274b14930bce33b5d2aeec001
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_attributes:1
msgid "List of attributes to remove from all tags. For example::"
msgstr ""

# 3c1cef71e7244383918ec773c2dba914
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_empty_feeds:1
msgid ""
"If True empty feeds are removed from the output. This option has no effect "
"if parse_index is overridden in the sub class. It is meant only for recipes "
"that return a list of feeds using `feeds` or :meth:`get_feeds`. It is also "
"used if you use the ignore_duplicate_articles option."
msgstr ""

# 6aa3fd22fbf94de8960b3e8f50ee3bf5
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_javascript:1
msgid "Convenient flag to strip all javascript tags from the downloaded HTML"
msgstr ""

# ee23e551ff77431bb18345838e2345d6
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags:1
msgid ""
"List of tags to be removed. Specified tags are removed from downloaded HTML."
" A tag is specified as a dictionary of the form::"
msgstr ""

# 33e0ee0937dd47ed83c0dd5f5f8d7268
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags:9
msgid ""
"All keys are optional. For a full explanation of the search criteria, see "
"`Beautiful Soup "
"<http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html#Searching%20the%20Parse%20Tree>`_"
" A common example::"
msgstr ""

# 164a90756ec9482080f05122d448818e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags:15
msgid ""
"This will remove all `<div class=\"advert\">` tags and all their children "
"from the downloaded :term:`HTML`."
msgstr ""

# 80905bdec12748309893da97225bdfdb
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:1
msgid ""
"Remove all tags that occur after the specified tag. For the format for "
"specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

# 406cd2272645461494f3d78232ccbe49
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags_after:7
msgid "will remove all tags after the first element with `id=\"content\"`."
msgstr ""

# dc18a272fcb34436928c3be11d71618f
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:1
msgid ""
"Remove all tags that occur before the specified tag. For the format for "
"specifying a tag see :attr:`BasicNewsRecipe.remove_tags`. For example::"
msgstr ""

# 928619aff29f4b408b99d6b802385f1e
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.remove_tags_before:7
msgid "will remove all tags before the first element with `id=\"content\"`."
msgstr ""

# aec149b6c164447e845cb1b96066fdef
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.requires_version:1
msgid "Minimum calibre version needed to use this recipe"
msgstr ""

# 00d5d40d3fcd4ba998c7a3b72dfbe67d
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.reverse_article_order:1
msgid "Reverse the order of articles in each feed"
msgstr ""

# 033340210fd24524aceb13334fdd4747
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.scale_news_images:1
msgid ""
"Maximum dimensions (w,h) to scale images to. If scale_news_images_to_device "
"is True this is set to the device screen dimensions set by the output "
"profile unless there is no profile set, in which case it is left at whatever"
" value it has been assigned (default None)."
msgstr ""

# 96291edd33c2430abee6686c761058ac
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.scale_news_images_to_device:1
msgid ""
"Rescale images to fit in the device screen dimensions set by the output "
"profile. Ignored if no output profile is set."
msgstr ""

# f10451aebdbc4cb39159dd6e1d42fe82
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.simultaneous_downloads:1
msgid ""
"Number of simultaneous downloads. Set to 1 if the server is picky. "
"Automatically reduced to 1 if :attr:`BasicNewsRecipe.delay` > 0"
msgstr ""

# c1d75113bdd540d38da08973c38717e9
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.summary_length:1
msgid "Max number of characters in the short description"
msgstr ""

# c70e8b5a3ea445bd97c5ee6ea0fa7972
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.template_css:1
msgid ""
"The CSS that is used to style the templates, i.e., the navigation bars and "
"the Tables of Contents. Rather than overriding this variable, you should use"
" `extra_css` in your recipe to customize look and feel."
msgstr ""

# a7b021398f094f578d2e0922a5e3e0fe
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.timefmt:1
msgid ""
"The format string for the date shown on the first page. By default: "
"Day_Name, Day_Number Month_Name Year"
msgstr ""

# 2e634da2c79e4c47a7df35ddd05964f8
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.timeout:1
msgid "Timeout for fetching files from server in seconds"
msgstr ""

# d6d73275a3124bccb65586ff132b624c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.title:1
msgid "The title to use for the ebook"
msgstr ""

# 05b88edd5c6d48bfac6331f5a7478ecb
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.use_embedded_content:1
msgid ""
"Normally we try to guess if a feed has full articles embedded in it based on"
" the length of the embedded content. If `None`, then the default guessing is"
" used. If `True` then the we always assume the feeds has embedded content "
"and if `False` we always assume the feed does not have embedded content."
msgstr ""

# df78eda020d24e90b44d4bc658871a5c
#: ../../home/kovid/work/calibre/src/calibre/web/feeds/news.pydocstring of
#: calibre.web.feeds.news.BasicNewsRecipe.use_javascript_to_login:1
msgid ""
"If you set this True, then calibre will use javascript to login to the "
"website. This is needed for some websites that require the use of javascript"
" to login. If you set this to True you must implement the "
":meth:`javascript_login` method, to do the actual logging in."
msgstr ""
