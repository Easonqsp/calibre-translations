# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 2.21.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-14 08:07+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:2
# 09c5472373124c80b7975c92f81d4f9d
msgid "Function Mode for Search & Replace in the Editor"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:4
# 2d90857d262c4aef91c8ec58c6cb336b
msgid "The Search & Replace tool in the editor support a *function mode*. In this mode, you can combine regular expressions (see :doc:`regexp`) with arbitrarily powerful python functions to do all sorts of advanced text processing."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:9
# 29b40fa7c4414873b3157dac759bc0cb
msgid "In the standard *regexp* mode for search and replace, you specify both a regular expression to search for as well as a template that is used to replace all found matches. In function mode, instead of using a fixed template, you specify an arbitrary function, in the `python programming language <https://docs.python.org/2.7/>`_. This allows you to do lots of things that are not possible with simple templates."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:16
# 25bfc7f5e82f4d3f897c43cbff088707
msgid "Techniques for using function mode and the syntax will be described by means of examples, showing you how to create functions to perform progressively more complex tasks."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:26
# 848e169338224d9a9a13f74d8c34d9e3
msgid "Automatically fixing the case of headings in the document"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:28
# 525fdb12a35b40f9b8fa19201f903124
msgid "Here, we will leverage one of the builtin functions in the editor to automatically change the case of all text inside heading tags to title case::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:33
# 6c0a522f3ab5440ba7e7213331ae99f9
msgid "For the function, simply choose the :guilabel:`Title-case text (ignore tags)` builtin function. The will change titles that look like: ``<h1>some TITLE</h1>`` to ``<h1>Some Title</h1>``. It will work even if there are other HTML tags inside the heading tags."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:40
# 22f82ceaeb684e3c98f7971cfba99567
msgid "Your first custom function - smartening hyphens"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:42
# 30cbeb957e854440b6850cc456381d67
msgid "The real power of function mode comes from being able to create your own functions to process text in arbitrary ways. The Smarten Punctuation tool in the editor leaves individual hyphens alone, so you can use the this function to replace them with em-dashes."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:47
# be61383b02fc410e84c0e2178a678084
msgid "To create a new function, simply click the Create/Edit button to create a new function and copy the python code from below."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:55
# 4a3bed6a2d8548f5a9176ecef8f895d5
msgid "Every Search & Replace custom function must have a unique name and consist of a python function named replace, that accepts all the arguments shown above. For the moment, we wont worry about all the different arguments to ``replace()`` function. Just focus on the ``match`` argument. It represents a match when running a search and replace. Its full documentation in available `here <https://docs.python.org/2.7/library/re.html#match-objects>`_. ``match.group()`` simply returns all the matched text and all we do is replace hyphens in that text with em-dashes, first replacing double hyphens and then single hyphens."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:65
# a4511b8f3c8e47c88c1b6fedb13a0fd0
msgid "Use this function with the find regular expression::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:69
# fb655c0153e0468882725ea8e133e9f8
msgid "And it will replace all hyphens with em-dashes, but only in actual text and not inside HTML tag definitions."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:74
# ee8f7534edc5428ab1d65044bdf30d4b
msgid "The power of function mode - using a spelling dictionary to fix mis-hyphenated words"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:76
# 5f4466b32a4e45aa98c5c681b1909a47
msgid "Often, ebooks created from scans of printed books contain mis-hyphenated words -- words that were split at the end of the line on the printed page. We will write a simple function to automatically find and fix such words."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:101
# be6b5db0db3c4a9ba36d4ee2222f157b
msgid "Use this function with the same find expression as before, namely::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:105
# e39a516d83944029b4bd6060fd946667
msgid "And it will magically fix all mis-hyphenated words in the text of the book. The main trick is to use one of the useful extra arguments to the replace function, ``dictionaries``.  This refers to the dictionaries the editor itself uses to spell check text in the book. What this function does is look for words separated by a hyphen, remove the hyphen and check if the dictionary recognizes the composite word, if it does, the original words are replaced by the hyphen free composite word."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:113
# a8bc58ea478b49aab8c5ea82e65e5eb3
msgid "Note that one limitation of this technique is it will only work for mono-lingual books, because, by default, ``dictionaries.recognized()`` uses the main language of the book."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:119
# dbdd7a63e0d34d08b2b58a2cb967968d
msgid "Auto numbering sections"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:121
# ff856f448a5d42c68873e104dd7e153b
msgid "Now we will see something a little different. Suppose your HTML file has many sections, each with a heading in an :code:`<h2>` tag that looks like :code:`<h2>Some text</h2>`. You can create a custom function that will automatically number these headings with consecutive section numbers, so that they look like :code:`<h2>1. Some text</h2>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:137
# 2d27caf5112d4e47bb98907d0d89e63d
msgid "Use it with the find expression::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:141
# 6407be9efb8c4c279cbd64d159e538d7
msgid "Place the cursor at the top of the file and click :guilabel:`Replace all`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:143
# 9094d6d0542c4935ad88687af55470eb
msgid "This function uses another of the useful extra arguments to ``replace()``: the ``number`` argument. When doing a :guilabel:`Replace All` number is automatically incremented for every successive match."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:147
# 8291cce94297447f8550b266f5884a0e
msgid "Another new feature is the use of ``replace.file_order`` -- setting that to ``'spine'`` means that if this search is run on multiple HTML files, the files are processed in the order in which they appear in the book. See :ref:`file_order_replace_all` for details."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:154
# ff3c7c4032ad4cd1b3881817b42d69cb
msgid "Auto create a Table of Contents"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:156
# a4108f6b580142038ed1e76a5220e74e
msgid "Finally, lets try something a little more ambitious. Suppose your book has headings in ``h1`` and ``h2`` tags that look like ``<h1 id=\"someid\">Some Text</h1>``. We will auto-generate an HTML Table of Contents based on these headings. Create the custom function below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:199
# f3e81e2ab8d341dd8ee682c8253ab34a
msgid "And use it with the find expression::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:203
# f6fcc13260b1403c97bb6123e4ba9787
msgid "Run the search on :guilabel:`All text files` and at the end of the search, a window will popup with \"Debug Output from your function\" which will have the HTML Table of Contents, ready to be pasted into :file:`toc.html`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:207
# 6e0763d07677464b8e0fe03c09a5dfc5
msgid "The function above is heavily commented, so it should be easy to follow. The key new feature is the use of another useful extra argument to the ``replace()`` function, the ``data`` object. The ``data`` object is a python *dict* that persists between all successive invocations of ``replace()`` during a single :guilabel:`Replace All` operation."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:213
# 472aefa7aea54a2fb6aed2053c7db76d
msgid "Another new feature is the use of ``call_after_last_match`` -- setting that to ``True`` on the ``replace()`` function means that the editor will call ``replace()`` one extra time after all matches have been found. For this extra call, the match object will be ``None``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:218
# b9d9cc9bf46e4967a2ad65b535c4b8dc
msgid "This was just a demonstration to show you the power of function mode, if you really needed to generate a Table of Contents from headings in your book, you would be better off using the dedicated Table of Contents tool in :guilabel:`Tools->Table of Contents`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:224
# 7beb43936c3f46d199aff9898b2e7af7
msgid "The API for the function mode"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:226
# f0c38c6e5c24435193cee1dcaaf2d9f0
msgid "All function mode functions must be python functions named replace, with the following signature::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:232
# 3ffdfef80f7441e586aac30b3c27f599
msgid "When a find/replace is run, for every match that is found, the ``replace()`` function will be called, it must return the replacement string for that match. If no replacements are to be done, it should return ``match.group()`` which is the original string. The various arguments to the ``replace()`` function are documented below."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:239
# e646498590b04ef49c3576f5b4be4b4c
msgid "The ``match`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:241
# cfd05abc83694240964c7626df16b55a
msgid "The ``match`` argument represents the currently found match. It is a `python Match object <https://docs.python.org/2.7/library/re.html#match-objects>`_. It's most useful method is ``group()`` which can be used to get the matched text corresponding to individual capture groups in the search regular expression."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:248
# 1ef95f9b269a459b9b65ffa811fdef6b
msgid "The ``number`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:250
# 1f3c0d0850b2432da7fe0375e2635a19
msgid "The ``number`` argument is the number of the current match. When you run :guilabel:`Replace All`, every successive match will cause ``replace()`` to be called with an increasing number. The first match has number 1."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:255
# 14ec8fca92914447af8bce7be02c88aa
msgid "The ``file_name`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:257
# fe43093bfc794f8aa33c7a1a314731f6
msgid "This is the filename of the file in which the current match was found. When searching inside marked text, the ``file_name`` is empty. The ``file_name`` is in canonical form, a path relative to the root of the book, using ``/`` as the path separator."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:263
# 09518bafec8d47e9a19d1e59ba7cce31
msgid "The ``metadata`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:265
# 8e2f3bad169e4bffaf4803912535f766
msgid "This represents the metadata of the current book, such as title, authors, language, etc. It is an object of class :class:`calibre.ebooks.metadata.book.base.Metadata`. Useful attributes include, ``title``, ``authors`` (a list of authors) and ``language`` (the language code)."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:271
# abf1359fecb04abb805c1451c2f30c7c
msgid "The ``dictionaries`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:273
# d63e4fb2b4df4c54984646f55359a629
msgid "This represents the collection of dictionaries used for spell checking the current book. It's most useful method is ``dictionaries.recognized(word)`` which will return ``True`` if the passed in word is recognized by the dictionary for the current book's language."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:279
# 9a6052dad09743db8474eb5e1621c85f
msgid "The ``data`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:281
# bf9781ef37ea470c9e967ebcc555afeb
msgid "This a simple python ``dict``. When you run :guilabel:`Replace All`, every successive match will cause ``replace()`` to be called with the same ``dict`` as data. You can thus use it to store arbitrary data between invocations of ``replace()`` during a :guilabel:`Replace All` operation."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:288
# c03650940ac8466cb0787d0f3c3dc0db
msgid "The ``functions`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:290
# 2fe9852f4cf743089dae99fac2376b60
msgid "The ``functions`` argument gives you access to all other user defined functions. This is useful for code re-use. You can define utility functions in one place and re-use them in all your other functions. For example, suppose you create a function name ``My Function`` like this:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:303
# 9f5f177c0ac843bba9491fd5edef680a
msgid "Then, in another function, you can access the ``utility()`` function like this:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:311
# 2db8e68db74a45048154176a091682dd
msgid "You can also use the functions object to store persistent data, that can be re-used by other functions. For example, you could have one function that when run with :guilabel:`Replace All` collects some data and another function that uses it when it is run afterwards. Consider the following two functions:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:331
# e679ef5198b54a5fa32139153db689b9
msgid "Debugging your functions"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:333
# 04e17c52bb344eac8e9431255eba5434
msgid "You can debug the functions you create by using the standard ``print()`` function from python. The output of print will be displayed in a popup window after the Find/replace has completed. You saw an example of using ``print()`` to output an entire table of contents above."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:341
# 081344acc86a4b8fbca731c7a297fb68
msgid "Choose file order when running on multiple HTML files"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:343
# b0787e19dc6641b8ab19605557e15506
msgid "When you run a :guilabel:`Replace All` on multiple HTML files, the order in which the files are processes depends on what files you have open for editing. You can force the search to process files in the order in which the appear by setting the ``file_order`` attribute on your function, like this:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:355
# 9ac9f459961f464caf8bc211fc56d78c
msgid "``file_order`` accepts two values, ``spine`` and ``spine-reverse`` which cause the search to process multiple files in the order they appear in the book, either forwards or backwards, respectively."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:360
# d64301654e044f019cda0561001c3236
msgid "Having your function called an extra time after the last match is found"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:362
# 6eaae94bd9764e19b8d535d4c3b419c2
msgid "Sometimes, as in the auto generate table of contents example above, it is useful to have your function called an extra time after the last match is found. You can do this by setting the ``call_after_last_match`` attribute on your function, like this:"
msgstr ""

