# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 2.18.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-30 09:28+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../home/kovid/work/calibre/manual/function_mode.rst:2
# 2e2de66938314ab68358f27bb7798895
msgid "Function Mode for Search & Replace in the Editor"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:4
# 8e7e21f895244ab4b6049bdf05b16b9c
msgid "The Search & Replace tool in the editor support a *function mode*. In this mode, you can combine regular expressions (see :doc:`regexp`) with arbitrarily powerful python functions to do all sorts of advanced text processing."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:9
# d2c7690c3a5b48619ffdf322a7dc243f
msgid "In the standard *regexp* mode for search and replace, you specify both a regular expression to search for as well as a template that is used to replace all found matches. In function mode, instead of using a fixed template, you specify an arbitrary function, in the `python programming language <https://docs.python.org/2.7/>`_. This allows you to do lots of things that are not possible with simple templates."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:16
# 7664102c4151413ea3de7856923c5f7d
msgid "Techniques for using function mode and the syntax will be described by means of examples, showing you how to create functions to perform progressively more complex tasks."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:26
# 80d6886998834e31b5dea4fcbb0c983b
msgid "Automatically fixing the case of headings in the document"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:28
# 1dbe616381604fe48677da6efaa87dc8
msgid "Here, we will leverage one of the builtin functions in the editor to automatically change the case of all text inside heading tags to title case::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:33
# 53b3d226342142939dcd2043b3d8c430
msgid "For the function, simply choose the :guilabel:`Title-case text (ignore tags)` builtin function. The will change titles that look like: ``<h1>some TITLE</h1>`` to ``<h1>Some Title</h1>``. It will work even if there are other HTML tags inside the heading tags."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:40
# f1c7caeb35ff4b20a3bc05c06fc79aa5
msgid "Your first custom function - smartening hyphens"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:42
# e4891d7cbf2a45708f924cf46753ad4c
msgid "The real power of function mode comes from being able to create your own functions to process text in arbitrary ways. The Smarten Punctuation tool in the editor leaves individual hyphens alone, so you can use the this function to replace them with em-dashes."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:47
# 4395c711291847feb2fb79d62fb2119b
msgid "To create a new function, simply click the Create/Edit button to create a new function and copy the python code from below."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:55
# 8523a1f95f304eaf83ee20520d54ffd7
msgid "Every Search & Replace custom function must have a unique name and consist of a python function named replace, that accepts all the arguments shown above. For the moment, we wont worry about all the different arguments to ``replace()`` function. Just focus on the ``match`` argument. It represents a match when running a search and replace. Its full documentation in available `here <https://docs.python.org/2.7/library/re.html#match-objects>`_. ``match.group()`` simply returns all the matched text and all we do is replace hyphens in that text with em-dashes, first replacing double hyphens and then single hyphens."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:65
# e2fddefccc494c0da7cd50ba103745e5
msgid "Use this function with the find regular expression::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:69
# 37b5f623e3ab49869d8937aaea9caef2
msgid "And it will replace all hyphens with em-dashes, but only in actual text and not inside HTML tag definitions."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:74
# 72bc7db56eef40878f9c4dffd67f1036
msgid "The power of function mode - using a spelling dictionary to fix mis-hyphenated words"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:76
# c7d50cc32a9446c89724d07fe0107f65
msgid "Often, ebooks created from scans of printed books contain mis-hyphenated words -- words that were split at the end of the line on the printed page. We will write a simple function to automatically find and fix such words."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:101
# 83a4d71b01cd4a2a8e5b9a184513e8a7
msgid "Use this function with the same find expression as before, namely::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:105
# 63aeeb0615d84777aefe92c55c585dc9
msgid "And it will magically fix all mis-hyphenated words in the text of the book. The main trick is to use one of the useful extra arguments to the replace function, ``dictionaries``.  This refers to the dictionaries the editor itself uses to spell check text in the book. What this function does is look for words separated by a hyphen, remove the hyphen and check if the dictionary recognizes the composite word, if it does, the original words are replaced by the hyphen free composite word."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:113
# 66e29029b31b4ea78551455f1b9efd9a
msgid "Note that one limitation of this technique is it will only work for mono-lingual books, because, by default, ``dictionaries.recognized()`` uses the main language of the book."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:119
# 3b6c5afa7ffd4c68a2e845ad7611fb58
msgid "Auto numbering sections"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:121
# b834e36a0e04428786ecf71838df315d
msgid "Now we will see something a little different. Suppose your HTML file has many sections, each with a heading in an :code:`<h2>` tag that looks like :code:`<h2>Some text</h2>`. You can create a custom function that will automatically number these headings with consecutive section numbers, so that they look like :code:`<h2>1. Some text</h2>`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:137
# a8a9470ba2b447a0a5c70d795580058e
msgid "Use it with the find expression::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:141
# de8c7b364a2e4c408ad71bf7a645dc64
msgid "Place the cursor at the top of the file and click :guilabel:`Replace all`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:143
# f56b519245de420e91912a71c0731cae
msgid "This function uses another of the useful extra arguments to ``replace()``: the ``number`` argument. When doing a :guilabel:`Replace All` number is automatically incremented for every successive match."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:147
# 3bee9797b6e84b0aa30f87a72353bb61
msgid "Another new feature is the use of ``replace.file_order`` -- setting that to ``'spine'`` means that if this search is run on multiple HTML files, the files are processed in the order in which they appear in the book. See :ref:`file_order_replace_all` for details."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:154
# 88c2d59ce0ee42508b2ccf13c721505e
msgid "Auto create a Table of Contents"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:156
# 560cfa6b48024f5c907a729dfd817852
msgid "Finally, lets try something a little more ambitious. Suppose your book has headings in ``h1`` and ``h2`` tags that look like ``<h1 id=\"someid\">Some Text</h1>``. We will auto-generate an HTML Table of Contents based on these headings. Create the custom function below:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:199
# 13c5f2d82f6040c5bc1d7e531616d798
msgid "And use it with the find expression::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:203
# 36bca7aaef5c4a81a777a72589835c80
msgid "Run the search on :guilabel:`All text files` and at the end of the search, a window will popup with \"Debug Output from your function\" which will have the HTML Table of Contents, ready to be pasted into :file:`toc.html`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:207
# c247dbd3145c45309da0749a5d70cf9f
msgid "The function above is heavily commented, so it should be easy to follow. The key new feature is the use of another useful extra argument to the ``replace()`` function, the ``data`` object. The ``data`` object is a python *dict* that persists between all successive invocations of ``replace()`` during a single :guilabel:`Replace All` operation."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:213
# 704eb529b3b640eaaf992fa4f1471c6b
msgid "Another new feature is the use of ``call_after_last_match`` -- setting that to ``True`` on the ``replace()`` function means that the editor will call ``replace()`` one extra time after all matches have been found. For this extra call, the match object will be ``None``."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:218
# 4f2239da9e544660921b99568c66fe84
msgid "This was just a demonstration to show you the power of function mode, if you really needed to generate a Table of Contents from headings in your book, you would be better off using the dedicated Table of Contents tool in :guilabel:`Tools->Table of Contents`."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:224
# 82b9c2b7c6d641249ad9883cb2177af6
msgid "The API for the function mode"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:226
# da01e68fa90f4ae4b145f51f65fff128
msgid "All function mode functions must be python functions named replace, with the following signature::"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:232
# 386a574c0bbd46d481335f881b310c5d
msgid "When a find/replace is run, for every match that is found, the ``replace()`` function will be called, it must return the replacement string for that match. If no replacements are to be done, it should return ``match.group()`` which is the original string. The various arguments to the ``replace()`` function are documented below."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:239
# 4aed9dfc7329433cb4ee46bd58e4b9ce
msgid "The ``match`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:241
# 58bff217bfa046b9b0b2f639f2057cb9
msgid "The ``match`` argument represents the currently found match. It is a `python Match object <https://docs.python.org/2.7/library/re.html#match-objects>`_. It's most useful method is ``group()`` which can be used to get the matched text corresponding to individual capture groups in the search regular expression."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:248
# 277e08e2db16438a9fff00e77e677137
msgid "The ``number`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:250
# 65198d5c70314fb5a16ce4b4dc781875
msgid "The ``number`` argument is the number of the current match. When you run :guilabel:`Replace All`, every successive match will cause ``replace()`` to be called with an increasing number. The first match has number 1."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:255
# b6c7007b729b452da7da54c5a073084d
msgid "The ``file_name`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:257
# ef0a69f91ffa431e99629a659c092178
msgid "This is the filename of the file in which the current match was found. When searching inside marked text, the ``file_name`` is empty. The ``file_name`` is in canonical form, a path relative to the root of the book, using ``/`` as the path separator."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:263
# dc7f8f2629b0436ab0078cfbe7621cbb
msgid "The ``metadata`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:265
# 447760d92b364c0bb6909d213e586469
msgid "This represents the metadata of the current book, such as title, authors, language, etc. It is an object of class :class:`calibre.ebooks.metadata.book.base.Metadata`. Useful attributes include, ``title``, ``authors`` (a list of authors) and ``language`` (the language code)."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:271
# 87b5ddb8f1d747c1869974c3b7b44876
msgid "The ``dictionaries`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:273
# 2b6ecfb9114b4d78b1542145e571f778
msgid "This represents the collection of dictionaries used for spell checking the current book. It's most useful method is ``dictionaries.recognized(word)`` which will return ``True`` if the passed in word is recognized by the dictionary for the current book's language."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:279
# 9533dfe1f9bc43898c2ad5e0f790de16
msgid "The ``data`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:281
# f6dff0e520024726882a3484ed7d131e
msgid "This a simple python ``dict``. When you run :guilabel:`Replace All`, every successive match will cause ``replace()`` to be called with the same ``dict`` as data. You can thus use it to store arbitrary data between invocations of ``replace()`` during a :guilabel:`Replace All` operation."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:288
# 94a3e0986edd4a4db9809af0cbb907e1
msgid "The ``functions`` argument"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:290
# 3eef354c52c648b289eb1ee8d07f8222
msgid "The ``functions`` argument gives you access to all other user defined functions. This is useful for code re-use. You can define utility functions in one place and re-use them in all your other functions. For example, suppose you create a function name ``My Function`` like this:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:303
# a39c8e34117b444da7269730ba518181
msgid "Then, in another function, you can access the ``utility()`` function like this:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:311
# 9de9fc9cb5fc4cc3ad7c4fb52dc74114
msgid "You can also use the functions object to store persistent data, that can be re-used by other functions. For example, you could have one function that when run with :guilabel:`Replace All` collects some data and another function that uses it when it is run afterwards. Consider the following two functions:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:331
# 454546b10c6e405a9a3c612631db4e33
msgid "Debugging your functions"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:333
# e604f2ebaa884c4cb296ce4d0b9b0221
msgid "You can debug the functions you create by using the standard ``print()`` function from python. The output of print will be displayed in a popup window after the Find/replace has completed. You saw an example of using ``print()`` to output an entire table of contents above."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:341
# 5cfd0480af3d46b79f3b146d57483607
msgid "Choose file order when running on multiple HTML files"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:343
# 7b1529a3709a43feb6bd00eb58a7df3e
msgid "When you run a :guilabel:`Replace All` on multiple HTML files, the order in which the files are processes depends on what files you have open for editing. You can force the search to process files in the order in which the appear by setting the ``file_order`` attribute on your function, like this:"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:355
# ec25f6b56bbe49e48af86a58ac9622bd
msgid "``file_order`` accepts two values, ``spine`` and ``spine-reverse`` which cause the search to process multiple files in the order they appear in the book, either forwards or backwards, respectively."
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:360
# 04c961c1e69a41cb89615d307f383498
msgid "Having your function called an extra time after the last match is found"
msgstr ""

#: ../../home/kovid/work/calibre/manual/function_mode.rst:362
# 8ac79b5d1876411a9a1cccdd2ab4b716
msgid "Sometimes, as in the auto generate table of contents example above, it is useful to have your function called an extra time after the last match is found. You can do this by setting the ``call_after_last_match`` attribute on your function, like this:"
msgstr ""

