# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calibre 1.43.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-09 09:04+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sub_groups.rst:7
# 6067d2b95eed41d9b4900862f13beb25
msgid "Managing subgroups of books, for example \"genre\""
msgstr ""

#: ../../sub_groups.rst:9
# 80d70d4a574c45799ed23afe6fc8b6ce
msgid "Some people wish to organize the books in their library into subgroups, similar to subfolders. The most commonly provided reason is to create genre hierarchies, but there are many others. One user asked for a way to organize textbooks by subject and course number. Another wanted to keep track of gifts by subject and recipient. This tutorial will use the genre example for the rest of this post."
msgstr ""

#: ../../sub_groups.rst:11
# e1658ba42e644625b4eb229059973f49
msgid "Before going on, please note that we are not talking about folders on the hard disk. Subgroups are not file folders. Books will not be copied anywhere. Calibre's library file structure is not affected. Instead, we are presenting a way to organize and display subgroups of books within a |app| library."
msgstr ""

#: ../../sub_groups.rst:21
# d33663e078ff4f3994c209b291978bd3
msgid "The commonly-provided requirements for subgroups such as genres are:"
msgstr ""

#: ../../sub_groups.rst:23
# 16adbd9df4f24afea21e8db9408bda5a
msgid "A subgroup (e.g., a genre) must contain (point to) books, not categories of books. This is what distinguishes subgroups from |app| user categories."
msgstr ""

#: ../../sub_groups.rst:24
# c61e58fd0e1146f9becc39a03d51d6d2
msgid "A book can be in multiple subgroups (genres). This distinguishes subgroups from physical file folders."
msgstr ""

#: ../../sub_groups.rst:25
# 66d43a2b57ed4e7e90307a8f896ed304
msgid "Subgroups (genres) must form a hierarchy; subgroups can contain subgroups."
msgstr ""

#: ../../sub_groups.rst:27
# 31085cca8ee3455d824ea1305e858993
msgid "Tags give you the first two. If you tag a book with the genre then you can use the tag browser (or search) for find the books with that genre, giving you the first. Many books can have the same tag(s), giving you the second. The problem is that tags don't satisfy the third requirement. They don't provide a hierarchy."
msgstr ""

#: ../../sub_groups.rst:29
# 8845259cbb8245c4bbd126b744927a04
msgid "|sgtree| Calibre's hierarchy feature gives you the third, the ability to see the genres in a 'tree' and the ability to easily search for books in genre or sub-genre. For example, assume that your genre structure is similar to the following::"
msgstr ""

#: ../../sub_groups.rst:48
# 95af527bb99b4e19af27b17d19232d68
msgid "By using the hierarchy feature, you can see these genres in the tag browser in tree form, as shown in the screen image. In this example the outermost level (Genre) is a custom column that contains the genres. Genres containing sub-genres appear with a small triangle next to them. Clicking on that triangle will open the item and show the sub-genres, as you can see with History and Science Fiction."
msgstr ""

#: ../../sub_groups.rst:50
# f53b5dc4959e4bcba84f5f79c651abd1
msgid "Clicking on a genre can search for all books with that genre or children of that genre. For example, clicking on Science Fiction can give all three of the child genres, Alternate History, Military, and Space Opera. Clicking on Alternate History will give books in that genre, ignoring those in Military and Space Opera. Of course, a book can have multiple genres. If a book has both Space Opera and Military genres, then you will see that book if you click on either genre. Searching is discussed in more detail below."
msgstr ""

#: ../../sub_groups.rst:52
# 7e3bde8d17b144408e8798af1c657b9c
msgid "Another thing you can see from the image is that the genre Military appears twice, once under History and once under Science Fiction. Because the genres are in a hierarchy, these are two separate genres. A book can be in one, the other, or (doubtfully in this case) both. For example, the books in Winston Churchill's \"The Second World War\" could be in \"History.Military\". David Weber's Honor Harrington books could be in \"Science Fiction.Military\", and for that matter also in \"Science Fiction.Space Opera.\""
msgstr ""

#: ../../sub_groups.rst:54
# 65db4689d5a9461e9af0c4437d52f088
msgid "Once a genre exists, that is at least one book has that genre, you can easily apply it to other books by dragging the books from the library view onto the genre you want the books to have. You can also apply genres in the metadata editors; more on this below."
msgstr ""

#: ../../sub_groups.rst:57
# 82d7b3f0fdbe4e46acc1693e7584ab09
msgid "Setup"
msgstr ""

#: ../../sub_groups.rst:59
# 07b31cb2258644a2ab7477d054c41d6a
msgid "By now, your question might be \"How was all of this up?\" There are three steps: 1) create the custom column, 2) tell |app| that the new column is to be treated as a hierarchy, and 3) add genres."
msgstr ""

#: ../../sub_groups.rst:61
# d0527aeecc7f485a96bcec3cdb6faa0d
msgid "You create the custom column in the usual way, using Preferences -> Add your own columns. This example uses \"#genre\" as the lookup name and \"Genre\" as the column heading. The column type is \"Comma-separated text, like tags, shown in the tag browser.\""
msgstr ""

#: ../../sub_groups.rst:66
# 3d93955e8fe948dd853d73a2b682160b
msgid "Then after restarting |app|, you must tell |app| that the column is to be treated as a hierarchy. Go to Preferences -> Look and Feel -> Tag Browser and enter the lookup name \"#genre\" into the \"Categories with hierarchical items\" box. Press Apply, and you are done with setting up."
msgstr ""

#: ../../sub_groups.rst:71
# 455686ccd68d4cb28d997b8c72f69ef7
msgid "At the point there are no genres in the column. We are left with the last step: how to apply a genre to a book. A genre does not exist in |app| until it appears on at least one book. To learn how to apply a genre for the first time, we must go into some detail about what a genre looks like in the metadata for a book."
msgstr ""

#: ../../sub_groups.rst:73
# e3c73f0d1a91475c8c9172713009ee2e
msgid "A hierarchy of 'things' is built by creating an item consisting of phrases separated by periods. Continuing the genre example, these items would \"History.Military\", \"Mysteries.Vampire\", \"Science Fiction.Space Opera\", etc. Thus to create a new genre, you pick a book that should have that genre, edit its metadata, and enter the new genre into the column you created. Continuing our example, if you want to assign a new genre \"Comics\" with a sub-genre \"Superheroes\" to a book, you would 'edit metadata' for that (comic) book, choose the Custom metadata tab, and then enter \"Comics.Superheroes\" as shown in the following (ignore the other custom columns):"
msgstr ""

#: ../../sub_groups.rst:78
# 5e0f39c4b6dc4d9487e214faa65250de
msgid "After doing the above, you see in the tag browser:"
msgstr ""

#: ../../sub_groups.rst:83
# c7abfbb9fc2544e481b88c84a458fee0
msgid "From here on, to apply this new genre to a book (a comic book, presumably), you can either drag the book onto the genre, or add it to the book using edit metadata in exactly the same way as done above."
msgstr ""

#: ../../sub_groups.rst:86
# 692e63b56236419c8277ca1ad62895ae
msgid "Searching"
msgstr ""

#: ../../sub_groups.rst:91
# 86ce77248bbb4ce89da2b4a6f2fc1438
msgid "The easiest way to search for genres is using the tag browser, clicking on the genre you wish to see. Clicking on a genre with children will show you books with that genre and all child genres. However, this might bring up a question. Just because a genre has children doesn't mean that it isn't a genre in its own right. For example, a book can have the genre \"History\" but not \"History.Military\". How do you search for books with only \"History\"?"
msgstr ""

#: ../../sub_groups.rst:93
# 07210f0cf05e4b3e97f31a14f3463f74
msgid "The tag browser search mechanism knows if an item has children. If it does, clicking on the item cycles through 5 searches instead of the normal three. The first is the normal green plus, which shows you books with that genre only (e.g., History). The second is a doubled plus (shown above), which shows you books with that genre and all sub-genres (e.g., History and History.Military). The third is the normal red minus, which shows you books without that exact genre. The fourth is a doubled minus, which shows you books without that genre or sub-genres. The fifth is back to the beginning, no mark, meaning no search."
msgstr ""

#: ../../sub_groups.rst:96
# 662a974ffe934a3e84ee264cd7e279e6
msgid "Restrictions"
msgstr ""

#: ../../sub_groups.rst:98
# 9318a1672e5349308ddf18ba8caca823
msgid "If you search for a genre then create a saved search for it, you can use the 'restrict to' box to create a virtual library of books with that genre. This is useful if you want to do other searches within the genre or to manage/update metadata for books in the genre. Continuing our example, you can create a saved search named 'History.Japanese' by first clicking on the genre Japanese in the tag browser to get a search into the search box, entering History.Japanese into the saved search box, then pushing the \"save search\" button (the green box with the white plus, on the right-hand side)."
msgstr ""

#: ../../sub_groups.rst:103
# 5dbaa67e7f6748acbd79ce82c78669c1
msgid "After creating the saved search, you can use it as a restriction."
msgstr ""

#: ../../sub_groups.rst:109
# 70f9886c8af8437cb29eb2fbf51c5b76
msgid "Useful Template Functions"
msgstr ""

#: ../../sub_groups.rst:111
# c99f2c32ed294178b71c653f6dbdea78
msgid "You might want to use the genre information in a template, such as with save to disk or send to device. The question might then be \"How do I get the outermost genre name or names?\" A |app| template function, subitems, is provided to make doing this easier."
msgstr ""

#: ../../sub_groups.rst:113
# 86db1a647e33435a8c1ef8996e0fc73f
msgid "For example, assume you want to add the outermost genre level to the save-to-disk template to make genre folders, as in \"History/The Gathering Storm - Churchill, Winston\". To do this, you must extract the first level of the hierarchy and add it to the front along with a slash to indicate that it should make a folder. The template below accomplishes this::"
msgstr ""

#: ../../sub_groups.rst:117
# 97cd9b0e881543e2875185e0c6371e90
msgid "See :ref:`The template language <templatelangcalibre>` for more information templates and the :func:`subitems` function."
msgstr ""

