# SOME DESCRIPTIVE TITLE.
# Copyright (C) Kovid Goyal
# This file is distributed under the same license as the calibre package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: calibre\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-09 09:04+0530\n"
"PO-Revision-Date: 2014-07-05 16:50+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Georgian (http://www.transifex.com/projects/p/calibre/language/ka/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ka\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 281622101fda4bf58b0449555c2b8d4b
#: ../../polish.rst:7
msgid "API Documentation for the ebook editing tools"
msgstr ""

# 79e798afa1da42c29ba374311f96010f
#: ../../polish.rst:9
msgid ""
"The ebook editing tools consist of a "
":class:`calibre.ebooks.oeb.polish.container.Container` object that "
"represents a book as a collection of HTML + resource files, and various "
"tools that can be used to perform operations on the container. All the tools"
" are in the form of module level functions in the various "
"``calibre.ebooks.oeb.polish.*`` modules."
msgstr ""

# 394ce38c90464baeac957c705ee49992
#: ../../polish.rst:18
msgid "You obtain a container object for a book at a path like this::"
msgstr ""

# d142fd025d4d4bd1840a602b53cabcaa
#: ../../polish.rst:23
msgid ""
"If you are writing a plugin for the ebook editor, you get the current "
"container for the book being edited like this::"
msgstr ""

# 1f8bb0f0a51a4b768635bcd0675e6bee
#: ../../polish.rst:33
msgid "The Container object"
msgstr ""

# ee6f4484a88742aa91359a77a6276747
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:1
msgid ""
"A container represents an Open EBook as a directory full of files and an opf"
" file. There are two important concepts:"
msgstr ""

# d8320ba10d944b1caf520e9fabce6b91
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:4
msgid ""
"The root directory. This is the base of the ebook. All the ebooks files are "
"inside this directory or in its sub-directories."
msgstr ""

# 08bd9de09bb74a7cb08ff5cccb3acebd
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:7
msgid ""
"Names: These are paths to the books' files relative to the root directory. "
"They always contain POSIX separators and are unquoted. They can be thought "
"of as canonical identifiers for files in the book. Most methods on the "
"container object work with names. Names are always in the NFC unicode normal"
" form."
msgstr ""

# 13dda2d94dc54c6ba8f28a672569c24e
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:13
msgid ""
"Clones: the container object supports efficient on-disk cloning, which is "
"used to implement checkpoints in the ebook editor. In order to make this "
"work, you should never access files on the filesystem directly. Instead, use"
" :meth:`raw_data` or :meth:`open` to read/write to component files in the "
"book."
msgstr ""

# dca129787e3b4cf8b037ed53050f86ff
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container:18
msgid ""
"When converting between hrefs and names use the methods provided by this "
"class, they assume all hrefs are quoted."
msgstr ""

# 5475f9a21ab84991b3a2c9cfd579b53a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.abspath_to_name:1
msgid "Convert an absolute path to a canonical name relative to :attr:`root`"
msgstr ""

# b5c0729d529d4a88a4242c8189e51715
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.abspath_to_name:3
msgid ""
"The base directory. By default the root for this container object is used."
msgstr ""

# 27e5e6e1c0ee4a45bdaec7a74a5cc9e1
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.add_file:1
msgid ""
"Add a file to this container. Entries for the file are automatically created"
" in the OPF manifest and spine (if the file is a text document)"
msgstr ""

# 0baf9688c0ae41488af21dd305c948ab
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.add_name_to_manifest:1
msgid ""
"Add an entry to the manifest for a file with the specified name. Returns the"
" manifest id."
msgstr ""

# 758844f22fac45da8b2682dd9e9466e1
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.book_type:1
msgid "The type of book (epub for EPUB files and azw3 for AZW3 files)"
msgstr ""

# 7eef0e1184264fb58af978e12daa2d13
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.commit:1
msgid ""
"Commit all dirtied parsed objects to the filesystem and write out the ebook "
"file at outpath. :param output: The path to write the saved ebook file to. "
"If None, the path of the original book file is used. :param keep_parsed: If "
"True the parsed representations of committed items are kept in the cache."
msgstr ""

# 11c4dc273a2640b8ba5ab5517b4ae6aa
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.commit_item:1
msgid ""
"Commit a parsed object to disk (it is serialized and written to the "
"underlying file). If ``keep_parsed`` is True the parsed representation is "
"retained in the cache. See also: :meth:`parsed`"
msgstr ""

# f320641e74e944fb927446353069ee8c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.decode:1
msgid "Automatically decode ``data`` into a ``unicode`` object."
msgstr ""

# 9c4de69bc8da4ed0a925efced5e1a546
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.decode:3
msgid ""
"Normalize returned unicode to the NFC normal form as is required by both the"
" EPUB and AZW3 formats."
msgstr ""

# 707f829bbd2444d09f991ae150fc9058
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.dirty:1
msgid ""
"Mark the parsed object corresponding to name as dirty. See also: "
":meth:`parsed`."
msgstr ""

# 187301ced7a74e538b69ad2ddeaeea71
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.exists:1
msgid ""
"True iff a file corresponding to the canonical name exists. Note that this "
"function suffers from the limitations of the underlying OS filesystem, in "
"particular case (in)sensitivity. So on a case insensitive filesystem this "
"will return True even if the case of name is different from the case of the "
"underlying filesystem file. See also :meth:`has_name`"
msgstr ""

# c94b543cf29243f8a62d8473c5a7d862
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.filesize:1
msgid ""
"Return the size in bytes of the file represented by the specified canonical "
"name. Automatically handles dirtied parsed objects. See also: :meth:`parsed`"
msgstr ""

# 59e6fd55119944078417f96391106f86
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.generate_item:1
msgid ""
"Add an item to the manifest with href derived from the given name. Ensures "
"uniqueness of href and id automatically. Returns generated item."
msgstr ""

# b81d8d6bde204b989b69c5e7a74b9779
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.guess_type:1
msgid ""
"Return the expected mimetype for the specified file name based on its "
"extension."
msgstr ""

# da703255a47f48be88dceccf432adaf9
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.guide_type_map:1
msgid "Mapping of guide type to canonical name"
msgstr ""

# 70ec7de795ff4b458f7f5f1cf5429145
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.has_name:1
msgid ""
"Return True iff a file with the same canonical name as that specified "
"exists. Unlike :meth:`exists` this method is always case-sensitive."
msgstr ""

# 99f791c86ddc41baa2648571f0752aa7
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.href_to_name:1
msgid ""
"Convert an href (relative to base) to a name. base must be a name or None, "
"in which case self.root is used."
msgstr ""

# f9c7f2954d5b4ec8afe7accfbd2c1462
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.insert_into_xml:1
msgid ""
"Insert item into parent (or append if index is None), fixing indentation. "
"Only works with self closing items."
msgstr ""

# a94dd31194cd4256bcbab5be366f88ef
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.iterlinks:1
msgid ""
"Iterate over all links in name. If get_line_numbers is True the yields "
"results of the form (link, line_number, offset). Where line_number is the "
"line_number at which the link occurs and offset is the number of characters "
"from the start of the line. Note that offset could actually encompass "
"several lines if not zero."
msgstr ""

# f1b76db3066c4d54b414b0233051838c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.manifest_id_map:1
msgid "Mapping of manifest id to canonical names"
msgstr ""

# 4c935544e71345c1b6188bd8a15bf7f4
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.manifest_type_map:1
msgid ""
"Mapping of manifest media-type to list of canonical names of that media-type"
msgstr ""

# 15d6e54296b24b27924a29d96b9ac84e
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.mi:1
msgid ""
"The metadata of this book as a Metadata object. Note that this object is "
"constructed on the fly every time this property is requested, so use it "
"sparingly."
msgstr ""

# be343c78889f4faeb6cdc2bb177cd965
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.name_to_abspath:1
msgid "Convert a canonical name to an absolute OS dependant path"
msgstr ""

# 83e78fd4ac4447bba29f433eabd5fa48
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.name_to_href:1
msgid ""
"Convert a name to a href relative to base, which must be a name or None in "
"which case self.root is used as the base"
msgstr ""

# 0788af765da74aa883eb323dd140a121
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_must_not_be_changed:1
msgid ""
"Set of names that must never be renamed. Depends on the ebook file format."
msgstr ""

# 822e471bbcff41f0913c3c3fa5438c91
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_must_not_be_removed:1
msgid ""
"Set of names that must never be deleted from the container. Depends on the "
"ebook file format."
msgstr ""

# eb569ed673c242b2ba00191ae5a05293
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.names_that_need_not_be_manifested:1
msgid ""
"Set of names that are allowed to be missing from the manifest. Depends on "
"the ebook file format."
msgstr ""

# 3429e045845d428186e64467698ab2de
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.open:1
msgid ""
"Open the file pointed to by name for direct read/write. Note that this will "
"commit the file if it is dirtied and remove it from the parse cache. You "
"must finish with this file before accessing the parsed version of it again, "
"or bad things will happen."
msgstr ""

# f5d621c261f74251bec6c48a510bcc13
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf:1
msgid "The parsed OPF file"
msgstr ""

# 0e8aab97c6ad4aa48a7bac769caacf4a
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_get_or_create:1
msgid ""
"Convenience method to either return the first XML element with the specified"
" name or create it under the opf:package element and then return it, if it "
"does not already exist."
msgstr ""

# 2dca6b20c1d94b35b71b4da6525d19d9
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.opf_xpath:1
msgid ""
"Convenience method to evaluate an XPath expression on the OPF file, has the "
"opf: and dc: namespace prefixes pre-defined."
msgstr ""

# 2aa77041957e4bcf93513d4c02c5e6c8
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.parsed:1
msgid ""
"Return a parsed representation of the file specified by name. For HTML and "
"XML files an lxml tree is returned. For CSS files a cssutils stylesheet is "
"returned. Note that parsed objects are cached for performance. If you make "
"any changes to the parsed object, you must call :meth:`dirty` so that the "
"container knows to update the cache. See also :meth:`replace`."
msgstr ""

# 4c885705fd5047999f21502a7eeb182c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:1
msgid "Return the raw data corresponding to the file specified by name"
msgstr ""

# f579fdc19b0a4ae19329eccbe20b3b4b
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:3
msgid ""
"If True and the file has a text based mimetype, decode it and return a "
"unicode object instead of raw bytes."
msgstr ""

# be2decd029fe4e20b9dfbb36e9f939b1
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.raw_data:4
msgid ""
"If True the returned unicode object is normalized to the NFC normal form as "
"is required for the EPUB and AZW3 file formats."
msgstr ""

# 0feb2816b3084c15adbd98b0024c5cb1
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.relpath:1
msgid ""
"Convert an absolute path (with os separators) to a path relative to base "
"(defaults to self.root). The relative path is *not* a name. Use "
":meth:`abspath_to_name` for that."
msgstr ""

# 63e81a9d1180409e87ce4f2a1b63e750
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_from_spine:1
msgid ""
"Remove the specified items (by canonical name) from the spine. If "
"``remove_if_no_longer_in_spine`` is True, the items are also deleted from "
"the book, not just from the spine."
msgstr ""

# a38be084481f4ce5800475c9174273fa
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_from_xml:1
msgid ""
"Removes item from parent, fixing indentation (works only with self closing "
"items)"
msgstr ""

# c31ac124cbc449908010a4534a210eff
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.remove_item:1
msgid ""
"Remove the item identified by name from this container. This removes all "
"references to the item in the OPF manifest, guide and spine as well as from "
"any internal caches."
msgstr ""

# 10555034b54e448191d71a0a93b8feda
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.rename:1
msgid ""
"Renames a file from current_name to new_name. It automatically rebases all "
"links inside the file if the directory the file is in changes. Note however,"
" that links are not updated in the other files that could reference this "
"file. This is for performance, such updates should be done once, in bulk."
msgstr ""

# 324e103806794adc9f281ba3fec6c213
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.replace:1
msgid ""
"Replace the parsed object corresponding to name with obj, which must be a "
"similar object, i.e. an lxml tree for HTML/XML or a cssutils stylesheet for "
"a CSS file."
msgstr ""

# c379336b325b4502a14944f5b8a5a4a6
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.replace_links:1
msgid ""
"Replace all links in name using replace_func, which must be a callable that "
"accepts a URL and returns the replaced URL. It must also have a 'replaced' "
"attribute that is set to True if any actual replacement is done. Convenient "
"ways of creating such callables are using the :class:`LinkReplacer` and "
":class:`LinkRebaser` classes."
msgstr ""

# f3dc6b9bea6f4b638940ce9196ceb1c6
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.serialize_item:1
msgid ""
"Convert a parsed object (identified by canonical name) into a bytestring. "
"See :meth:`parsed`."
msgstr ""

# bef9ab6b31c64b839789423fbddc9586
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.set_spine:1
msgid ""
"Set the spine to be spine_items where spine_items is an iterable of the form"
" (name, linear). Will raise an error if one of the names is not present in "
"the manifest."
msgstr ""

# 852d5d402a6f452fb4c7ef7eb3cd846e
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_items:1
msgid ""
"An iterator yielding canonical name for every item in the books' spine. See "
"also: :attr:`spine_iter` and :attr:`spine_items`."
msgstr ""

# f13c6d6e39d14b26965679b342b66f2c
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_iter:1
msgid ""
"An iterator that yields item, name is_linear for every item in the books' "
"spine. item is the lxml element, name is the canonical file name and "
"is_linear is True if the item is linear. See also: :attr:`spine_names` and "
":attr:`spine_items`."
msgstr ""

# 41ba9543547a41e1b41984f933fe3e22
#: ../../../src/calibre/ebooks/oeb/polish/container.pydocstring of
#: calibre.ebooks.oeb.polish.container.Container.spine_names:1
msgid ""
"An iterator yielding name and is_linear for every item in the books' spine. "
"See also: :attr:`spine_iter` and :attr:`spine_items`."
msgstr ""

# 0997d9f8e8b9440c952ab383ba00b0e0
#: ../../polish.rst:39
msgid "Managing component files in a container"
msgstr ""

# 1fec266161aa401e996c014d70e9f397
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:1
msgid ""
"Replace links to files in the container. Will iterate over all files in the "
"container and change the specified links in them."
msgstr ""

# 14c34f6c1d1846638f5004a264dc3e1d
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:3
msgid ""
"A mapping of old canonical name to new canonical name. For example: "
":code:`{'images/old.png': 'images/new.png'}`"
msgstr ""

# 486282dac9fe4c88946533d7451eaeef
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:4
msgid ""
"A callable that takes two arguments ``(name, anchor)`` and returns a new "
"anchor. This is useful if you need to change the anchors in HTML files. By "
"default, it does nothing."
msgstr ""

# 4bceaa1672924a5296d3fe4b6a62bb6f
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.replace_links:7
msgid "If False, links are not replaced in the OPF file."
msgstr ""

# b2757a1c79974db58b154815b2ccd02c
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.rename_files:1
msgid ""
"Rename files in the container, automatically updating all links to them."
msgstr ""

# 55db82d0dacc4964b023b174a3c66eb0
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.rename_files:3
msgid ""
"A mapping of old canonical name to new canonical name, for example: "
":code:`{'text/chapter1.html': 'chapter1.html'}`."
msgstr ""

# 78664343cdf6407cafefcb79ad04f549
#: ../../../src/calibre/ebooks/oeb/polish/replace.pydocstring of
#: calibre.ebooks.oeb.polish.replace.get_recommended_folders:1
msgid ""
"Return the folders that are recommended for the given filenames. The "
"recommendation is based on where the majority of files of the same type are "
"located in the container. If no files of a particular type are present, the "
"recommended folder is assumed to be the folder containing the OPF file."
msgstr ""

# 903a2f193b3245cc898bcefb83e541a9
#: ../../polish.rst:50
msgid "Pretty printing and auto fixing parse errors"
msgstr ""

# 22d0bb101c9c4ef9afc7c21fd409af72
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.fix_html:1
msgid ""
"Fix any parsing errors in the HTML represented as a string in raw. Fixing is"
" done using the HTML 5 parsing algorithm."
msgstr ""

# 870bace0a7ad44cfae97f47faa9083d5
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.fix_all_html:1
msgid ""
"Fix any parsing errors in all HTML files in the container. Fixing is done "
"using the HTML 5 parsing algorithm."
msgstr ""

# 4f527519ca454da2a127a81b24fc4e1a
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_html:1
msgid "Pretty print the HTML represented as a string in raw"
msgstr ""

# 01fb612d69034848a95e79c0eaf731f5
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_css:1
msgid "Pretty print the CSS represented as a string in raw"
msgstr ""

# 982fa251bdb14a9e87479a73042517c5
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_xml:1
msgid ""
"Pretty print the XML represented as a string in raw. If ``name`` is the name"
" of the OPF, extra OPF-specific prettying is performed."
msgstr ""

# 00d42ffdcf574e559e98d0e2e4176289
#: ../../../src/calibre/ebooks/oeb/polish/pretty.pydocstring of
#: calibre.ebooks.oeb.polish.pretty.pretty_all:1
msgid "Pretty print all HTML/CSS/XML files in the container"
msgstr ""

# c53ccc3dd7f147f2a013c44ce3821d37
#: ../../polish.rst:68
msgid "Managing book jackets"
msgstr ""

# 3b5b87127cfc47a59a4ed14d650b034f
#: ../../../src/calibre/ebooks/oeb/polish/jacket.pydocstring of
#: calibre.ebooks.oeb.polish.jacket.remove_jacket:1
msgid ""
"Remove an existing jacket, if ant. Returns False if no existing jacket was "
"found."
msgstr ""

# c72e4f13ebb741c0927a430f98feec5c
#: ../../../src/calibre/ebooks/oeb/polish/jacket.pydocstring of
#: calibre.ebooks.oeb.polish.jacket.add_or_replace_jacket:1
msgid ""
"Either create a new jacket from the book's metadata or replace an existing "
"jacket. Returns True if an existing jacket was replaced."
msgstr ""

# f0de21e7fbba4357808b1162d733a745
#: ../../polish.rst:77
msgid "Splitting and merging of files"
msgstr ""

# e1dcd14ed1ef410f9e86237ccad7dd9c
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:1
msgid ""
"Split the file specified by name at the position specified by loc_or_xpath. "
"Splitting automatically migrates all links and references to the affected "
"files."
msgstr ""

# 05d6cbe001544589a6b66c5cc187b7ea
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:5
msgid ""
"Should be an XPath expression such as //h:div[@id=\"split_here\"]. Can also "
"be a *loc* which is used internally to implement splitting in the preview "
"panel."
msgstr ""

# fe5026f51c494abc86520152ed7e8fcb
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:8
msgid ""
"If True the split occurs before the identified element otherwise after it."
msgstr ""

# 223cb8717aab42b7b334800f75337657
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.split:9
msgid "Used internally"
msgstr ""

# b621dddbbeab4e30bca5f39cedbec159
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.multisplit:1
msgid ""
"Split the specified file at multiple locations (all tags that match the "
"specified XPath expression. See also: :func:`split`. Splitting automatically"
" migrates all links and references to the affected files."
msgstr ""

# ac764e4b273141329822c780bc19d0b3
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.multisplit:5
msgid ""
"If True the splits occur before the identified element otherwise after it."
msgstr ""

# c38fe02e1b394cc0a98b37f95f333ade
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:1
msgid ""
"Merge the specified files into a single file, automatically migrating all "
"links and references to the affected files. The file must all either be HTML"
" or CSS files."
msgstr ""

# 323850f550174d2a9df7e76aeb7c4f9a
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:4
msgid "Must be either ``'text'`` for HTML files or ``'styles'`` for CSS files"
msgstr ""

# 9b847b04ea6c458595ea5929ad22d118
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:5
msgid "The list of files to be merged"
msgstr ""

# 06e9a81512694b01b7118c28327d0dca
#: ../../../src/calibre/ebooks/oeb/polish/split.pydocstring of
#: calibre.ebooks.oeb.polish.split.merge:6
msgid ""
"Which of the merged files is the *master* file, that is, the file that will "
"remain after merging."
msgstr ""

# 4c82892e521e4f238b1f90beef271ad3
#: ../../polish.rst:88
msgid "Managing covers"
msgstr ""

# 5658b5a7240b4411b09d53472e8a4e8a
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:1
msgid "Set the cover of the book to the image pointed to by cover_path."
msgstr ""

# 0d961e86214d4057b56134ea7953ccbf
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:3
msgid ""
"Either the absolute path to an image file or the canonical name of an image "
"in the book. When using an image int he book, you must also set options, see"
" below."
msgstr ""

# 2e6077a63b144acb8091ea3f2b46ee08
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:6
msgid ""
"An optional callable that takes a single argument. It will be called with "
"information about the tasks being processed."
msgstr ""

# f8435d6672a94aceab885d88884b9e34
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.set_cover:8
msgid ""
"None or a dictionary that controls how the cover is set. The dictionary can "
"have entries: **keep_aspect**: True or False  (Preserve aspect ratio of "
"covers in EPUB) **no_svg**: True or False  (Use an SVG cover wrapper in the "
"EPUB titlepage) **existing**: True or False  (``cover_path`` refers to an "
"existing image in the book)"
msgstr ""

# 86dae5d5c2d14af1b2e5cb643d97560b
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_cover:1
msgid "Mark the specified image as the cover image."
msgstr ""

# 49cd364bb824404a849710fa2aec74ce
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_titlepage:1
msgid "Mark the specified HTML file as the titlepage of the EPUB."
msgstr ""

# d0645effe3f04eaa82e2939c84f58c50
#: ../../../src/calibre/ebooks/oeb/polish/cover.pydocstring of
#: calibre.ebooks.oeb.polish.cover.mark_as_titlepage:3
msgid "If True the HTML file is moved to the start of the spine"
msgstr ""

# 3fea00ba57d54435bea0afc50d424883
#: ../../polish.rst:99
msgid "Working with CSS"
msgstr ""

# d22190bc5d794b8c9bd131ae44bec40f
#: ../../../src/calibre/ebooks/oeb/polish/fonts.pydocstring of
#: calibre.ebooks.oeb.polish.fonts.change_font:1
msgid ""
"Change a font family from old_name to new_name. Changes all occurrences of "
"the font family in stylesheets, style tags and style attributes. If the "
"old_name refers to an embedded font, it is removed. You can set new_name to "
"None to remove the font family instead of changing it."
msgstr ""

# 2ebfd0f905c743259919bd7c9f6059e4
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:1
msgid ""
"Remove all unused CSS rules from the book. An unused CSS rule is one that "
"does not match any actual content."
msgstr ""

# 7ef021a2f7b14afcb67819ccc4a9b2d9
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:3
msgid ""
"An optional callable that takes a single argument. It is called with "
"information about the operations being performed."
msgstr ""

# 389d8dbb722c4b1f8ee8013bca126832
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.remove_unused_css:4
msgid ""
"If True, class attributes in the HTML that do not match any CSS rules are "
"also removed."
msgstr ""

# c99140ea8184446fa609ced45b4b9e6e
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:1
msgid "Remove the specified CSS properties from all CSS rules in the book."
msgstr ""

# 1ea1c361396e42958e97250929a72afe
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:3
msgid ""
"Set of properties to remove. For example: :code:`{'font-family', 'color'}`."
msgstr ""

# 05397418365b4e7e8a8c4eb4ed923d58
#: ../../../src/calibre/ebooks/oeb/polish/css.pydocstring of
#: calibre.ebooks.oeb.polish.css.filter_css:4
msgid ""
"The files from which to remove the properties. Defaults to all HTML and CSS "
"files in the book."
msgstr ""

# afcb794f6fb04e179133ffbd83091aab
#: ../../polish.rst:111
msgid "Working with the Table of Contents"
msgstr ""

# af8da4cec397457097ae38aa347a4a98
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_xpaths:1
msgid ""
"Generate a Table of Contents from a list of XPath expressions. Each "
"expression in the list corresponds to a level of the generate ToC. For "
"example: :code:`['//h:h1', '//h:h2', '//h:h3']` will generate a three level "
"table of contents from the ``<h1>``, ``<h2>`` and ``<h3>`` tags."
msgstr ""

# a3e04bba232e454c809ba5e8ba6763b2
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_links:1
msgid "Generate a Table of Contents from links in the book."
msgstr ""

# 9e35b44701a44cee8612386b435ed82c
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.from_files:1
msgid "Generate a Table of Contents from files in the book."
msgstr ""

# 66e257123b674895bd7af3228d6c570d
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.create_inline_toc:1
msgid ""
"Create an inline (HTML) Table of Contents from an existing NCX table of "
"contents."
msgstr ""

# 13a0a2492327482788c61d437cafab29
#: ../../../src/calibre/ebooks/oeb/polish/toc.pydocstring of
#: calibre.ebooks.oeb.polish.toc.create_inline_toc:3
msgid "The title for this table of contents."
msgstr ""
